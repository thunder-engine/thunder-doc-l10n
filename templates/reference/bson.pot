# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Evgeniy Prikazchikov
# This file is distributed under the same license as the Thunder Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Thunder Engine \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-15 12:05+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reference/bson.rst:3
msgid "Bson Class"
msgstr ""

#: ../../reference/bson.rst:5
msgid "Inherited: None"
msgstr ""

#: ../../reference/bson.rst:9
msgid "Description"
msgstr ""

#: ../../reference/bson.rst:11
msgid "Binary JSON format parser."
msgstr ""

#: ../../reference/bson.rst:13
msgid "This class implements Binary JSON parser with Variant based DOM structure input/output. It allows to serialize and deserialize object structures represented in Variant DOM structure."
msgstr ""

#: ../../reference/bson.rst:15
msgid "Example:"
msgstr ""

#: ../../reference/bson.rst:21
msgid "Public Methods"
msgstr ""

#: ../../reference/bson.rst:23
msgid "None"
msgstr ""

#: ../../reference/bson.rst:27
msgid "Static Methods"
msgstr ""

#: ../../reference/bson.rst:30
msgid ":ref:`Variant<api_Variant>`"
msgstr ""

#: ../../reference/bson.rst:30
msgid ":ref:`load<api_Bson_load>` (const ByteArray & data, MetaType::Type  type = MetaType::VARIANTLIST)"
msgstr ""

#: ../../reference/bson.rst:32
msgid ":ref:`ByteArray<api_ByteArray>`"
msgstr ""

#: ../../reference/bson.rst:32
msgid ":ref:`save<api_Bson_save>` (const Variant & data)"
msgstr ""

#: ../../reference/bson.rst:37
msgid "Methods Description"
msgstr ""

#: ../../reference/bson.rst:41
msgid ":ref:`Variant<api_Variant>`  **Bson::load** (:ref:`ByteArray<api_ByteArray>` & *data*, :ref:`MetaType::Type<api_MetaType::Type>`  *type* = MetaType::VARIANTLIST)"
msgstr ""

#: ../../reference/bson.rst:43
msgid "Returns deserialized binary *data* as Variant based DOM structure with expected *type* of container (can be MetaType::VARIANTLIST or MetaType::VARIANTMAP)."
msgstr ""

#: ../../reference/bson.rst:49
msgid ":ref:`ByteArray<api_ByteArray>`  **Bson::save** (:ref:`Variant<api_Variant>` & *data*)"
msgstr ""

#: ../../reference/bson.rst:51
msgid "Returns serialized *data* as binary buffer."
msgstr ""
