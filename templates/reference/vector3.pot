# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Evgeniy Prikazchikov
# This file is distributed under the same license as the Thunder Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Thunder Engine \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-15 12:05+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reference/vector3.rst:3
msgid "Vector3 Class"
msgstr ""

#: ../../reference/vector3.rst:5
msgid "Inherited: None"
msgstr ""

#: ../../reference/vector3.rst:9
msgid "Description"
msgstr ""

#: ../../reference/vector3.rst:11
msgid "The Vector3 class represents a vector or vertex in 3D space."
msgstr ""

#: ../../reference/vector3.rst:13
msgid "Vectors are one of the main building blocks of 3D representation and drawing. They consist of three coordinates, traditionally called x, y, and z."
msgstr ""

#: ../../reference/vector3.rst:15
msgid "The Vector3 class can also be used to represent vertices in 3D space. We therefore do not need to provide a separate vertex class."
msgstr ""

#: ../../reference/vector3.rst:17
msgid "Note: By design values in the Vector3 instance are stored as float. This means that on platforms where the areal arguments to Vector3 functions are represented by double values, it is possible to lose precision."
msgstr ""

#: ../../reference/vector3.rst:23
msgid "Public Methods"
msgstr ""

#: ../../reference/vector3.rst:26
msgid ":ref:`Vector3<api_Vector3_Vector3>` ()"
msgstr ""

#: ../../reference/vector3.rst:28
msgid ":ref:`Vector3<api_Vector3_Vector3>` (areal  v)"
msgstr ""

#: ../../reference/vector3.rst:30
msgid ":ref:`Vector3<api_Vector3_Vector3>` (areal  x, areal  y, areal  z)"
msgstr ""

#: ../../reference/vector3.rst:32
msgid ":ref:`Vector3<api_Vector3_Vector3>` (const Vector2 & v, areal  z)"
msgstr ""

#: ../../reference/vector3.rst:34
msgid ":ref:`Vector3<api_Vector3_Vector3>` (const areal * v)"
msgstr ""

#: ../../reference/vector3.rst:36
#: ../../reference/vector3.rst:38
#: ../../reference/vector3.rst:50
#: ../../reference/vector3.rst:52
#: ../../reference/vector3.rst:56
#: ../../reference/vector3.rst:60
#: ../../reference/vector3.rst:62
#: ../../reference/vector3.rst:66
msgid ":ref:`Vector3<api_Vector3>`"
msgstr ""

#: ../../reference/vector3.rst:36
msgid ":ref:`abs<api_Vector3_abs>` () const"
msgstr ""

#: ../../reference/vector3.rst:38
msgid ":ref:`cross<api_Vector3_cross>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:40
#: ../../reference/vector3.rst:42
#: ../../reference/vector3.rst:44
#: ../../reference/vector3.rst:46
#: ../../reference/vector3.rst:78
msgid ":ref:`areal<api_areal>`"
msgstr ""

#: ../../reference/vector3.rst:40
msgid ":ref:`dot<api_Vector3_dot>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:42
msgid ":ref:`length<api_Vector3_length>` () const"
msgstr ""

#: ../../reference/vector3.rst:44
msgid ":ref:`normalize<api_Vector3_normalize>` ()"
msgstr ""

#: ../../reference/vector3.rst:46
msgid ":ref:`sqrLength<api_Vector3_sqrLength>` () const"
msgstr ""

#: ../../reference/vector3.rst:48
#: ../../reference/vector3.rst:70
#: ../../reference/vector3.rst:72
#: ../../reference/vector3.rst:74
msgid ":ref:`bool<api_bool>`"
msgstr ""

#: ../../reference/vector3.rst:48
msgid ":ref:`operator!=<api_Vector3_operator!=>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:50
msgid ":ref:`operator*<api_Vector3_operator*>` (areal  factor) const"
msgstr ""

#: ../../reference/vector3.rst:52
msgid ":ref:`operator*<api_Vector3_operator*>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:54
#: ../../reference/vector3.rst:58
#: ../../reference/vector3.rst:64
#: ../../reference/vector3.rst:68
msgid ":ref:`Vector3<api_Vector3>` &"
msgstr ""

#: ../../reference/vector3.rst:54
msgid ":ref:`operator*=<api_Vector3_operator*=>` (areal  factor)"
msgstr ""

#: ../../reference/vector3.rst:56
msgid ":ref:`operator+<api_Vector3_operator+>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:58
msgid ":ref:`operator+=<api_Vector3_operator+=>` (const Vector3 & vector)"
msgstr ""

#: ../../reference/vector3.rst:60
msgid ":ref:`operator-<api_Vector3_operator->` () const"
msgstr ""

#: ../../reference/vector3.rst:62
msgid ":ref:`operator-<api_Vector3_operator->` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:64
msgid ":ref:`operator-=<api_Vector3_operator-=>` (const Vector3 & vector)"
msgstr ""

#: ../../reference/vector3.rst:66
msgid ":ref:`operator/<api_Vector3_operator/>` (areal  divisor) const"
msgstr ""

#: ../../reference/vector3.rst:68
msgid ":ref:`operator/=<api_Vector3_operator/=>` (areal  divisor)"
msgstr ""

#: ../../reference/vector3.rst:70
msgid ":ref:`operator<<api_Vector3_operator<>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:72
msgid ":ref:`operator==<api_Vector3_operator==>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:74
msgid ":ref:`operator><api_Vector3_operator>>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:76
msgid ":ref:`areal<api_areal>` &"
msgstr ""

#: ../../reference/vector3.rst:76
msgid ":ref:`operator[]<api_Vector3_operator[]>` (int  i)"
msgstr ""

#: ../../reference/vector3.rst:78
msgid ":ref:`operator[]<api_Vector3_operator[]>` (int  i) const"
msgstr ""

#: ../../reference/vector3.rst:83
msgid "Static Methods"
msgstr ""

#: ../../reference/vector3.rst:85
msgid "None"
msgstr ""

#: ../../reference/vector3.rst:89
msgid "Methods Description"
msgstr ""

#: ../../reference/vector3.rst:93
msgid "**Vector3::Vector3** ()"
msgstr ""

#: ../../reference/vector3.rst:95
msgid "Constructs a null vector, i.e. with coordinates (0, 0, 0)."
msgstr ""

#: ../../reference/vector3.rst:101
msgid "**Vector3::Vector3** (:ref:`areal<api_areal>`  *v*)"
msgstr ""

#: ../../reference/vector3.rst:103
msgid "Constructs a *v*ector with coordinates (v)."
msgstr ""

#: ../../reference/vector3.rst:109
msgid "**Vector3::Vector3** (:ref:`areal<api_areal>`  *x*, :ref:`areal<api_areal>`  *y*, :ref:`areal<api_areal>`  *z*)"
msgstr ""

#: ../../reference/vector3.rst:111
msgid "Constructs a vector with coordinates (x, *y*, *z*)."
msgstr ""

#: ../../reference/vector3.rst:117
msgid "**Vector3::Vector3** (:ref:`Vector2<api_Vector2>` & *v*, :ref:`areal<api_areal>`  *z*)"
msgstr ""

#: ../../reference/vector3.rst:119
msgid "Constructs a 3D *v*ector from the specified 2D *v*. The *z* coordinate is set to *z*."
msgstr ""

#: ../../reference/vector3.rst:121
msgid "**See also** Vector2::Vector2()."
msgstr ""

#: ../../reference/vector3.rst:127
msgid "**Vector3::Vector3** (:ref:`areal<api_areal>` * *v*)"
msgstr ""

#: ../../reference/vector3.rst:129
msgid "Constructs a 3D *v*ector from *v* (areal[3] array)."
msgstr ""

#: ../../reference/vector3.rst:135
msgid ":ref:`Vector3<api_Vector3>`  **Vector3::abs** () const"
msgstr ""

#: ../../reference/vector3.rst:137
msgid "Returns the absplute value of this vector."
msgstr ""

#: ../../reference/vector3.rst:143
msgid ":ref:`Vector3<api_Vector3>`  **Vector3::cross** (:ref:`Vector3<api_Vector3>` & *vector*) const"
msgstr ""

#: ../../reference/vector3.rst:145
msgid "Returns the cross-product of this *vector* and given *vector*."
msgstr ""

#: ../../reference/vector3.rst:147
msgid "**See also** dot()."
msgstr ""

#: ../../reference/vector3.rst:153
msgid ":ref:`areal<api_areal>`  **Vector3::dot** (:ref:`Vector3<api_Vector3>` & *vector*) const"
msgstr ""

#: ../../reference/vector3.rst:155
msgid "Returns the dot-product of this *vector* and given *vector*."
msgstr ""

#: ../../reference/vector3.rst:157
msgid "**See also** cross()."
msgstr ""

#: ../../reference/vector3.rst:163
msgid ":ref:`areal<api_areal>`  **Vector3::length** () const"
msgstr ""

#: ../../reference/vector3.rst:165
msgid "Returns the length of this vector."
msgstr ""

#: ../../reference/vector3.rst:167
msgid "**See also** sqrLength()."
msgstr ""

#: ../../reference/vector3.rst:173
msgid ":ref:`areal<api_areal>`  **Vector3::normalize** ()"
msgstr ""

#: ../../reference/vector3.rst:175
msgid "Normalizes the currect vector in place. Returns length of prenormalized vector."
msgstr ""

#: ../../reference/vector3.rst:177
#: ../../reference/vector3.rst:187
msgid "**See also** length()."
msgstr ""

#: ../../reference/vector3.rst:183
msgid ":ref:`areal<api_areal>`  **Vector3::sqrLength** () const"
msgstr ""

#: ../../reference/vector3.rst:185
msgid "Returns the squared length of this vector."
msgstr ""

#: ../../reference/vector3.rst:193
msgid ":ref:`bool<api_bool>`  **Vector3::operator!=** (:ref:`Vector3<api_Vector3>` & *vector*) const"
msgstr ""

#: ../../reference/vector3.rst:195
msgid "Returns true if this *vector* is NOT equal to given *vector*; otherwise returns false. This operator uses an exact floating-point comparison."
msgstr ""

#: ../../reference/vector3.rst:201
msgid ":ref:`Vector3<api_Vector3>`  **Vector3::operator*** (:ref:`areal<api_areal>`  *factor*) const"
msgstr ""

#: ../../reference/vector3.rst:203
msgid "Returns a copy of this vector, multiplied by the given *factor*."
msgstr ""

#: ../../reference/vector3.rst:205
#: ../../reference/vector3.rst:215
#: ../../reference/vector3.rst:295
msgid "**See also** operator*=()."
msgstr ""

#: ../../reference/vector3.rst:211
msgid ":ref:`Vector3<api_Vector3>`  **Vector3::operator*** (:ref:`Vector3<api_Vector3>` & *vector*) const"
msgstr ""

#: ../../reference/vector3.rst:213
msgid "Returns a copy of this *vector*, multiplied by the given *vector*."
msgstr ""

#: ../../reference/vector3.rst:221
msgid ":ref:`Vector3<api_Vector3>` & **Vector3::operator*=** (:ref:`areal<api_areal>`  *factor*)"
msgstr ""

#: ../../reference/vector3.rst:223
msgid "Multiplies this vector's coordinates by the given *factor*, and returns a reference to this vector."
msgstr ""

#: ../../reference/vector3.rst:225
#: ../../reference/vector3.rst:285
msgid "**See also** operator/=()."
msgstr ""

#: ../../reference/vector3.rst:231
msgid ":ref:`Vector3<api_Vector3>`  **Vector3::operator+** (:ref:`Vector3<api_Vector3>` & *vector*) const"
msgstr ""

#: ../../reference/vector3.rst:233
msgid "Returns a Vector3 object that is the sum of the this *vector* and *vector*; each component is added separately."
msgstr ""

#: ../../reference/vector3.rst:235
#: ../../reference/vector3.rst:275
msgid "**See also** operator+=()."
msgstr ""

#: ../../reference/vector3.rst:241
msgid ":ref:`Vector3<api_Vector3>` & **Vector3::operator+=** (:ref:`Vector3<api_Vector3>` & *vector*)"
msgstr ""

#: ../../reference/vector3.rst:243
msgid "Adds the given *vector* to this *vector* and returns a reference to this *vector*."
msgstr ""

#: ../../reference/vector3.rst:245
#: ../../reference/vector3.rst:265
msgid "**See also** operator-=()."
msgstr ""

#: ../../reference/vector3.rst:251
msgid ":ref:`Vector3<api_Vector3>`  **Vector3::operator-** () const"
msgstr ""

#: ../../reference/vector3.rst:253
msgid "Returns a Vector3 object that is formed by changing the sign of all three components of the this vector."
msgstr ""

#: ../../reference/vector3.rst:255
msgid "Equivalent to Vector3(0,0,0) - vector."
msgstr ""

#: ../../reference/vector3.rst:261
msgid ":ref:`Vector3<api_Vector3>`  **Vector3::operator-** (:ref:`Vector3<api_Vector3>` & *vector*) const"
msgstr ""

#: ../../reference/vector3.rst:263
msgid "Returns a Vector3 object that is formed by subtracting *vector* from this *vector*; each component is subtracted separately."
msgstr ""

#: ../../reference/vector3.rst:271
msgid ":ref:`Vector3<api_Vector3>` & **Vector3::operator-=** (:ref:`Vector3<api_Vector3>` & *vector*)"
msgstr ""

#: ../../reference/vector3.rst:273
msgid "Subtracts the given *vector* from this *vector* and returns a reference to this *vector*."
msgstr ""

#: ../../reference/vector3.rst:281
msgid ":ref:`Vector3<api_Vector3>`  **Vector3::operator/** (:ref:`areal<api_areal>`  *divisor*) const"
msgstr ""

#: ../../reference/vector3.rst:283
msgid "Returns a copy of this vector, divided by the given *divisor*."
msgstr ""

#: ../../reference/vector3.rst:291
msgid ":ref:`Vector3<api_Vector3>` & **Vector3::operator/=** (:ref:`areal<api_areal>`  *divisor*)"
msgstr ""

#: ../../reference/vector3.rst:293
msgid "Divides this vector's coordinates by the given *divisor*, and returns a reference to this vector."
msgstr ""

#: ../../reference/vector3.rst:301
msgid ":ref:`bool<api_bool>`  **Vector3::operator<** (:ref:`Vector3<api_Vector3>` & *vector*) const"
msgstr ""

#: ../../reference/vector3.rst:303
msgid "Returns true if this *vector* is less than *vector*; otherwise returns false. This operator uses an exact floating-point comparison."
msgstr ""

#: ../../reference/vector3.rst:309
msgid ":ref:`bool<api_bool>`  **Vector3::operator==** (:ref:`Vector3<api_Vector3>` & *vector*) const"
msgstr ""

#: ../../reference/vector3.rst:311
msgid "Returns true if this *vector* is equal to given *vector*; otherwise returns false. This operator uses an exact floating-point comparison."
msgstr ""

#: ../../reference/vector3.rst:317
msgid ":ref:`bool<api_bool>`  **Vector3::operator>** (:ref:`Vector3<api_Vector3>` & *vector*) const"
msgstr ""

#: ../../reference/vector3.rst:319
msgid "Returns true if this *vector* is bigger than given *vector*; otherwise returns false. This operator uses an exact floating-point comparison."
msgstr ""

#: ../../reference/vector3.rst:325
msgid ":ref:`areal<api_areal>` & **Vector3::operator[]** (:ref:`int<api_int>`  *i*)"
msgstr ""

#: ../../reference/vector3.rst:327
msgid "Returns the component of the vector at *i*ndex position *i* as a modifiable reference. *i* must be a valid *i*ndex position *i*n the vector (i.e., 0 <= *i* < 3)."
msgstr ""

#: ../../reference/vector3.rst:333
msgid ":ref:`areal<api_areal>`  **Vector3::operator[]** (:ref:`int<api_int>`  *i*) const"
msgstr ""

#: ../../reference/vector3.rst:335
msgid "Returns the component of the vector at *i*ndex position. *i* must be a valid *i*ndex position *i*n the vector (i.e., 0 <= *i* < 3)."
msgstr ""
