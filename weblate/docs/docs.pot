# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Evgeniy Prikazchikov
# This file is distributed under the same license as the Thunder Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Thunder Engine \n"
"Report-Msgid-Bugs-To: https://github.com/godotengine/godot-docs-l10n\n"
"POT-Creation-Date: 2020-10-15 12:05+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../index.rst:4
msgid "Thunder Engine"
msgstr ""

#: ../../index.rst:2
msgid "Thunder Documentation"
msgstr ""

#: ../../index.rst:15
msgid "Indices and tables"
msgstr ""

#: ../../index.rst:17
msgid ":ref:`genindex`"
msgstr ""

#: ../../index.rst:18
msgid ":ref:`modindex`"
msgstr ""

#: ../../index.rst:19
msgid ":ref:`search`"
msgstr ""

#: ../../basics/index.rst:4
msgid "Getting Started"
msgstr ""

#: ../../basics/index.rst:6
msgid ""
"**Thunder Engine** is an open-source multi-functional lightweight game "
"engine for creating 2D and 3D games. It provides a wide range of frameworks "
"and tools. So developers can focus on the creation, and the Thunder Engine "
"will do the routine."
msgstr ""

#: ../../basics/index.rst:9
msgid ""
"The main ideology of project is to create the modular engine to give "
"developers an ability to exclude modules which they are not using in their "
"project to keep their projects lightweight. API of Thunder Engine is also "
"allowing to create own modules to use them in your games. Or create editor "
"modules to help develop them."
msgstr ""

#: ../../basics/install.rst:4
msgid "Install Thunder Engine"
msgstr ""

#: ../../basics/install.rst:6
msgid ""
"Thunder Engine consists of a set of frameworks and tools. Thunder Engine has "
"a module structure so developers are able to choose the exact modules they "
"need."
msgstr ""

#: ../../basics/install.rst:8
msgid "Thunder Engine can be installed by the several ways:"
msgstr ""

#: ../../basics/install.rst:10
msgid ""
"Using `Releases page <https://github.com/eprikazchikov/thunder/releases>`_ "
"(Preferable)."
msgstr ""

#: ../../basics/install.rst:15
msgid ""
"By building Thunder Engine from the :ref:`source<doc_build_source>`. For "
"more information, please follow the instructions for the specific platform:"
msgstr ""

#: ../../basics/install.rst:12
msgid ":ref:`Windows <doc_build_windows>`"
msgstr ""

#: ../../basics/install.rst:13
msgid ":ref:`OS X <doc_build_osx>`"
msgstr ""

#: ../../basics/install.rst:14
msgid ":ref:`Linux (Ubuntu) <doc_build_ubuntu>`"
msgstr ""

#: ../../basics/explore.rst:4
msgid "World Editor Overview"
msgstr ""

#: ../../basics/explore.rst:6
msgid ""
"The World Editor tool is a main game development tool of Thunder Engine."
msgstr ""

#: ../../basics/explore.rst:8
msgid ""
"It can be found at the bin directory of your instalation path of Thunder "
"Engine. ::"
msgstr ""

#: ../../basics/explore.rst:13
msgid ""
"Where %version% is a version of the Thunder Engine for example 2019.4, "
"%platform% can be windows, linux or macos accordingly your operating system."
msgstr ""

#: ../../basics/explore.rst:18
msgid "User Interface"
msgstr ""

#: ../../basics/explore.rst:20
msgid ""
"When you start World Editor, it opens to the **Welcome** screen, where you "
"can:"
msgstr ""

#: ../../basics/explore.rst:22
msgid "Open recent projects"
msgstr ""

#: ../../basics/explore.rst:23
msgid "Create new and import existing projects"
msgstr ""

#: ../../basics/explore.rst:24
msgid "Read news from the Thunder Engine project"
msgstr ""

#: ../../basics/explore.rst:30
msgid ""
"Once you have created a new project or opened an existing one, you will be "
"taken to the main screen."
msgstr ""

#: ../../basics/explore.rst:32
msgid ""
"The main screen contains a flexible workspace which developers can adopt for "
"their needs."
msgstr ""

#: ../../basics/explore.rst:38
msgid "The main screen contains several main zones:"
msgstr ""

#: ../../basics/explore.rst:40
msgid ""
"**Viewport** - allows you to add and remove objects on scene, control "
"position and rotation and do other basic operations"
msgstr ""

#: ../../basics/explore.rst:41
msgid ""
"**Properties** - created for fine-tuning of all object properties (assigned "
"material, texture, color and many more)"
msgstr ""

#: ../../basics/explore.rst:42
msgid ""
"**Content Browser** - contains the list of assets which available for using "
"in your project"
msgstr ""

#: ../../basics/explore.rst:43
msgid ""
"**Components** - contains the list of components which are currently "
"available for placing on the scene"
msgstr ""

#: ../../basics/explore.rst:44
msgid ""
"**Hierarchy** - represents the list of objects which placed on scene and "
"relations between of them"
msgstr ""

#: ../../basics/project.rst:4
msgid "Managing Projects"
msgstr ""

#: ../../basics/project.rst:6
msgid ""
"World Editor allows a team of designers and developers to share a project "
"across different development platforms with a common tool for design and "
"development."
msgstr ""

#: ../../basics/project.rst:10
msgid "Creating Projects"
msgstr ""

#: ../../basics/project.rst:15
msgid "Importing Projects"
msgstr ""

#: ../../basics/features.rst:4
msgid "Thunder Engine Features"
msgstr ""

#: ../../basics/features.rst:9
msgid "Supported Platforms"
msgstr ""

#: ../../basics/features.rst:10
msgid "Windows"
msgstr ""

#: ../../basics/features.rst:11
msgid "MacOS X"
msgstr ""

#: ../../basics/features.rst:12
msgid "Linux"
msgstr ""

#: ../../basics/features.rst:13
msgid "Android"
msgstr ""

#: ../../basics/features.rst:14
msgid "iOS"
msgstr ""

#: ../../basics/features.rst:15
msgid "tvOS"
msgstr ""

#: ../../basics/features.rst:20
msgid "Engine"
msgstr ""

#: ../../basics/features.rst:21
msgid "Module based architecture"
msgstr ""

#: ../../basics/features.rst:22
msgid "Entity Component System based Object Management System"
msgstr ""

#: ../../basics/features.rst:23
msgid "Scene Graph object management approach"
msgstr ""

#: ../../basics/features.rst:24
msgid "MetaObject introspection model for Objects"
msgstr ""

#: ../../basics/features.rst:25
msgid "Event driven Inter Object Communication System"
msgstr ""

#: ../../basics/features.rst:30
msgid "Render"
msgstr ""

#: ../../basics/features.rst:31
msgid "Flexible render pipeline"
msgstr ""

#: ../../basics/features.rst:32
msgid "Rendering System Based on Physical Principles"
msgstr ""

#: ../../basics/features.rst:33
msgid "Particle system"
msgstr ""

#: ../../basics/features.rst:34
msgid "Deferred Shading"
msgstr ""

#: ../../basics/features.rst:35
msgid "CookTorance Lighting model"
msgstr ""

#: ../../basics/features.rst:36
msgid "Cascaded Shadow Maps (PPSM)"
msgstr ""

#: ../../basics/features.rst:37
msgid "Frustum culling rendering optimization"
msgstr ""

#: ../../basics/features.rst:38
msgid "SDF Fonts"
msgstr ""

#: ../../basics/features.rst:43
msgid "Scripting"
msgstr ""

#: ../../basics/features.rst:44
msgid "AngelScipt script engine (Technical Preview)"
msgstr ""

#: ../../basics/features.rst:49
msgid "Animation"
msgstr ""

#: ../../basics/features.rst:50
msgid "Animation engine is based on \"Animate Everything\" principles"
msgstr ""

#: ../../basics/features.rst:51
msgid "Animation state machine"
msgstr ""

#: ../../basics/features.rst:56
msgid "Audio"
msgstr ""

#: ../../basics/features.rst:57
msgid "2D/3D Audio engine"
msgstr ""

#: ../../basics/features.rst:58
msgid "Ogg/Vorbis, MP3, WAV file formats support"
msgstr ""

#: ../../basics/features.rst:63
msgid "Physics Engine"
msgstr ""

#: ../../basics/features.rst:64
msgid "Rigid Body"
msgstr ""

#: ../../basics/features.rst:65
msgid ""
"Bunch of volume colliders and triggers like Sphere, Box, Capsule and more"
msgstr ""

#: ../../basics/features.rst:70
msgid "Set of Tools"
msgstr ""

#: ../../basics/features.rst:71
msgid "Multi-functional scene editor"
msgstr ""

#: ../../basics/features.rst:72
msgid "Node based material editor with shader converter"
msgstr ""

#: ../../basics/features.rst:73
msgid "Animation graph editor and timeline"
msgstr ""

#: ../../basics/features.rst:74
msgid "Plug-ins mechanism"
msgstr ""

#: ../../basics/features.rst:75
msgid "Resource Management system with bunch of converters"
msgstr ""

#: ../../basics/features.rst:76
msgid "Ready for CI project builder"
msgstr ""

#: ../../reference/index.rst:4
msgid "API Reference"
msgstr ""

#: ../../reference/animation-module.rst:4
msgid "Animation Module"
msgstr ""

#: ../../reference/animation.rst:3
msgid "Animation Class"
msgstr ""

#: ../../reference/animation.rst:5 ../../reference/objectsystem.rst:5
#: ../../reference/threadpool.rst:5 ../../reference/actor.rst:5
#: ../../reference/component.rst:5 ../../reference/resource.rst:5
msgid "Inherited: :ref:`Object<api_Object>`"
msgstr ""

#: ../../reference/animation.rst:9 ../../reference/blenderanimation.rst:9
#: ../../reference/propertyanimation.rst:9
#: ../../reference/variantanimation.rst:9 ../../reference/bson.rst:9
#: ../../reference/event.rst:9 ../../reference/json.rst:9
#: ../../reference/metamethod.rst:9 ../../reference/metaobject.rst:9
#: ../../reference/metaproperty.rst:9 ../../reference/metatype.rst:9
#: ../../reference/methodcallevent.rst:9 ../../reference/object.rst:9
#: ../../reference/objectsystem.rst:9 ../../reference/threadpool.rst:9
#: ../../reference/uri.rst:9 ../../reference/variant.rst:9
#: ../../reference/actor.rst:9 ../../reference/animationcontroller.rst:9
#: ../../reference/baselight.rst:9 ../../reference/camera.rst:9
#: ../../reference/component.rst:9 ../../reference/directlight.rst:9
#: ../../reference/engine.rst:9 ../../reference/file.rst:9
#: ../../reference/input.rst:9 ../../reference/log.rst:9
#: ../../reference/meshrender.rst:9 ../../reference/particlerender.rst:9
#: ../../reference/pointlight.rst:9 ../../reference/renderable.rst:9
#: ../../reference/spotlight.rst:9 ../../reference/spriterender.rst:9
#: ../../reference/textrender.rst:9 ../../reference/timer.rst:9
#: ../../reference/transform.rst:9 ../../reference/aabbox.rst:9
#: ../../reference/matrix3.rst:9 ../../reference/matrix4.rst:9
#: ../../reference/obbox.rst:9 ../../reference/plane.rst:9
#: ../../reference/quaternion.rst:9 ../../reference/ray.rst:9
#: ../../reference/vector2.rst:9 ../../reference/vector3.rst:9
#: ../../reference/vector4.rst:9 ../../reference/animationclip.rst:9
#: ../../reference/font.rst:9 ../../reference/rendertexture.rst:9
#: ../../reference/resource.rst:9 ../../reference/text.rst:9
#: ../../reference/texture.rst:9 ../../reference/translator.rst:9
msgid "Description"
msgstr ""

#: ../../reference/animation.rst:11
msgid "The Animation class provides base class interface for animations."
msgstr ""

#: ../../reference/animation.rst:13
msgid ""
"The Animation class contain basic state machine to control animation "
"processing."
msgstr ""

#: ../../reference/animation.rst:19 ../../reference/blenderanimation.rst:19
#: ../../reference/propertyanimation.rst:19
#: ../../reference/variantanimation.rst:21 ../../reference/bson.rst:21
#: ../../reference/event.rst:21 ../../reference/json.rst:21
#: ../../reference/metamethod.rst:21 ../../reference/metaobject.rst:21
#: ../../reference/metaproperty.rst:21 ../../reference/metatype.rst:23
#: ../../reference/methodcallevent.rst:17 ../../reference/object.rst:27
#: ../../reference/objectsystem.rst:19 ../../reference/threadpool.rst:17
#: ../../reference/uri.rst:17 ../../reference/variant.rst:23
#: ../../reference/actor.rst:19 ../../reference/animationcontroller.rst:19
#: ../../reference/baselight.rst:19 ../../reference/camera.rst:17
#: ../../reference/component.rst:21 ../../reference/directlight.rst:19
#: ../../reference/engine.rst:19 ../../reference/file.rst:25
#: ../../reference/input.rst:23 ../../reference/log.rst:21
#: ../../reference/meshrender.rst:19 ../../reference/particlerender.rst:19
#: ../../reference/pointlight.rst:19 ../../reference/renderable.rst:19
#: ../../reference/spotlight.rst:19 ../../reference/spriterender.rst:19
#: ../../reference/textrender.rst:19 ../../reference/timer.rst:19
#: ../../reference/transform.rst:19 ../../reference/aabbox.rst:19
#: ../../reference/matrix3.rst:19 ../../reference/matrix4.rst:19
#: ../../reference/obbox.rst:19 ../../reference/plane.rst:19
#: ../../reference/quaternion.rst:19 ../../reference/ray.rst:19
#: ../../reference/vector2.rst:23 ../../reference/vector3.rst:23
#: ../../reference/vector4.rst:23 ../../reference/animationclip.rst:19
#: ../../reference/font.rst:19 ../../reference/rendertexture.rst:17
#: ../../reference/resource.rst:19 ../../reference/text.rst:17
#: ../../reference/texture.rst:19 ../../reference/translator.rst:17
msgid "Public Methods"
msgstr ""

#: ../../reference/animation.rst:22
msgid ":ref:`Animation<api_Animation_Animation>` ()"
msgstr ""

#: ../../reference/animation.rst:24
msgid ":ref:`~Animation<api_Animation_~Animation>` ()"
msgstr ""

#: ../../reference/animation.rst:26 ../../reference/animation.rst:28
#: ../../reference/animation.rst:30 ../../reference/animation.rst:34
#: ../../reference/animation.rst:36 ../../reference/animation.rst:38
#: ../../reference/blenderanimation.rst:32
#: ../../reference/variantanimation.rst:32 ../../reference/event.rst:28
#: ../../reference/json.rst:32 ../../reference/metamethod.rst:32
#: ../../reference/metamethod.rst:38 ../../reference/metaobject.rst:30
#: ../../reference/metaobject.rst:32 ../../reference/metaobject.rst:34
#: ../../reference/metaobject.rst:36 ../../reference/metaobject.rst:40
#: ../../reference/metaobject.rst:42 ../../reference/metaobject.rst:48
#: ../../reference/metaobject.rst:50 ../../reference/metatype.rst:42
#: ../../reference/metatype.rst:68 ../../reference/metatype.rst:70
#: ../../reference/metatype.rst:74 ../../reference/metatype.rst:76
#: ../../reference/metatype.rst:78 ../../reference/methodcallevent.rst:24
#: ../../reference/object.rst:38 ../../reference/object.rst:50
#: ../../reference/object.rst:64 ../../reference/object.rst:88
#: ../../reference/object.rst:90 ../../reference/objectsystem.rst:40
#: ../../reference/threadpool.rst:24 ../../reference/threadpool.rst:38
#: ../../reference/uri.rst:24 ../../reference/uri.rst:26
#: ../../reference/uri.rst:28 ../../reference/uri.rst:30
#: ../../reference/uri.rst:32 ../../reference/uri.rst:34
#: ../../reference/uri.rst:36 ../../reference/uri.rst:38
#: ../../reference/uri.rst:40 ../../reference/variant.rst:80
#: ../../reference/variant.rst:100 ../../reference/variant.rst:102
#: ../../reference/actor.rst:36 ../../reference/animationcontroller.rst:32
#: ../../reference/animationcontroller.rst:34 ../../reference/camera.rst:74
#: ../../reference/camera.rst:76 ../../reference/component.rst:34
#: ../../reference/engine.rst:28 ../../reference/engine.rst:32
#: ../../reference/engine.rst:62 ../../reference/engine.rst:64
#: ../../reference/engine.rst:66 ../../reference/engine.rst:78
#: ../../reference/file.rst:32 ../../reference/input.rst:44
#: ../../reference/input.rst:46 ../../reference/input.rst:58
#: ../../reference/input.rst:62 ../../reference/textrender.rst:26
#: ../../reference/textrender.rst:34 ../../reference/textrender.rst:58
#: ../../reference/animationclip.rst:22 ../../reference/font.rst:26
#: ../../reference/font.rst:30 ../../reference/font.rst:36
#: ../../reference/rendertexture.rst:24 ../../reference/text.rst:28
#: ../../reference/text.rst:30 ../../reference/texture.rst:32
#: ../../reference/texture.rst:34 ../../reference/texture.rst:62
#: ../../reference/translator.rst:24
msgid ":ref:`int<api_int>`"
msgstr ""

#: ../../reference/animation.rst:26
msgid ":ref:`currentLoop<api_Animation_currentLoop>` () const"
msgstr ""

#: ../../reference/animation.rst:28
msgid ":ref:`currentTime<api_Animation_currentTime>` () const"
msgstr ""

#: ../../reference/animation.rst:30
msgid ":ref:`duration<api_Animation_duration>` () const"
msgstr ""

#: ../../reference/animation.rst:32 ../../reference/metamethod.rst:26
#: ../../reference/metamethod.rst:28 ../../reference/metaobject.rst:26
#: ../../reference/metaproperty.rst:26 ../../reference/metatype.rst:28
#: ../../reference/metatype.rst:38 ../../reference/metatype.rst:50
#: ../../reference/metatype.rst:54 ../../reference/metatype.rst:62
#: ../../reference/metatype.rst:66 ../../reference/object.rst:44
#: ../../reference/object.rst:56 ../../reference/object.rst:92
#: ../../reference/object.rst:94 ../../reference/object.rst:102
#: ../../reference/threadpool.rst:30 ../../reference/variant.rst:64
#: ../../reference/variant.rst:66 ../../reference/variant.rst:72
#: ../../reference/variant.rst:74 ../../reference/variant.rst:106
#: ../../reference/variant.rst:110 ../../reference/actor.rst:32
#: ../../reference/actor.rst:34 ../../reference/baselight.rst:30
#: ../../reference/camera.rst:40 ../../reference/camera.rst:82
#: ../../reference/camera.rst:88 ../../reference/component.rst:30
#: ../../reference/engine.rst:30 ../../reference/engine.rst:40
#: ../../reference/engine.rst:54 ../../reference/engine.rst:56
#: ../../reference/engine.rst:60 ../../reference/file.rst:28
#: ../../reference/file.rst:30 ../../reference/file.rst:48
#: ../../reference/file.rst:50 ../../reference/input.rst:32
#: ../../reference/input.rst:34 ../../reference/input.rst:36
#: ../../reference/input.rst:38 ../../reference/input.rst:40
#: ../../reference/input.rst:42 ../../reference/textrender.rst:36
#: ../../reference/textrender.rst:60 ../../reference/aabbox.rst:32
#: ../../reference/aabbox.rst:34 ../../reference/matrix3.rst:44
#: ../../reference/matrix3.rst:66 ../../reference/matrix4.rst:54
#: ../../reference/matrix4.rst:76 ../../reference/quaternion.rst:38
#: ../../reference/quaternion.rst:44 ../../reference/ray.rst:26
#: ../../reference/ray.rst:28 ../../reference/ray.rst:30
#: ../../reference/ray.rst:32 ../../reference/vector2.rst:42
#: ../../reference/vector2.rst:64 ../../reference/vector2.rst:66
#: ../../reference/vector2.rst:68 ../../reference/vector3.rst:48
#: ../../reference/vector3.rst:70 ../../reference/vector3.rst:72
#: ../../reference/vector3.rst:74 ../../reference/vector4.rst:44
#: ../../reference/vector4.rst:66 ../../reference/vector4.rst:68
#: ../../reference/vector4.rst:70 ../../reference/texture.rst:36
#: ../../reference/texture.rst:38
msgid ":ref:`bool<api_bool>`"
msgstr ""

#: ../../reference/animation.rst:32
msgid ":ref:`isValid<api_Animation_isValid>` () const"
msgstr ""

#: ../../reference/animation.rst:34
msgid ":ref:`loopCount<api_Animation_loopCount>` () const"
msgstr ""

#: ../../reference/animation.rst:36
msgid ":ref:`loopDuration<api_Animation_loopDuration>` () const"
msgstr ""

#: ../../reference/animation.rst:38
msgid ":ref:`loopTime<api_Animation_loopTime>` () const"
msgstr ""

#: ../../reference/animation.rst:40 ../../reference/animation.rst:42
#: ../../reference/animation.rst:44 ../../reference/animation.rst:46
#: ../../reference/animation.rst:48 ../../reference/animation.rst:50
#: ../../reference/animation.rst:54 ../../reference/blenderanimation.rst:34
#: ../../reference/blenderanimation.rst:36
#: ../../reference/blenderanimation.rst:38
#: ../../reference/blenderanimation.rst:40
#: ../../reference/blenderanimation.rst:42
#: ../../reference/blenderanimation.rst:44
#: ../../reference/blenderanimation.rst:46
#: ../../reference/propertyanimation.rst:26
#: ../../reference/propertyanimation.rst:28
#: ../../reference/propertyanimation.rst:30
#: ../../reference/variantanimation.rst:34
#: ../../reference/variantanimation.rst:36
#: ../../reference/variantanimation.rst:38 ../../reference/metaproperty.rst:36
#: ../../reference/metaproperty.rst:38 ../../reference/metatype.rst:34
#: ../../reference/metatype.rst:36 ../../reference/metatype.rst:58
#: ../../reference/metatype.rst:60 ../../reference/metatype.rst:82
#: ../../reference/object.rst:34 ../../reference/object.rst:40
#: ../../reference/object.rst:42 ../../reference/object.rst:58
#: ../../reference/object.rst:60 ../../reference/object.rst:68
#: ../../reference/object.rst:72 ../../reference/object.rst:80
#: ../../reference/object.rst:82 ../../reference/object.rst:84
#: ../../reference/object.rst:106 ../../reference/objectsystem.rst:28
#: ../../reference/objectsystem.rst:30 ../../reference/objectsystem.rst:32
#: ../../reference/objectsystem.rst:48 ../../reference/threadpool.rst:26
#: ../../reference/threadpool.rst:28 ../../reference/variant.rst:68
#: ../../reference/actor.rst:40 ../../reference/actor.rst:42
#: ../../reference/actor.rst:44 ../../reference/animationcontroller.rst:28
#: ../../reference/animationcontroller.rst:30
#: ../../reference/animationcontroller.rst:36
#: ../../reference/animationcontroller.rst:38
#: ../../reference/animationcontroller.rst:40
#: ../../reference/animationcontroller.rst:42
#: ../../reference/animationcontroller.rst:44
#: ../../reference/animationcontroller.rst:46
#: ../../reference/animationcontroller.rst:48
#: ../../reference/animationcontroller.rst:50
#: ../../reference/animationcontroller.rst:52
#: ../../reference/animationcontroller.rst:54
#: ../../reference/animationcontroller.rst:56 ../../reference/baselight.rst:34
#: ../../reference/baselight.rst:36 ../../reference/baselight.rst:38
#: ../../reference/baselight.rst:40 ../../reference/baselight.rst:42
#: ../../reference/camera.rst:34 ../../reference/camera.rst:48
#: ../../reference/camera.rst:50 ../../reference/camera.rst:52
#: ../../reference/camera.rst:54 ../../reference/camera.rst:56
#: ../../reference/camera.rst:58 ../../reference/camera.rst:60
#: ../../reference/camera.rst:62 ../../reference/camera.rst:64
#: ../../reference/camera.rst:86 ../../reference/component.rst:32
#: ../../reference/engine.rst:26 ../../reference/engine.rst:34
#: ../../reference/engine.rst:42 ../../reference/engine.rst:44
#: ../../reference/engine.rst:68 ../../reference/engine.rst:70
#: ../../reference/engine.rst:72 ../../reference/engine.rst:74
#: ../../reference/engine.rst:76 ../../reference/engine.rst:80
#: ../../reference/file.rst:52 ../../reference/file.rst:54
#: ../../reference/input.rst:56 ../../reference/log.rst:46
#: ../../reference/log.rst:48 ../../reference/meshrender.rst:30
#: ../../reference/meshrender.rst:32 ../../reference/particlerender.rst:28
#: ../../reference/pointlight.rst:28 ../../reference/spotlight.rst:30
#: ../../reference/spotlight.rst:32 ../../reference/spriterender.rst:32
#: ../../reference/spriterender.rst:34 ../../reference/spriterender.rst:36
#: ../../reference/textrender.rst:40 ../../reference/textrender.rst:42
#: ../../reference/textrender.rst:44 ../../reference/textrender.rst:46
#: ../../reference/textrender.rst:48 ../../reference/textrender.rst:50
#: ../../reference/textrender.rst:52 ../../reference/textrender.rst:54
#: ../../reference/textrender.rst:56 ../../reference/timer.rst:30
#: ../../reference/timer.rst:32 ../../reference/timer.rst:36
#: ../../reference/timer.rst:40 ../../reference/transform.rst:36
#: ../../reference/transform.rst:38 ../../reference/transform.rst:40
#: ../../reference/transform.rst:42 ../../reference/transform.rst:44
#: ../../reference/aabbox.rst:26 ../../reference/aabbox.rst:28
#: ../../reference/aabbox.rst:30 ../../reference/aabbox.rst:36
#: ../../reference/aabbox.rst:38 ../../reference/matrix3.rst:28
#: ../../reference/matrix3.rst:32 ../../reference/matrix3.rst:34
#: ../../reference/matrix3.rst:36 ../../reference/matrix3.rst:38
#: ../../reference/matrix3.rst:42 ../../reference/matrix4.rst:30
#: ../../reference/matrix4.rst:34 ../../reference/matrix4.rst:38
#: ../../reference/matrix4.rst:40 ../../reference/matrix4.rst:42
#: ../../reference/matrix4.rst:46 ../../reference/matrix4.rst:48
#: ../../reference/matrix4.rst:52 ../../reference/obbox.rst:28
#: ../../reference/obbox.rst:30 ../../reference/quaternion.rst:34
#: ../../reference/font.rst:28 ../../reference/font.rst:34
#: ../../reference/rendertexture.rst:26 ../../reference/rendertexture.rst:28
#: ../../reference/rendertexture.rst:30 ../../reference/rendertexture.rst:32
#: ../../reference/resource.rst:26 ../../reference/resource.rst:28
#: ../../reference/resource.rst:30 ../../reference/text.rst:26
#: ../../reference/texture.rst:26 ../../reference/texture.rst:40
#: ../../reference/texture.rst:42 ../../reference/texture.rst:44
#: ../../reference/texture.rst:46 ../../reference/texture.rst:48
#: ../../reference/texture.rst:50 ../../reference/texture.rst:52
#: ../../reference/texture.rst:54 ../../reference/texture.rst:56
msgid ":ref:`void<api_void>`"
msgstr ""

#: ../../reference/animation.rst:40
msgid ":ref:`pause<api_Animation_pause>` ()"
msgstr ""

#: ../../reference/animation.rst:42
msgid ":ref:`resume<api_Animation_resume>` ()"
msgstr ""

#: ../../reference/animation.rst:44
msgid ":ref:`setCurrentTime<api_Animation_setCurrentTime>` (int  msecs)"
msgstr ""

#: ../../reference/animation.rst:46
msgid ":ref:`setLoopCount<api_Animation_setLoopCount>` (int  loops)"
msgstr ""

#: ../../reference/animation.rst:48
msgid ":ref:`setValid<api_Animation_setValid>` (bool  valid)"
msgstr ""

#: ../../reference/animation.rst:50
msgid ":ref:`start<api_Animation_start>` ()"
msgstr ""

#: ../../reference/animation.rst:52
msgid ":ref:`Animation::State<api_Animation::State>`"
msgstr ""

#: ../../reference/animation.rst:52
msgid ":ref:`state<api_Animation_state>` () const"
msgstr ""

#: ../../reference/animation.rst:54
msgid ":ref:`stop<api_Animation_stop>` ()"
msgstr ""

#: ../../reference/animation.rst:59 ../../reference/blenderanimation.rst:51
#: ../../reference/propertyanimation.rst:39
#: ../../reference/variantanimation.rst:43 ../../reference/bson.rst:27
#: ../../reference/event.rst:33 ../../reference/json.rst:27
#: ../../reference/metamethod.rst:47 ../../reference/metaobject.rst:57
#: ../../reference/metaproperty.rst:43 ../../reference/metatype.rst:47
#: ../../reference/methodcallevent.rst:31 ../../reference/object.rst:99
#: ../../reference/objectsystem.rst:37 ../../reference/threadpool.rst:35
#: ../../reference/uri.rst:45 ../../reference/variant.rst:115
#: ../../reference/actor.rst:51 ../../reference/animationcontroller.rst:63
#: ../../reference/baselight.rst:47 ../../reference/camera.rst:69
#: ../../reference/component.rst:39 ../../reference/directlight.rst:29
#: ../../reference/engine.rst:49 ../../reference/file.rst:59
#: ../../reference/input.rst:29 ../../reference/log.rst:41
#: ../../reference/meshrender.rst:37 ../../reference/particlerender.rst:33
#: ../../reference/pointlight.rst:33 ../../reference/renderable.rst:29
#: ../../reference/spotlight.rst:37 ../../reference/spriterender.rst:43
#: ../../reference/textrender.rst:65 ../../reference/timer.rst:25
#: ../../reference/transform.rst:59 ../../reference/aabbox.rst:49
#: ../../reference/matrix3.rst:75 ../../reference/matrix4.rst:85
#: ../../reference/obbox.rst:39 ../../reference/plane.rst:31
#: ../../reference/quaternion.rst:53 ../../reference/ray.rst:41
#: ../../reference/vector2.rst:77 ../../reference/vector3.rst:83
#: ../../reference/vector4.rst:79 ../../reference/animationclip.rst:27
#: ../../reference/font.rst:43 ../../reference/rendertexture.rst:37
#: ../../reference/resource.rst:37 ../../reference/text.rst:35
#: ../../reference/texture.rst:69 ../../reference/translator.rst:29
msgid "Static Methods"
msgstr ""

#: ../../reference/animation.rst:62 ../../reference/metamethod.rst:40
#: ../../reference/actor.rst:54 ../../reference/camera.rst:80
#: ../../reference/component.rst:42 ../../reference/meshrender.rst:40
#: ../../reference/particlerender.rst:36 ../../reference/renderable.rst:32
#: ../../reference/spriterender.rst:46 ../../reference/textrender.rst:68
#: ../../reference/transform.rst:62
msgid ":ref:`const MetaMethod::Table<api_const MetaMethod::Table>` *"
msgstr ""

#: ../../reference/animation.rst:62
msgid ":ref:`methods<api_Animation_methods>` ()"
msgstr ""

#: ../../reference/animation.rst:64 ../../reference/metaproperty.rst:32
#: ../../reference/actor.rst:56 ../../reference/animationcontroller.rst:66
#: ../../reference/baselight.rst:50 ../../reference/camera.rst:84
#: ../../reference/component.rst:44 ../../reference/directlight.rst:32
#: ../../reference/meshrender.rst:42 ../../reference/particlerender.rst:38
#: ../../reference/pointlight.rst:36 ../../reference/renderable.rst:34
#: ../../reference/spotlight.rst:40 ../../reference/spriterender.rst:48
#: ../../reference/textrender.rst:70 ../../reference/transform.rst:64
msgid ":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` *"
msgstr ""

#: ../../reference/animation.rst:64
msgid ":ref:`properties<api_Animation_properties>` ()"
msgstr ""

#: ../../reference/animation.rst:69 ../../reference/blenderanimation.rst:57
#: ../../reference/propertyanimation.rst:45
#: ../../reference/variantanimation.rst:49 ../../reference/bson.rst:37
#: ../../reference/event.rst:39 ../../reference/json.rst:37
#: ../../reference/metamethod.rst:53 ../../reference/metaobject.rst:63
#: ../../reference/metaproperty.rst:49 ../../reference/metatype.rst:87
#: ../../reference/methodcallevent.rst:37 ../../reference/object.rst:113
#: ../../reference/objectsystem.rst:57 ../../reference/threadpool.rst:43
#: ../../reference/uri.rst:51 ../../reference/variant.rst:123
#: ../../reference/actor.rst:61 ../../reference/animationcontroller.rst:71
#: ../../reference/baselight.rst:55 ../../reference/camera.rst:93
#: ../../reference/component.rst:49 ../../reference/directlight.rst:37
#: ../../reference/engine.rst:87 ../../reference/file.rst:65
#: ../../reference/input.rst:67 ../../reference/log.rst:53
#: ../../reference/meshrender.rst:47 ../../reference/particlerender.rst:43
#: ../../reference/pointlight.rst:41 ../../reference/renderable.rst:39
#: ../../reference/spotlight.rst:45 ../../reference/spriterender.rst:53
#: ../../reference/textrender.rst:75 ../../reference/timer.rst:45
#: ../../reference/transform.rst:69 ../../reference/aabbox.rst:55
#: ../../reference/matrix3.rst:81 ../../reference/matrix4.rst:97
#: ../../reference/obbox.rst:45 ../../reference/plane.rst:37
#: ../../reference/quaternion.rst:59 ../../reference/ray.rst:47
#: ../../reference/vector2.rst:83 ../../reference/vector3.rst:89
#: ../../reference/vector4.rst:85 ../../reference/animationclip.rst:33
#: ../../reference/font.rst:49 ../../reference/rendertexture.rst:43
#: ../../reference/resource.rst:43 ../../reference/text.rst:41
#: ../../reference/texture.rst:75 ../../reference/translator.rst:35
msgid "Methods Description"
msgstr ""

#: ../../reference/animation.rst:73
msgid "**Animation::Animation** ()"
msgstr ""

#: ../../reference/animation.rst:75
msgid "Default constructs an instance of Animation."
msgstr ""

#: ../../reference/animation.rst:81
msgid "**Animation::~Animation** ()"
msgstr ""

#: ../../reference/animation.rst:83
msgid "Destroys the instance of Animation. The destructor is virtual."
msgstr ""

#: ../../reference/animation.rst:89
msgid ":ref:`int<api_int>`  **Animation::currentLoop** () const"
msgstr ""

#: ../../reference/animation.rst:91
msgid ""
"Returns the number of repetitions of animation which already has played."
msgstr ""

#: ../../reference/animation.rst:97
msgid ":ref:`int<api_int>`  **Animation::currentTime** () const"
msgstr ""

#: ../../reference/animation.rst:99
msgid "Returns the current time (in milliseconds) in scope of current loop."
msgstr ""

#: ../../reference/animation.rst:101
msgid "**See also** setCurrentTime()."
msgstr ""

#: ../../reference/animation.rst:107
msgid ":ref:`int<api_int>`  **Animation::duration** () const"
msgstr ""

#: ../../reference/animation.rst:109
msgid ""
"Returns the duration (in milliseconds) in total as sum of durations for all "
"loops."
msgstr ""

#: ../../reference/animation.rst:111
msgid "**Note:** Returns -1 in case of infinite animation."
msgstr ""

#: ../../reference/animation.rst:117
msgid ":ref:`bool<api_bool>`  **Animation::isValid** () const"
msgstr ""

#: ../../reference/animation.rst:119
msgid "Returns true in case of animation is valid; otherwise returns false."
msgstr ""

#: ../../reference/animation.rst:125
msgid ":ref:`int<api_int>`  **Animation::loopCount** () const"
msgstr ""

#: ../../reference/animation.rst:127
msgid ""
"Returns the number of repetitions of animation; -1 in case of infinite "
"animation."
msgstr ""

#: ../../reference/animation.rst:129
msgid "**See also** setLoopCount()."
msgstr ""

#: ../../reference/animation.rst:135
msgid ":ref:`int<api_int>`  **Animation::loopDuration** () const"
msgstr ""

#: ../../reference/animation.rst:137 ../../reference/blenderanimation.rst:105
#: ../../reference/variantanimation.rst:89
msgid "Returns the duration of the animation (in milliseconds)."
msgstr ""

#: ../../reference/animation.rst:143
msgid ":ref:`int<api_int>`  **Animation::loopTime** () const"
msgstr ""

#: ../../reference/animation.rst:145
msgid "Returns the current time for the current loop (in milliseconds)."
msgstr ""

#: ../../reference/animation.rst:151
msgid ""
":ref:`const MetaMethod::Table<api_const MetaMethod::Table>` * **Animation::"
"methods** ()"
msgstr ""

#: ../../reference/animation.rst:157
msgid ":ref:`void<api_void>`  **Animation::pause** ()"
msgstr ""

#: ../../reference/animation.rst:159 ../../reference/animation.rst:231
msgid "Stops the animation."
msgstr ""

#: ../../reference/animation.rst:161
msgid "**Note:** Animation CAN be continued by resume()."
msgstr ""

#: ../../reference/animation.rst:167
msgid ""
":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` * "
"**Animation::properties** ()"
msgstr ""

#: ../../reference/animation.rst:173
msgid ":ref:`void<api_void>`  **Animation::resume** ()"
msgstr ""

#: ../../reference/animation.rst:175
msgid "Continues the animation which was paused earlier."
msgstr ""

#: ../../reference/animation.rst:181
msgid ""
":ref:`void<api_void>`  **Animation::setCurrentTime** (:ref:`int<api_int>`  "
"*msecs*)"
msgstr ""

#: ../../reference/animation.rst:183
msgid "Sets the new position of animation to provided *msecs* position."
msgstr ""

#: ../../reference/animation.rst:185
msgid ""
"**Note:** If new position placed outside of current loop; Then current loop "
"will be changed to appropriate."
msgstr ""

#: ../../reference/animation.rst:187
msgid "**See also** currentTime()."
msgstr ""

#: ../../reference/animation.rst:193
msgid ""
":ref:`void<api_void>`  **Animation::setLoopCount** (:ref:`int<api_int>`  "
"*loops*)"
msgstr ""

#: ../../reference/animation.rst:195
msgid "Sets the new number of *loops* of animation."
msgstr ""

#: ../../reference/animation.rst:197
msgid "**See also** loopCount()."
msgstr ""

#: ../../reference/animation.rst:203
msgid ""
":ref:`void<api_void>`  **Animation::setValid** (:ref:`bool<api_bool>`  "
"*valid*)"
msgstr ""

#: ../../reference/animation.rst:205 ../../reference/propertyanimation.rst:93
msgid ""
"Sets the *valid* state of animation. The invalid animations will not affect "
"anything."
msgstr ""

#: ../../reference/animation.rst:207
msgid "**See also** isValid()."
msgstr ""

#: ../../reference/animation.rst:213
msgid ":ref:`void<api_void>`  **Animation::start** ()"
msgstr ""

#: ../../reference/animation.rst:215
msgid "Starts the animation from the beginning."
msgstr ""

#: ../../reference/animation.rst:221
msgid ""
":ref:`Animation::State<api_Animation::State>`  **Animation::state** () const"
msgstr ""

#: ../../reference/animation.rst:223
msgid "Returns the current state of animation."
msgstr ""

#: ../../reference/animation.rst:229
msgid ":ref:`void<api_void>`  **Animation::stop** ()"
msgstr ""

#: ../../reference/animation.rst:233
msgid "**Note:** Animation can't be continued."
msgstr ""

#: ../../reference/blenderanimation.rst:3
msgid "BlenderAnimation Class"
msgstr ""

#: ../../reference/blenderanimation.rst:5
#: ../../reference/variantanimation.rst:5
msgid "Inherited: :ref:`Animation<api_Animation>`"
msgstr ""

#: ../../reference/blenderanimation.rst:11
msgid ""
"The BlenderAnimation class provides mechanism for blending of an animation "
"tracks."
msgstr ""

#: ../../reference/blenderanimation.rst:13
msgid ""
"The BlenderAnimation helps to developers to mix animation tracks with "
"various mixing parameters."
msgstr ""

#: ../../reference/blenderanimation.rst:22
msgid ":ref:`BlenderAnimation<api_BlenderAnimation_BlenderAnimation>` ()"
msgstr ""

#: ../../reference/blenderanimation.rst:24
msgid ":ref:`~BlenderAnimation<api_BlenderAnimation_~BlenderAnimation>` ()"
msgstr ""

#: ../../reference/blenderanimation.rst:26
#: ../../reference/blenderanimation.rst:30
#: ../../reference/variantanimation.rst:30
msgid ":ref:`AnimationCurve<api_AnimationCurve>` *"
msgstr ""

#: ../../reference/blenderanimation.rst:26
msgid ""
":ref:`beginCurve<api_BlenderAnimation_beginCurve>` (int  component = 0) const"
msgstr ""

#: ../../reference/blenderanimation.rst:28
#: ../../reference/variantanimation.rst:28 ../../reference/bson.rst:30
#: ../../reference/json.rst:30 ../../reference/metaproperty.rst:30
#: ../../reference/object.rst:70 ../../reference/objectsystem.rst:52
#: ../../reference/variant.rst:118 ../../reference/engine.rst:82
msgid ":ref:`Variant<api_Variant>`"
msgstr ""

#: ../../reference/blenderanimation.rst:28
msgid ":ref:`defaultValue<api_BlenderAnimation_defaultValue>` ()"
msgstr ""

#: ../../reference/blenderanimation.rst:30
msgid ""
":ref:`endCurve<api_BlenderAnimation_endCurve>` (int  component = 0) const"
msgstr ""

#: ../../reference/blenderanimation.rst:32
msgid ":ref:`loopDuration<api_BlenderAnimation_loopDuration>` () const"
msgstr ""

#: ../../reference/blenderanimation.rst:34
msgid ""
":ref:`setBeginCurve<api_BlenderAnimation_setBeginCurve>` (AnimationCurve * "
"curve, int  component = 0)"
msgstr ""

#: ../../reference/blenderanimation.rst:36
msgid ":ref:`setCurrentTime<api_BlenderAnimation_setCurrentTime>` (int  msecs)"
msgstr ""

#: ../../reference/blenderanimation.rst:38
msgid ""
":ref:`setCurrentValue<api_BlenderAnimation_setCurrentValue>` (const Variant "
"& value)"
msgstr ""

#: ../../reference/blenderanimation.rst:40
msgid ""
":ref:`setDefaultValue<api_BlenderAnimation_setDefaultValue>` (const Variant "
"& value)"
msgstr ""

#: ../../reference/blenderanimation.rst:42
msgid ""
":ref:`setEndCurve<api_BlenderAnimation_setEndCurve>` (AnimationCurve * "
"curve, int  component = 0)"
msgstr ""

#: ../../reference/blenderanimation.rst:44
msgid ":ref:`setOffset<api_BlenderAnimation_setOffset>` (float  offset)"
msgstr ""

#: ../../reference/blenderanimation.rst:46
msgid ""
":ref:`setTransitionTime<api_BlenderAnimation_setTransitionTime>` (float  "
"time)"
msgstr ""

#: ../../reference/blenderanimation.rst:53
#: ../../reference/propertyanimation.rst:41
#: ../../reference/variantanimation.rst:45 ../../reference/bson.rst:23
#: ../../reference/event.rst:35 ../../reference/json.rst:23
#: ../../reference/metamethod.rst:49 ../../reference/metaobject.rst:59
#: ../../reference/metaproperty.rst:45 ../../reference/methodcallevent.rst:33
#: ../../reference/uri.rst:47 ../../reference/file.rst:61
#: ../../reference/input.rst:25 ../../reference/timer.rst:21
#: ../../reference/aabbox.rst:51 ../../reference/matrix3.rst:77
#: ../../reference/obbox.rst:41 ../../reference/plane.rst:33
#: ../../reference/quaternion.rst:55 ../../reference/ray.rst:43
#: ../../reference/vector2.rst:79 ../../reference/vector3.rst:85
#: ../../reference/vector4.rst:81 ../../reference/animationclip.rst:29
#: ../../reference/font.rst:45 ../../reference/rendertexture.rst:39
#: ../../reference/resource.rst:39 ../../reference/text.rst:37
#: ../../reference/texture.rst:71 ../../reference/translator.rst:31
msgid "None"
msgstr ""

#: ../../reference/blenderanimation.rst:61
msgid "**BlenderAnimation::BlenderAnimation** ()"
msgstr ""

#: ../../reference/blenderanimation.rst:63
msgid "Default constructs an instance of BlenderAnimation."
msgstr ""

#: ../../reference/blenderanimation.rst:69
msgid "**BlenderAnimation::~BlenderAnimation** ()"
msgstr ""

#: ../../reference/blenderanimation.rst:71
msgid "Destroys the instance of BlenderAnimation. The destructor is virtual."
msgstr ""

#: ../../reference/blenderanimation.rst:77
msgid ""
":ref:`AnimationCurve<api_AnimationCurve>` * **BlenderAnimation::beginCurve** "
"(:ref:`int<api_int>`  *component* = 0) const"
msgstr ""

#: ../../reference/blenderanimation.rst:79
msgid "**See also** setBeginCurve()."
msgstr ""

#: ../../reference/blenderanimation.rst:85
msgid ":ref:`Variant<api_Variant>`  **BlenderAnimation::defaultValue** ()"
msgstr ""

#: ../../reference/blenderanimation.rst:87
msgid ""
"Returns the default value for the animated curve. This value will be used if "
"no animation data is available at the current time frame."
msgstr ""

#: ../../reference/blenderanimation.rst:89
msgid "**See also** setDefaultValue()."
msgstr ""

#: ../../reference/blenderanimation.rst:95
msgid ""
":ref:`AnimationCurve<api_AnimationCurve>` * **BlenderAnimation::endCurve** (:"
"ref:`int<api_int>`  *component* = 0) const"
msgstr ""

#: ../../reference/blenderanimation.rst:97
msgid "**See also** setEndCurve()."
msgstr ""

#: ../../reference/blenderanimation.rst:103
msgid ":ref:`int<api_int>`  **BlenderAnimation::loopDuration** () const"
msgstr ""

#: ../../reference/blenderanimation.rst:111
msgid ""
":ref:`void<api_void>`  **BlenderAnimation::setBeginCurve** (:ref:"
"`AnimationCurve<api_AnimationCurve>` * *curve*, :ref:`int<api_int>`  "
"*component* = 0)"
msgstr ""

#: ../../reference/blenderanimation.rst:113
msgid "**See also** beginCurve()."
msgstr ""

#: ../../reference/blenderanimation.rst:119
msgid ""
":ref:`void<api_void>`  **BlenderAnimation::setCurrentTime** (:ref:"
"`int<api_int>`  *msecs*)"
msgstr ""

#: ../../reference/blenderanimation.rst:121
#: ../../reference/propertyanimation.rst:69
#: ../../reference/propertyanimation.rst:91
#: ../../reference/variantanimation.rst:97
msgid "This is an overloaded function."
msgstr ""

#: ../../reference/blenderanimation.rst:123
#: ../../reference/variantanimation.rst:99
msgid ""
"This function interpolates animated Variant value from one KeyFrame to "
"another."
msgstr ""

#: ../../reference/blenderanimation.rst:129
msgid ""
":ref:`void<api_void>`  **BlenderAnimation::setCurrentValue** (:ref:"
"`Variant<api_Variant>` & *value*)"
msgstr ""

#: ../../reference/blenderanimation.rst:131
#: ../../reference/variantanimation.rst:107
msgid "Sets the new current *value* for the animated Variant."
msgstr ""

#: ../../reference/blenderanimation.rst:137
msgid ""
":ref:`void<api_void>`  **BlenderAnimation::setDefaultValue** (:ref:"
"`Variant<api_Variant>` & *value*)"
msgstr ""

#: ../../reference/blenderanimation.rst:139
msgid ""
"Sets the default *value* for the animated curve. This *value* will be used "
"if no animation data is available at the current time frame."
msgstr ""

#: ../../reference/blenderanimation.rst:141
msgid "**See also** defaultValue()."
msgstr ""

#: ../../reference/blenderanimation.rst:147
msgid ""
":ref:`void<api_void>`  **BlenderAnimation::setEndCurve** (:ref:"
"`AnimationCurve<api_AnimationCurve>` * *curve*, :ref:`int<api_int>`  "
"*component* = 0)"
msgstr ""

#: ../../reference/blenderanimation.rst:149
msgid "**See also** endCurve()."
msgstr ""

#: ../../reference/blenderanimation.rst:155
msgid ""
":ref:`void<api_void>`  **BlenderAnimation::setOffset** (:ref:"
"`float<api_float>`  *offset*)"
msgstr ""

#: ../../reference/blenderanimation.rst:161
msgid ""
":ref:`void<api_void>`  **BlenderAnimation::setTransitionTime** (:ref:"
"`float<api_float>`  *time*)"
msgstr ""

#: ../../reference/propertyanimation.rst:3
msgid "PropertyAnimation Class"
msgstr ""

#: ../../reference/propertyanimation.rst:5
msgid "Inherited: :ref:`BlenderAnimation<api_BlenderAnimation>`"
msgstr ""

#: ../../reference/propertyanimation.rst:11
msgid "The PropertyAnimation class animates one particular Object property."
msgstr ""

#: ../../reference/propertyanimation.rst:13
msgid "PropertyAnimation interpolates animated property between key-frames."
msgstr ""

#: ../../reference/propertyanimation.rst:22
msgid ":ref:`PropertyAnimation<api_PropertyAnimation_PropertyAnimation>` ()"
msgstr ""

#: ../../reference/propertyanimation.rst:24
msgid ":ref:`~PropertyAnimation<api_PropertyAnimation_~PropertyAnimation>` ()"
msgstr ""

#: ../../reference/propertyanimation.rst:26
msgid ""
":ref:`setCurrentValue<api_PropertyAnimation_setCurrentValue>` (const Variant "
"& value)"
msgstr ""

#: ../../reference/propertyanimation.rst:28
msgid ""
":ref:`setTarget<api_PropertyAnimation_setTarget>` (Object * object, const "
"char * property)"
msgstr ""

#: ../../reference/propertyanimation.rst:30
msgid ":ref:`setValid<api_PropertyAnimation_setValid>` (bool  valid)"
msgstr ""

#: ../../reference/propertyanimation.rst:32
msgid ":ref:`const Object<api_const Object>` *"
msgstr ""

#: ../../reference/propertyanimation.rst:32
msgid ":ref:`target<api_PropertyAnimation_target>` () const"
msgstr ""

#: ../../reference/propertyanimation.rst:34 ../../reference/metamethod.rst:30
#: ../../reference/metaobject.rst:44 ../../reference/metaproperty.rst:28
#: ../../reference/metatype.rst:40 ../../reference/metatype.rst:64
msgid ":ref:`const char<api_const char>` *"
msgstr ""

#: ../../reference/propertyanimation.rst:34
msgid ":ref:`targetProperty<api_PropertyAnimation_targetProperty>` () const"
msgstr ""

#: ../../reference/propertyanimation.rst:49
msgid "**PropertyAnimation::PropertyAnimation** ()"
msgstr ""

#: ../../reference/propertyanimation.rst:51
msgid "Default constructs an instance of PropertyAnimation."
msgstr ""

#: ../../reference/propertyanimation.rst:57
msgid "**PropertyAnimation::~PropertyAnimation** ()"
msgstr ""

#: ../../reference/propertyanimation.rst:59
msgid "Destroys the instance of PropertyAnimation. The destructor is virtual."
msgstr ""

#: ../../reference/propertyanimation.rst:65
msgid ""
":ref:`void<api_void>`  **PropertyAnimation::setCurrentValue** (:ref:"
"`Variant<api_Variant>` & *value*)"
msgstr ""

#: ../../reference/propertyanimation.rst:67
msgid "Reimplemented from BlenderAnimation::setCurrentValue()."
msgstr ""

#: ../../reference/propertyanimation.rst:71
msgid ""
"Sets the new current *value* for the animated Variant. And updates animated "
"property of the object."
msgstr ""

#: ../../reference/propertyanimation.rst:77
msgid ""
":ref:`void<api_void>`  **PropertyAnimation::setTarget** (:ref:"
"`Object<api_Object>` * *object*, :ref:`char<api_char>` * *property*)"
msgstr ""

#: ../../reference/propertyanimation.rst:79
msgid "Sets the new animated *property* of the *object*."
msgstr ""

#: ../../reference/propertyanimation.rst:81
msgid "**See also** target()."
msgstr ""

#: ../../reference/propertyanimation.rst:87
msgid ""
":ref:`void<api_void>`  **PropertyAnimation::setValid** (:ref:"
"`bool<api_bool>`  *valid*)"
msgstr ""

#: ../../reference/propertyanimation.rst:89
msgid "Reimplemented from Animation::setValid()."
msgstr ""

#: ../../reference/propertyanimation.rst:99
msgid ""
":ref:`const Object<api_const Object>` * **PropertyAnimation::target** () "
"const"
msgstr ""

#: ../../reference/propertyanimation.rst:101
msgid "Returns the root object of the animated property."
msgstr ""

#: ../../reference/propertyanimation.rst:103
msgid "**See also** setTarget()."
msgstr ""

#: ../../reference/propertyanimation.rst:109
msgid ""
":ref:`const char<api_const char>` * **PropertyAnimation::targetProperty** () "
"const"
msgstr ""

#: ../../reference/propertyanimation.rst:111
msgid "Returns the name of animates property of the object."
msgstr ""

#: ../../reference/variantanimation.rst:3
msgid "VariantAnimation Class"
msgstr ""

#: ../../reference/variantanimation.rst:11
msgid "The VariantAnimation is a base class for all animation tracks."
msgstr ""

#: ../../reference/variantanimation.rst:13
msgid ""
"This class allows to change values in time. VariantAnimation uses key-frame "
"animation mechanism. Developers should specify sequence of key values wich "
"pair of point in time and key value. While animation is playing specific "
"interpolation function moves from one key-frame to another and changing "
"controled value."
msgstr ""

#: ../../reference/variantanimation.rst:15
msgid "List of supported Variant types for animation:"
msgstr ""

#: ../../reference/variantanimation.rst:24
msgid ":ref:`VariantAnimation<api_VariantAnimation_VariantAnimation>` ()"
msgstr ""

#: ../../reference/variantanimation.rst:26
msgid ":ref:`~VariantAnimation<api_VariantAnimation_~VariantAnimation>` ()"
msgstr ""

#: ../../reference/variantanimation.rst:28
msgid ":ref:`currentValue<api_VariantAnimation_currentValue>` () const"
msgstr ""

#: ../../reference/variantanimation.rst:30
msgid ":ref:`curve<api_VariantAnimation_curve>` (int  component = 0) const"
msgstr ""

#: ../../reference/variantanimation.rst:32
msgid ":ref:`loopDuration<api_VariantAnimation_loopDuration>` () const"
msgstr ""

#: ../../reference/variantanimation.rst:34
msgid ":ref:`setCurrentTime<api_VariantAnimation_setCurrentTime>` (int  msecs)"
msgstr ""

#: ../../reference/variantanimation.rst:36
msgid ""
":ref:`setCurrentValue<api_VariantAnimation_setCurrentValue>` (const Variant "
"& value)"
msgstr ""

#: ../../reference/variantanimation.rst:38
msgid ""
":ref:`setCurve<api_VariantAnimation_setCurve>` (AnimationCurve * curve, int  "
"component = 0)"
msgstr ""

#: ../../reference/variantanimation.rst:53
msgid "**VariantAnimation::VariantAnimation** ()"
msgstr ""

#: ../../reference/variantanimation.rst:55
msgid "Default constructs an instance of VariantAnimation."
msgstr ""

#: ../../reference/variantanimation.rst:61
msgid "**VariantAnimation::~VariantAnimation** ()"
msgstr ""

#: ../../reference/variantanimation.rst:63
msgid "Destroys the instance of VariantAnimation. The destructor is virtual."
msgstr ""

#: ../../reference/variantanimation.rst:69
msgid ""
":ref:`Variant<api_Variant>`  **VariantAnimation::currentValue** () const"
msgstr ""

#: ../../reference/variantanimation.rst:71
msgid "Returns the current value for the animated Variant."
msgstr ""

#: ../../reference/variantanimation.rst:73
msgid "**See also** setCurrentValue()."
msgstr ""

#: ../../reference/variantanimation.rst:79
msgid ""
":ref:`AnimationCurve<api_AnimationCurve>` * **VariantAnimation::curve** (:"
"ref:`int<api_int>`  *component* = 0) const"
msgstr ""

#: ../../reference/variantanimation.rst:81
msgid "**See also** setCurve()."
msgstr ""

#: ../../reference/variantanimation.rst:87
msgid ":ref:`int<api_int>`  **VariantAnimation::loopDuration** () const"
msgstr ""

#: ../../reference/variantanimation.rst:95
msgid ""
":ref:`void<api_void>`  **VariantAnimation::setCurrentTime** (:ref:"
"`int<api_int>`  *msecs*)"
msgstr ""

#: ../../reference/variantanimation.rst:105
msgid ""
":ref:`void<api_void>`  **VariantAnimation::setCurrentValue** (:ref:"
"`Variant<api_Variant>` & *value*)"
msgstr ""

#: ../../reference/variantanimation.rst:109
msgid "**See also** currentValue()."
msgstr ""

#: ../../reference/variantanimation.rst:115
msgid ""
":ref:`void<api_void>`  **VariantAnimation::setCurve** (:ref:"
"`AnimationCurve<api_AnimationCurve>` * *curve*, :ref:`int<api_int>`  "
"*component* = 0)"
msgstr ""

#: ../../reference/variantanimation.rst:117
msgid ""
"Sets the new sequence of the key frames as *curve* for the provided "
"conponent."
msgstr ""

#: ../../reference/variantanimation.rst:119
msgid "**See also** *curve*()."
msgstr ""

#: ../../reference/core-module.rst:4
msgid "Core Module"
msgstr ""

#: ../../reference/bson.rst:3
msgid "Bson Class"
msgstr ""

#: ../../reference/bson.rst:5 ../../reference/event.rst:5
#: ../../reference/json.rst:5 ../../reference/metamethod.rst:5
#: ../../reference/metaobject.rst:5 ../../reference/metaproperty.rst:5
#: ../../reference/metatype.rst:5 ../../reference/object.rst:5
#: ../../reference/uri.rst:5 ../../reference/variant.rst:5
#: ../../reference/file.rst:5 ../../reference/input.rst:5
#: ../../reference/log.rst:5 ../../reference/timer.rst:5
#: ../../reference/aabbox.rst:5 ../../reference/matrix3.rst:5
#: ../../reference/matrix4.rst:5 ../../reference/obbox.rst:5
#: ../../reference/plane.rst:5 ../../reference/quaternion.rst:5
#: ../../reference/ray.rst:5 ../../reference/vector2.rst:5
#: ../../reference/vector3.rst:5 ../../reference/vector4.rst:5
msgid "Inherited: None"
msgstr ""

#: ../../reference/bson.rst:11
msgid "Binary JSON format parser."
msgstr ""

#: ../../reference/bson.rst:13
msgid ""
"This class implements Binary JSON parser with Variant based DOM structure "
"input/output. It allows to serialize and deserialize object structures "
"represented in Variant DOM structure."
msgstr ""

#: ../../reference/bson.rst:15 ../../reference/json.rst:15
#: ../../reference/engine.rst:111
msgid "Example:"
msgstr ""

#: ../../reference/bson.rst:30
msgid ""
":ref:`load<api_Bson_load>` (const ByteArray & data, MetaType::Type  type = "
"MetaType::VARIANTLIST)"
msgstr ""

#: ../../reference/bson.rst:32
msgid ":ref:`ByteArray<api_ByteArray>`"
msgstr ""

#: ../../reference/bson.rst:32
msgid ":ref:`save<api_Bson_save>` (const Variant & data)"
msgstr ""

#: ../../reference/bson.rst:41
msgid ""
":ref:`Variant<api_Variant>`  **Bson::load** (:ref:`ByteArray<api_ByteArray>` "
"& *data*, :ref:`MetaType::Type<api_MetaType::Type>`  *type* = MetaType::"
"VARIANTLIST)"
msgstr ""

#: ../../reference/bson.rst:43
msgid ""
"Returns deserialized binary *data* as Variant based DOM structure with "
"expected *type* of container (can be MetaType::VARIANTLIST or MetaType::"
"VARIANTMAP)."
msgstr ""

#: ../../reference/bson.rst:49
msgid ""
":ref:`ByteArray<api_ByteArray>`  **Bson::save** (:ref:`Variant<api_Variant>` "
"& *data*)"
msgstr ""

#: ../../reference/bson.rst:51
msgid "Returns serialized *data* as binary buffer."
msgstr ""

#: ../../reference/event.rst:3
msgid "Event Class"
msgstr ""

#: ../../reference/event.rst:11
msgid "The Event class is the base calss for all event classes."
msgstr ""

#: ../../reference/event.rst:13
msgid ""
"Objects processing events by their virtual Object::event() function called. "
"This function can be reimplemented in subclasses to add additional event "
"handling or change existing."
msgstr ""

#: ../../reference/event.rst:15
msgid ""
"Base Event contain only event type parameter. Subclasses of Event may "
"contain additional parameters to describe particular events."
msgstr ""

#: ../../reference/event.rst:24
msgid ":ref:`Event<api_Event_Event>` (int  type)"
msgstr ""

#: ../../reference/event.rst:26
msgid ":ref:`~Event<api_Event_~Event>` ()"
msgstr ""

#: ../../reference/event.rst:28
msgid ":ref:`type<api_Event_type>` () const"
msgstr ""

#: ../../reference/event.rst:43
msgid "**Event::Event** (:ref:`int<api_int>`  *type*)"
msgstr ""

#: ../../reference/event.rst:45
msgid "Constructs an Event with *type* of event."
msgstr ""

#: ../../reference/event.rst:51
msgid "**Event::~Event** ()"
msgstr ""

#: ../../reference/event.rst:53
msgid "Destroys the instance of Event. The destructor is virtual."
msgstr ""

#: ../../reference/event.rst:59
msgid ":ref:`int<api_int>`  **Event::type** () const"
msgstr ""

#: ../../reference/event.rst:61
msgid "Returns type of event."
msgstr ""

#: ../../reference/json.rst:3
msgid "Json Class"
msgstr ""

#: ../../reference/json.rst:11
msgid "JSON format parser."
msgstr ""

#: ../../reference/json.rst:13
msgid ""
"This class implements Json parser with Variant based DOM structure input/"
"output. It allows to serialize and deserialize object structures represented "
"in Variant DOM structure."
msgstr ""

#: ../../reference/json.rst:30
msgid ":ref:`load<api_Json_load>` (const int & data)"
msgstr ""

#: ../../reference/json.rst:32
msgid ":ref:`save<api_Json_save>` (const Variant & , in  int)"
msgstr ""

#: ../../reference/json.rst:41
msgid ""
":ref:`Variant<api_Variant>`  **Json::load** (:ref:`int<api_int>` & *data*)"
msgstr ""

#: ../../reference/json.rst:43
msgid "Returns deserialized string *data* as Variant based DOM structure."
msgstr ""

#: ../../reference/json.rst:49
msgid ""
":ref:`int<api_int>`  **Json::save** (:ref:`Variant<api_Variant>` & **, :ref:"
"`in<api_in>`  *int*)"
msgstr ""

#: ../../reference/json.rst:51
msgid ""
"Returns **serialized **data **as **string. **Argument **tab **is **used **as "
"**JSON **tabulation **formatting **offset **(-1 **for **one **line **JSON)"
msgstr ""

#: ../../reference/metamethod.rst:3
msgid "MetaMethod Class"
msgstr ""

#: ../../reference/metamethod.rst:11
msgid ""
"The MetaMethod provides an interface to retrieve information about object "
"method at runtime."
msgstr ""

#: ../../reference/metamethod.rst:13
msgid ""
"This class is a part of Object-Introspection-Mechanism. MetaMethod provides "
"information about one particular class method. Developers are able to "
"retrieve information about method arguments, return types and etc."
msgstr ""

#: ../../reference/metamethod.rst:15
msgid ""
"To make methods visible in introspection mechanism, developers must declare "
"those under A_METHODS() macro."
msgstr ""

#: ../../reference/metamethod.rst:24
msgid ""
":ref:`MetaMethod<api_MetaMethod_MetaMethod>` (const MetaMethod::Table * "
"table)"
msgstr ""

#: ../../reference/metamethod.rst:26
msgid ""
":ref:`invoke<api_MetaMethod_invoke>` (Object * object, Variant & "
"returnValue, int  argc, const Variant * args) const"
msgstr ""

#: ../../reference/metamethod.rst:28
msgid ":ref:`isValid<api_MetaMethod_isValid>` () const"
msgstr ""

#: ../../reference/metamethod.rst:30
msgid ":ref:`name<api_MetaMethod_name>` () const"
msgstr ""

#: ../../reference/metamethod.rst:32
msgid ":ref:`parameterCount<api_MetaMethod_parameterCount>` () const"
msgstr ""

#: ../../reference/metamethod.rst:34 ../../reference/metamethod.rst:36
msgid ":ref:`MetaType<api_MetaType>`"
msgstr ""

#: ../../reference/metamethod.rst:34
msgid ":ref:`parameterType<api_MetaMethod_parameterType>` (int  index) const"
msgstr ""

#: ../../reference/metamethod.rst:36
msgid ":ref:`returnType<api_MetaMethod_returnType>` () const"
msgstr ""

#: ../../reference/metamethod.rst:38
msgid ":ref:`signature<api_MetaMethod_signature>` () const"
msgstr ""

#: ../../reference/metamethod.rst:40
msgid ":ref:`table<api_MetaMethod_table>` () const"
msgstr ""

#: ../../reference/metamethod.rst:42
msgid ":ref:`MetaMethod::MethodType<api_MetaMethod::MethodType>`"
msgstr ""

#: ../../reference/metamethod.rst:42
msgid ":ref:`type<api_MetaMethod_type>` () const"
msgstr ""

#: ../../reference/metamethod.rst:57
msgid ""
"**MetaMethod::MetaMethod** (:ref:`MetaMethod::Table<api_MetaMethod::Table>` "
"* *table*)"
msgstr ""

#: ../../reference/metamethod.rst:59
msgid ""
"Constructs MetaMethod object wich will contain information provided in a "
"*table*."
msgstr ""

#: ../../reference/metamethod.rst:65
msgid ""
":ref:`bool<api_bool>`  **MetaMethod::invoke** (:ref:`Object<api_Object>` * "
"*object*, :ref:`Variant<api_Variant>` & *returnValue*, :ref:`int<api_int>`  "
"*argc*, :ref:`Variant<api_Variant>` * *args*) const"
msgstr ""

#: ../../reference/metamethod.rst:67
msgid ""
"Calls current method for *object*. Function recieves an argument count in "
"*argc* parameter and *args* array. Function is able to return the result of "
"method invocation in *returnValue*."
msgstr ""

#: ../../reference/metamethod.rst:69
msgid "Return true on succssed; otherwise returns false."
msgstr ""

#: ../../reference/metamethod.rst:71
msgid "**Note:** Function checks if current method can be invoked."
msgstr ""

#: ../../reference/metamethod.rst:77
msgid ":ref:`bool<api_bool>`  **MetaMethod::isValid** () const"
msgstr ""

#: ../../reference/metamethod.rst:79 ../../reference/metaproperty.rst:63
msgid "Returns true if property is valid; otherwise returns false."
msgstr ""

#: ../../reference/metamethod.rst:85
msgid ":ref:`const char<api_const char>` * **MetaMethod::name** () const"
msgstr ""

#: ../../reference/metamethod.rst:87 ../../reference/metaproperty.rst:71
msgid "Returns a name of method."
msgstr ""

#: ../../reference/metamethod.rst:93
msgid ":ref:`int<api_int>`  **MetaMethod::parameterCount** () const"
msgstr ""

#: ../../reference/metamethod.rst:95
msgid "Returns a parameter count of method."
msgstr ""

#: ../../reference/metamethod.rst:101
msgid ""
":ref:`MetaType<api_MetaType>`  **MetaMethod::parameterType** (:ref:"
"`int<api_int>`  *index*) const"
msgstr ""

#: ../../reference/metamethod.rst:103
msgid "Returns the type of parameter at *index* position."
msgstr ""

#: ../../reference/metamethod.rst:109
msgid ":ref:`MetaType<api_MetaType>`  **MetaMethod::returnType** () const"
msgstr ""

#: ../../reference/metamethod.rst:111
msgid "Returns a return type of method."
msgstr ""

#: ../../reference/metamethod.rst:117
msgid ":ref:`int<api_int>`  **MetaMethod::signature** () const"
msgstr ""

#: ../../reference/metamethod.rst:119
msgid "Returns method signature in text format."
msgstr ""

#: ../../reference/metamethod.rst:125
msgid ""
":ref:`const MetaMethod::Table<api_const MetaMethod::Table>` * **MetaMethod::"
"table** () const"
msgstr ""

#: ../../reference/metamethod.rst:127
msgid "Returns method information table."
msgstr ""

#: ../../reference/metamethod.rst:133
msgid ""
":ref:`MetaMethod::MethodType<api_MetaMethod::MethodType>`  **MetaMethod::"
"type** () const"
msgstr ""

#: ../../reference/metamethod.rst:135
msgid "Returns a type of method."
msgstr ""

#: ../../reference/metaobject.rst:3
msgid "MetaObject Class"
msgstr ""

#: ../../reference/metaobject.rst:11
msgid ""
"The MetaObject provides an interface to retrieve information about Object at "
"runtime."
msgstr ""

#: ../../reference/metaobject.rst:13
msgid ""
"This class is a part of Object-Introspection-Mechanism. MetaObject provides "
"information about one particular class inherited from base Object class. "
"Developers are able to retrieve information about properties, methods and "
"inheritance chains."
msgstr ""

#: ../../reference/metaobject.rst:15
msgid "This class is actively used in Signal-Slot mechanism."
msgstr ""

#: ../../reference/metaobject.rst:24
msgid ""
":ref:`MetaObject<api_MetaObject_MetaObject>` (const char * name, const "
"MetaObject * super, const MetaObject::Constructor  constructor, const "
"MetaMethod::Table * methods, const MetaProperty::Table * props)"
msgstr ""

#: ../../reference/metaobject.rst:26
msgid ":ref:`canCastTo<api_MetaObject_canCastTo>` (const char * type) const"
msgstr ""

#: ../../reference/metaobject.rst:28 ../../reference/methodcallevent.rst:26
#: ../../reference/object.rst:36 ../../reference/object.rst:46
#: ../../reference/object.rst:66 ../../reference/object.rst:78
#: ../../reference/object.rst:104 ../../reference/objectsystem.rst:46
#: ../../reference/objectsystem.rst:50 ../../reference/engine.rst:58
msgid ":ref:`Object<api_Object>` *"
msgstr ""

#: ../../reference/metaobject.rst:28
msgid ":ref:`createInstance<api_MetaObject_createInstance>` () const"
msgstr ""

#: ../../reference/metaobject.rst:30
msgid ""
":ref:`indexOfMethod<api_MetaObject_indexOfMethod>` (const char * signature) "
"const"
msgstr ""

#: ../../reference/metaobject.rst:32
msgid ""
":ref:`indexOfProperty<api_MetaObject_indexOfProperty>` (const char * name) "
"const"
msgstr ""

#: ../../reference/metaobject.rst:34
msgid ""
":ref:`indexOfSignal<api_MetaObject_indexOfSignal>` (const char * signature) "
"const"
msgstr ""

#: ../../reference/metaobject.rst:36
msgid ""
":ref:`indexOfSlot<api_MetaObject_indexOfSlot>` (const char * signature) const"
msgstr ""

#: ../../reference/metaobject.rst:38
msgid ":ref:`MetaMethod<api_MetaMethod>`"
msgstr ""

#: ../../reference/metaobject.rst:38
msgid ":ref:`method<api_MetaObject_method>` (int  index) const"
msgstr ""

#: ../../reference/metaobject.rst:40
msgid ":ref:`methodCount<api_MetaObject_methodCount>` () const"
msgstr ""

#: ../../reference/metaobject.rst:42
msgid ":ref:`methodOffset<api_MetaObject_methodOffset>` () const"
msgstr ""

#: ../../reference/metaobject.rst:44
msgid ":ref:`name<api_MetaObject_name>` () const"
msgstr ""

#: ../../reference/metaobject.rst:46
msgid ":ref:`MetaProperty<api_MetaProperty>`"
msgstr ""

#: ../../reference/metaobject.rst:46
msgid ":ref:`property<api_MetaObject_property>` (int  index) const"
msgstr ""

#: ../../reference/metaobject.rst:48
msgid ":ref:`propertyCount<api_MetaObject_propertyCount>` () const"
msgstr ""

#: ../../reference/metaobject.rst:50
msgid ":ref:`propertyOffset<api_MetaObject_propertyOffset>` () const"
msgstr ""

#: ../../reference/metaobject.rst:52 ../../reference/object.rst:62
#: ../../reference/object.rst:108
msgid ":ref:`const MetaObject<api_const MetaObject>` *"
msgstr ""

#: ../../reference/metaobject.rst:52
msgid ":ref:`super<api_MetaObject_super>` () const"
msgstr ""

#: ../../reference/metaobject.rst:67
msgid ""
"**MetaObject::MetaObject** (:ref:`char<api_char>` * *name*, :ref:"
"`MetaObject<api_MetaObject>` * *super*, :ref:`MetaObject::"
"Constructor<api_MetaObject::Constructor>`  *constructor*, :ref:`MetaMethod::"
"Table<api_MetaMethod::Table>` * *methods*, :ref:`MetaProperty::"
"Table<api_MetaProperty::Table>` * *props*)"
msgstr ""

#: ../../reference/metaobject.rst:69
msgid ""
"Constructs MetaObject object for Object with type *name*, inherited from "
"*super* class and provided *constructor*, *methods* and *props*."
msgstr ""

#: ../../reference/metaobject.rst:75
msgid ""
":ref:`bool<api_bool>`  **MetaObject::canCastTo** (:ref:`char<api_char>` * "
"*type*) const"
msgstr ""

#: ../../reference/metaobject.rst:77
msgid "Checks the abillity to cast the current object to *type*."
msgstr ""

#: ../../reference/metaobject.rst:79
msgid ""
"**Note:** This method tries to go through inheritance to find a common "
"parent class."
msgstr ""

#: ../../reference/metaobject.rst:81
msgid "Returns true if object can be cast to *type*; otherwise returns false."
msgstr ""

#: ../../reference/metaobject.rst:87
msgid ":ref:`Object<api_Object>` * **MetaObject::createInstance** () const"
msgstr ""

#: ../../reference/metaobject.rst:89
msgid "Constructs and return a new instance of associated class."
msgstr ""

#: ../../reference/metaobject.rst:95
msgid ""
":ref:`int<api_int>`  **MetaObject::indexOfMethod** (:ref:`char<api_char>` * "
"*signature*) const"
msgstr ""

#: ../../reference/metaobject.rst:97
msgid ""
"Returns index of class method by provided *signature*; otherwise returns -1."
msgstr ""

#: ../../reference/metaobject.rst:99 ../../reference/metaobject.rst:109
#: ../../reference/metaobject.rst:119 ../../reference/metaobject.rst:129
#: ../../reference/metaobject.rst:139 ../../reference/metaobject.rst:173
msgid "**Note:** This method looks through class hierarchy."
msgstr ""

#: ../../reference/metaobject.rst:105
msgid ""
":ref:`int<api_int>`  **MetaObject::indexOfProperty** (:ref:`char<api_char>` "
"* *name*) const"
msgstr ""

#: ../../reference/metaobject.rst:107
msgid ""
"Returns index of class property by provided *name*; otherwise returns -1."
msgstr ""

#: ../../reference/metaobject.rst:115
msgid ""
":ref:`int<api_int>`  **MetaObject::indexOfSignal** (:ref:`char<api_char>` * "
"*signature*) const"
msgstr ""

#: ../../reference/metaobject.rst:117
msgid ""
"Returns index of class signal by provided *signature*; otherwise returns -1."
msgstr ""

#: ../../reference/metaobject.rst:125
msgid ""
":ref:`int<api_int>`  **MetaObject::indexOfSlot** (:ref:`char<api_char>` * "
"*signature*) const"
msgstr ""

#: ../../reference/metaobject.rst:127
msgid ""
"Returns index of class slot by provided *signature*; otherwise returns -1."
msgstr ""

#: ../../reference/metaobject.rst:135
msgid ""
":ref:`MetaMethod<api_MetaMethod>`  **MetaObject::method** (:ref:"
"`int<api_int>`  *index*) const"
msgstr ""

#: ../../reference/metaobject.rst:137
msgid "Returns MetaMethod object by provided *index* of method."
msgstr ""

#: ../../reference/metaobject.rst:145
msgid ":ref:`int<api_int>`  **MetaObject::methodCount** () const"
msgstr ""

#: ../../reference/metaobject.rst:147
msgid ""
"Returns the sum of methods for the current class and parent classes. It's "
"includes signals and slots."
msgstr ""

#: ../../reference/metaobject.rst:153
msgid ":ref:`int<api_int>`  **MetaObject::methodOffset** () const"
msgstr ""

#: ../../reference/metaobject.rst:155
msgid ""
"Returns the first index of method for current class. The offset is the sum "
"of all methods in parent classes."
msgstr ""

#: ../../reference/metaobject.rst:161
msgid ":ref:`const char<api_const char>` * **MetaObject::name** () const"
msgstr ""

#: ../../reference/metaobject.rst:163
msgid "Returns the name of the object type."
msgstr ""

#: ../../reference/metaobject.rst:169
msgid ""
":ref:`MetaProperty<api_MetaProperty>`  **MetaObject::property** (:ref:"
"`int<api_int>`  *index*) const"
msgstr ""

#: ../../reference/metaobject.rst:171
msgid "Returns MetaProperty object by provided *index* of property."
msgstr ""

#: ../../reference/metaobject.rst:179
msgid ":ref:`int<api_int>`  **MetaObject::propertyCount** () const"
msgstr ""

#: ../../reference/metaobject.rst:181
msgid "Returns the sum of properties for the current class and parent classes."
msgstr ""

#: ../../reference/metaobject.rst:187
msgid ":ref:`int<api_int>`  **MetaObject::propertyOffset** () const"
msgstr ""

#: ../../reference/metaobject.rst:189
msgid ""
"Returns the first index of property for current class. The offset is the sum "
"of all properties in parent classes."
msgstr ""

#: ../../reference/metaobject.rst:195
msgid ""
":ref:`const MetaObject<api_const MetaObject>` * **MetaObject::super** () "
"const"
msgstr ""

#: ../../reference/metaobject.rst:197
msgid "Returns an introspection object for parent class."
msgstr ""

#: ../../reference/metaproperty.rst:3
msgid "MetaProperty Class"
msgstr ""

#: ../../reference/metaproperty.rst:11
msgid ""
"The MetaProperty provides an interface to retrieve information about object "
"property at runtime."
msgstr ""

#: ../../reference/metaproperty.rst:13
msgid ""
"This class is a part of Object-Introspection-Mechanism. MetaProperty "
"provides information about one particular class property. Developers are "
"able to retrieve information about property type, read and write values."
msgstr ""

#: ../../reference/metaproperty.rst:15
msgid ""
"To make properties visible in introspection mechanism, developers must "
"declare those under A_PROPERTIES() macro."
msgstr ""

#: ../../reference/metaproperty.rst:24
msgid ""
":ref:`MetaProperty<api_MetaProperty_MetaProperty>` (const MetaProperty::"
"Table * table)"
msgstr ""

#: ../../reference/metaproperty.rst:26
msgid ":ref:`isValid<api_MetaProperty_isValid>` () const"
msgstr ""

#: ../../reference/metaproperty.rst:28
msgid ":ref:`name<api_MetaProperty_name>` () const"
msgstr ""

#: ../../reference/metaproperty.rst:30
msgid ":ref:`read<api_MetaProperty_read>` (const Object * object) const"
msgstr ""

#: ../../reference/metaproperty.rst:32
msgid ":ref:`table<api_MetaProperty_table>` () const"
msgstr ""

#: ../../reference/metaproperty.rst:34
msgid ":ref:`const MetaType<api_const MetaType>`"
msgstr ""

#: ../../reference/metaproperty.rst:34
msgid ":ref:`type<api_MetaProperty_type>` () const"
msgstr ""

#: ../../reference/metaproperty.rst:36
msgid ""
":ref:`write<api_MetaProperty_write>` (Object * object, const Variant & "
"value) const"
msgstr ""

#: ../../reference/metaproperty.rst:38
msgid ""
":ref:`write<api_MetaProperty_write>` (Object * object, const T & value) const"
msgstr ""

#: ../../reference/metaproperty.rst:53
msgid ""
"**MetaProperty::MetaProperty** (:ref:`MetaProperty::Table<api_MetaProperty::"
"Table>` * *table*)"
msgstr ""

#: ../../reference/metaproperty.rst:55
msgid ""
"Constructs MetaProperty object wich will contain information provided in a "
"*table*."
msgstr ""

#: ../../reference/metaproperty.rst:61
msgid ":ref:`bool<api_bool>`  **MetaProperty::isValid** () const"
msgstr ""

#: ../../reference/metaproperty.rst:69
msgid ":ref:`const char<api_const char>` * **MetaProperty::name** () const"
msgstr ""

#: ../../reference/metaproperty.rst:77
msgid ""
":ref:`Variant<api_Variant>`  **MetaProperty::read** (:ref:"
"`Object<api_Object>` * *object*) const"
msgstr ""

#: ../../reference/metaproperty.rst:79
msgid ""
"Returns the value as Variant which contain current property of provided "
"*object*."
msgstr ""

#: ../../reference/metaproperty.rst:85
msgid ""
":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` * "
"**MetaProperty::table** () const"
msgstr ""

#: ../../reference/metaproperty.rst:87
msgid "Returns property information table."
msgstr ""

#: ../../reference/metaproperty.rst:93
msgid ""
":ref:`const MetaType<api_const MetaType>`  **MetaProperty::type** () const"
msgstr ""

#: ../../reference/metaproperty.rst:95
msgid "Returns a type of property."
msgstr ""

#: ../../reference/metaproperty.rst:101
msgid ""
":ref:`void<api_void>`  **MetaProperty::write** (:ref:`Object<api_Object>` * "
"*object*, :ref:`Variant<api_Variant>` & *value*) const"
msgstr ""

#: ../../reference/metaproperty.rst:103
msgid "Tries to write a *value* as Variant to provided *object*."
msgstr ""

#: ../../reference/metaproperty.rst:109
msgid ""
":ref:`void<api_void>`  **MetaProperty::write** (:ref:`Object<api_Object>` * "
"*object*, :ref:`T<api_T>` & *value*) const"
msgstr ""

#: ../../reference/metatype.rst:3
msgid "MetaType Class"
msgstr ""

#: ../../reference/metatype.rst:11
msgid ""
"The MetaType provides an interface to retrieve information about data type "
"at runtime."
msgstr ""

#: ../../reference/metatype.rst:13
msgid ""
"This class is designed for retrieving of runtime type information with "
"additional functionality."
msgstr ""

#: ../../reference/metatype.rst:15
msgid ""
"Some of registered types can be automatically converted to different types "
"with MetaType::convert functunction. The following conversions are "
"predefined:"
msgstr ""

#: ../../reference/metatype.rst:17
msgid ""
"To convert values to other types developer should define own conversion type "
"function using MetaType::registerConverter() function"
msgstr ""

#: ../../reference/metatype.rst:26
msgid ":ref:`MetaType<api_MetaType_MetaType>` (const MetaType::Table * table)"
msgstr ""

#: ../../reference/metatype.rst:28
msgid ""
":ref:`compare<api_MetaType_compare>` (const void * left, const void * right) "
"const"
msgstr ""

#: ../../reference/metatype.rst:30 ../../reference/metatype.rst:32
#: ../../reference/metatype.rst:52 ../../reference/metatype.rst:56
#: ../../reference/variant.rst:70
msgid ":ref:`void<api_void>` *"
msgstr ""

#: ../../reference/metatype.rst:30
msgid ""
":ref:`construct<api_MetaType_construct>` (void * where, const void * copy = "
"nullptr) const"
msgstr ""

#: ../../reference/metatype.rst:32
msgid ":ref:`create<api_MetaType_create>` (const void * copy = nullptr) const"
msgstr ""

#: ../../reference/metatype.rst:34
msgid ":ref:`destroy<api_MetaType_destroy>` (void * data) const"
msgstr ""

#: ../../reference/metatype.rst:36
msgid ":ref:`destruct<api_MetaType_destruct>` (void * data) const"
msgstr ""

#: ../../reference/metatype.rst:38
msgid ":ref:`isValid<api_MetaType_isValid>` () const"
msgstr ""

#: ../../reference/metatype.rst:40
msgid ":ref:`name<api_MetaType_name>` () const"
msgstr ""

#: ../../reference/metatype.rst:42
msgid ":ref:`size<api_MetaType_size>` () const"
msgstr ""

#: ../../reference/metatype.rst:50
msgid ""
":ref:`compare<api_MetaType_compare>` (const void * left, const void * right, "
"int  type)"
msgstr ""

#: ../../reference/metatype.rst:52
msgid ""
":ref:`construct<api_MetaType_construct>` (int  type, void * where, const "
"void * copy = nullptr)"
msgstr ""

#: ../../reference/metatype.rst:54
msgid ""
":ref:`convert<api_MetaType_convert>` (const void * from, int  fromType, void "
"* to, int  toType)"
msgstr ""

#: ../../reference/metatype.rst:56
msgid ""
":ref:`create<api_MetaType_create>` (int  type, const void * copy = nullptr)"
msgstr ""

#: ../../reference/metatype.rst:58
msgid ":ref:`destroy<api_MetaType_destroy>` (int  type, void * data)"
msgstr ""

#: ../../reference/metatype.rst:60
msgid ":ref:`destruct<api_MetaType_destruct>` (int  type, void * data)"
msgstr ""

#: ../../reference/metatype.rst:62
msgid ":ref:`hasConverter<api_MetaType_hasConverter>` (int  from, int  to)"
msgstr ""

#: ../../reference/metatype.rst:64
msgid ":ref:`name<api_MetaType_name>` (int  type)"
msgstr ""

#: ../../reference/metatype.rst:66
msgid ""
":ref:`registerConverter<api_MetaType_registerConverter>` (int  from, int  "
"to, MetaType::converterCallback  function)"
msgstr ""

#: ../../reference/metatype.rst:68
msgid ":ref:`registerType<api_MetaType_registerType>` (MetaType::Table & )"
msgstr ""

#: ../../reference/metatype.rst:70
msgid ":ref:`size<api_MetaType_size>` (int  type)"
msgstr ""

#: ../../reference/metatype.rst:72
msgid ":ref:`MetaType::Table<api_MetaType::Table>` *"
msgstr ""

#: ../../reference/metatype.rst:72
msgid ":ref:`table<api_MetaType_table>` (int  type)"
msgstr ""

#: ../../reference/metatype.rst:74
msgid ":ref:`type<api_MetaType_type>` (const char * )"
msgstr ""

#: ../../reference/metatype.rst:76
msgid ":ref:`type<api_MetaType_type>` (const int & )"
msgstr ""

#: ../../reference/metatype.rst:78
msgid ":ref:`type<api_MetaType_type>` ()"
msgstr ""

#: ../../reference/metatype.rst:80
msgid ":ref:`MetaType::TypeMap<api_MetaType::TypeMap>`"
msgstr ""

#: ../../reference/metatype.rst:80
msgid ":ref:`types<api_MetaType_types>` ()"
msgstr ""

#: ../../reference/metatype.rst:82
msgid ""
":ref:`unregisterType<api_MetaType_unregisterType>` (MetaType::Table & table)"
msgstr ""

#: ../../reference/metatype.rst:91
msgid ""
"**MetaType::MetaType** (:ref:`MetaType::Table<api_MetaType::Table>` * "
"*table*)"
msgstr ""

#: ../../reference/metatype.rst:93
msgid ""
"Constructs MetaType object wich will contain information provided in a "
"*table*."
msgstr ""

#: ../../reference/metatype.rst:99
msgid ""
":ref:`bool<api_bool>`  **MetaType::compare** (:ref:`void<api_void>` * "
"*left*, :ref:`void<api_void>` * *right*) const"
msgstr ""

#: ../../reference/metatype.rst:101
msgid ""
"Returns true in case of *left* value is equal to *right* value; otherwise "
"returns false."
msgstr ""

#: ../../reference/metatype.rst:107
msgid ""
":ref:`bool<api_bool>`  **MetaType::compare** (:ref:`void<api_void>` * "
"*left*, :ref:`void<api_void>` * *right*, :ref:`int<api_int>`  *type*)"
msgstr ""

#: ../../reference/metatype.rst:109
msgid ""
"Returns true in case of *left* value is equal to *right* value with *type*; "
"otherwise returns false."
msgstr ""

#: ../../reference/metatype.rst:115
msgid ""
":ref:`void<api_void>` * **MetaType::construct** (:ref:`void<api_void>` * "
"*where*, :ref:`void<api_void>` * *copy* = nullptr) const"
msgstr ""

#: ../../reference/metatype.rst:117
msgid ""
"Constructs a value of the given type, wich represented by current MetaType "
"object in the existing memory addressed by *where*, that is a *copy* of "
"*copy*, and returns *where*. If *copy* is zero, the value is default "
"constructed."
msgstr ""

#: ../../reference/metatype.rst:123
msgid ""
":ref:`void<api_void>` * **MetaType::construct** (:ref:`int<api_int>`  "
"*type*, :ref:`void<api_void>` * *where*, :ref:`void<api_void>` * *copy* = "
"nullptr)"
msgstr ""

#: ../../reference/metatype.rst:125
msgid ""
"Constructs a value of the given *type* in the existing memory addressed by "
"*where*, that is a *copy* of *copy*, and returns *where*. If *copy* is zero, "
"the value is default constructed."
msgstr ""

#: ../../reference/metatype.rst:131
msgid ""
":ref:`bool<api_bool>`  **MetaType::convert** (:ref:`void<api_void>` * "
"*from*, :ref:`int<api_int>`  *fromType*, :ref:`void<api_void>` * *to*, :ref:"
"`int<api_int>`  *toType*)"
msgstr ""

#: ../../reference/metatype.rst:133
msgid ""
"Tries *to* convert value *from* with type *from*Type *to* type *to*Type and "
"place the result *to* output value *to*. Returns true if conversion succeed; "
"otherwise returns false."
msgstr ""

#: ../../reference/metatype.rst:135 ../../reference/metatype.rst:225
msgid "**See also** hasConverter()."
msgstr ""

#: ../../reference/metatype.rst:141
msgid ""
":ref:`void<api_void>` * **MetaType::create** (:ref:`void<api_void>` * *copy* "
"= nullptr) const"
msgstr ""

#: ../../reference/metatype.rst:143
msgid ""
"Returns a *copy* of *copy* value, with type, wich represented by current "
"MetaType object. If *copy* is null, creates a default constructed instance."
msgstr ""

#: ../../reference/metatype.rst:149
msgid ""
":ref:`void<api_void>` * **MetaType::create** (:ref:`int<api_int>`  *type*, :"
"ref:`void<api_void>` * *copy* = nullptr)"
msgstr ""

#: ../../reference/metatype.rst:151
msgid ""
"Returns a *copy* of *copy* value, with *type*. If *copy* is null, creates a "
"default constructed instance."
msgstr ""

#: ../../reference/metatype.rst:157
msgid ""
":ref:`void<api_void>`  **MetaType::destroy** (:ref:`void<api_void>` * "
"*data*) const"
msgstr ""

#: ../../reference/metatype.rst:159
msgid ""
"Destroys the value with type, wich represented by current MetaType object, "
"located at *data*. This function calls delete operator."
msgstr ""

#: ../../reference/metatype.rst:165
msgid ""
":ref:`void<api_void>`  **MetaType::destroy** (:ref:`int<api_int>`  *type*, :"
"ref:`void<api_void>` * *data*)"
msgstr ""

#: ../../reference/metatype.rst:167
msgid ""
"Destroys the value with *type*, located at *data*. This function calls "
"delete operator."
msgstr ""

#: ../../reference/metatype.rst:173
msgid ""
":ref:`void<api_void>`  **MetaType::destruct** (:ref:`void<api_void>` * "
"*data*) const"
msgstr ""

#: ../../reference/metatype.rst:175
msgid ""
"Destructs the value with type, wich represented by current MetaType object, "
"located at *data*. Unlike destroy(), this function only invokes the type's "
"destructor, it doesn't invoke the delete operator."
msgstr ""

#: ../../reference/metatype.rst:181
msgid ""
":ref:`void<api_void>`  **MetaType::destruct** (:ref:`int<api_int>`  *type*, :"
"ref:`void<api_void>` * *data*)"
msgstr ""

#: ../../reference/metatype.rst:183
msgid ""
"Destructs the value with *type*, located at *data*. Unlike destroy(), this "
"function only invokes the *type*'s destructor, it doesn't invoke the delete "
"operator."
msgstr ""

#: ../../reference/metatype.rst:189
msgid ""
":ref:`bool<api_bool>`  **MetaType::hasConverter** (:ref:`int<api_int>`  "
"*from*, :ref:`int<api_int>`  *to*)"
msgstr ""

#: ../../reference/metatype.rst:191
msgid ""
"Returns true in case of type *from* can be converted *to* type *to*; "
"otherwise returns false."
msgstr ""

#: ../../reference/metatype.rst:197
msgid ":ref:`bool<api_bool>`  **MetaType::isValid** () const"
msgstr ""

#: ../../reference/metatype.rst:199
msgid ""
"Returns true in case of this MetaType object contain valid information; "
"otherwise returns false."
msgstr ""

#: ../../reference/metatype.rst:205
msgid ":ref:`const char<api_const char>` * **MetaType::name** () const"
msgstr ""

#: ../../reference/metatype.rst:207
msgid "Returns the name of type."
msgstr ""

#: ../../reference/metatype.rst:213
msgid ""
":ref:`const char<api_const char>` * **MetaType::name** (:ref:`int<api_int>`  "
"*type*)"
msgstr ""

#: ../../reference/metatype.rst:215
msgid ""
"Returns a name of *type* with *type* ID. Returns nullptr for unregistered "
"*type*."
msgstr ""

#: ../../reference/metatype.rst:221
msgid ""
":ref:`bool<api_bool>`  **MetaType::registerConverter** (:ref:`int<api_int>`  "
"*from*, :ref:`int<api_int>`  *to*, :ref:`MetaType::"
"converterCallback<api_MetaType::converterCallback>`  *function*)"
msgstr ""

#: ../../reference/metatype.rst:223
msgid ""
"Registers the possibility *to* convert value type *from* *to* type *to* with "
"conversion *function*. Returns true in case of converter successfully "
"registered; otherwise returns false."
msgstr ""

#: ../../reference/metatype.rst:231
msgid ""
":ref:`int<api_int>`  **MetaType::registerType** (:ref:`MetaType::"
"Table<api_MetaType::Table>` & **)"
msgstr ""

#: ../../reference/metatype.rst:233
msgid ""
"Registers **type **by **type **MetaType::Table **table. **Use "
"**registerMetaType() **instead **this **function. **Returns **an **ID **of "
"**registered **type."
msgstr ""

#: ../../reference/metatype.rst:239
msgid ":ref:`int<api_int>`  **MetaType::size** () const"
msgstr ""

#: ../../reference/metatype.rst:241
msgid "Returns the size of type."
msgstr ""

#: ../../reference/metatype.rst:247
msgid ":ref:`int<api_int>`  **MetaType::size** (:ref:`int<api_int>`  *type*)"
msgstr ""

#: ../../reference/metatype.rst:249
msgid ""
"Returns a size of *type* with *type* ID. Returns 0 for unregistered *type*."
msgstr ""

#: ../../reference/metatype.rst:255
msgid ""
":ref:`MetaType::Table<api_MetaType::Table>` * **MetaType::table** (:ref:"
"`int<api_int>`  *type*)"
msgstr ""

#: ../../reference/metatype.rst:257
msgid ""
"Returns *type* information table if *type* registered; otherwise returns "
"nullptr."
msgstr ""

#: ../../reference/metatype.rst:263
msgid ":ref:`int<api_int>`  **MetaType::type** (:ref:`char<api_char>` * **)"
msgstr ""

#: ../../reference/metatype.rst:265
msgid ""
"Returns **an **ID **of **type **with **type **name. **Returns **MetaType::"
"INVALID **for **unregistered **type."
msgstr ""

#: ../../reference/metatype.rst:271
msgid ":ref:`int<api_int>`  **MetaType::type** (:ref:`int<api_int>` & **)"
msgstr ""

#: ../../reference/metatype.rst:273
msgid ""
"Returns **an **ID **of **type **with **type **info. **Returns **MetaType::"
"INVALID **for **unregistered **type."
msgstr ""

#: ../../reference/metatype.rst:279
msgid ":ref:`int<api_int>`  **MetaType::type** ()"
msgstr ""

#: ../../reference/metatype.rst:285
msgid ":ref:`MetaType::TypeMap<api_MetaType::TypeMap>`  **MetaType::types** ()"
msgstr ""

#: ../../reference/metatype.rst:287
msgid "Returns a table of registered types."
msgstr ""

#: ../../reference/metatype.rst:293
msgid ""
":ref:`void<api_void>`  **MetaType::unregisterType** (:ref:`MetaType::"
"Table<api_MetaType::Table>` & *table*)"
msgstr ""

#: ../../reference/metatype.rst:295
msgid ""
"Unregisters type by type MetaType::Table *table*. Use unregisterMetaType() "
"instead this function."
msgstr ""

#: ../../reference/methodcallevent.rst:3
msgid "MethodCallEvent Class"
msgstr ""

#: ../../reference/methodcallevent.rst:5
msgid "Inherited: :ref:`Event<api_Event>`"
msgstr ""

#: ../../reference/methodcallevent.rst:11
msgid ""
"MethodCallEvent implements event which contain all necessary information for "
"method invocation."
msgstr ""

#: ../../reference/methodcallevent.rst:20
msgid ""
":ref:`MethodCallEvent<api_MethodCallEvent_MethodCallEvent>` (int  method, "
"Object * senderm, const Variant & args)"
msgstr ""

#: ../../reference/methodcallevent.rst:22
msgid ":ref:`const Variant<api_const Variant>` *"
msgstr ""

#: ../../reference/methodcallevent.rst:22
msgid ":ref:`args<api_MethodCallEvent_args>` () const"
msgstr ""

#: ../../reference/methodcallevent.rst:24
msgid ":ref:`method<api_MethodCallEvent_method>` () const"
msgstr ""

#: ../../reference/methodcallevent.rst:26
msgid ":ref:`sender<api_MethodCallEvent_sender>` () const"
msgstr ""

#: ../../reference/methodcallevent.rst:41
msgid ""
"**MethodCallEvent::MethodCallEvent** (:ref:`int<api_int>`  *method*, :ref:"
"`Object<api_Object>` * *senderm*, :ref:`Variant<api_Variant>` & *args*)"
msgstr ""

#: ../../reference/methodcallevent.rst:43
msgid "Default constructs an instance of MethodCallEvent."
msgstr ""

#: ../../reference/methodcallevent.rst:49
msgid ""
":ref:`const Variant<api_const Variant>` * **MethodCallEvent::args** () const"
msgstr ""

#: ../../reference/methodcallevent.rst:51
msgid "Returns an arguments array for method invocation."
msgstr ""

#: ../../reference/methodcallevent.rst:57
msgid ":ref:`int<api_int>`  **MethodCallEvent::method** () const"
msgstr ""

#: ../../reference/methodcallevent.rst:59
msgid "Returns an index of method."
msgstr ""

#: ../../reference/methodcallevent.rst:65
msgid ":ref:`Object<api_Object>` * **MethodCallEvent::sender** () const"
msgstr ""

#: ../../reference/methodcallevent.rst:67
msgid "Returns the object that sent this event."
msgstr ""

#: ../../reference/object.rst:3
msgid "Object Class"
msgstr ""

#: ../../reference/object.rst:11
msgid "The Object class is the base calss for all object classes."
msgstr ""

#: ../../reference/object.rst:13
msgid ""
"The object is the central part of the Next library. For communication "
"between objects two mechanisms was implemented the signals and slots also "
"event based approach. To connect two objects between use connect() method "
"and the sender object will notify the receiver object about necessary events."
msgstr ""

#: ../../reference/object.rst:15
msgid ""
"Objects can be organized into an object trees. Each object can have an "
"unlimited number of children objects. When you assign parent to an object it "
"automatically add itself to the parent children list. Parent object takes "
"ownership of the child object. This means that the child will be "
"automatically deleted if the parent object is deleted. Child object can be "
"found in hierarchy of objects by path or by the type using find(), "
"findChild() or findChildren()."
msgstr ""

#: ../../reference/object.rst:17
msgid ""
"Each Object has name() and this name must be unique in space of object level "
"in hierarchy i.e. parent with name \"House\" can't has two childs with name "
"\"Roof\". This names is used to reach objects by its paths land.find(\"House/"
"Roof\") will return \"Roof\" object."
msgstr ""

#: ../../reference/object.rst:19
msgid ""
"Each Object has MetaObject declaration. MetaObject system can be used to "
"declare and retrieve structure of object at runtime."
msgstr ""

#: ../../reference/object.rst:21
msgid "Based on Actor model the object can't be copied only clone()."
msgstr ""

#: ../../reference/object.rst:30
msgid ":ref:`Object<api_Object_Object>` ()"
msgstr ""

#: ../../reference/object.rst:32
msgid ":ref:`~Object<api_Object_~Object>` ()"
msgstr ""

#: ../../reference/object.rst:34
msgid ":ref:`addChild<api_Object_addChild>` (Object * child)"
msgstr ""

#: ../../reference/object.rst:36
msgid ":ref:`clone<api_Object_clone>` ()"
msgstr ""

#: ../../reference/object.rst:38
msgid ":ref:`clonedFrom<api_Object_clonedFrom>` () const"
msgstr ""

#: ../../reference/object.rst:40
msgid ":ref:`deleteLater<api_Object_deleteLater>` ()"
msgstr ""

#: ../../reference/object.rst:42
msgid ""
":ref:`emitSignal<api_Object_emitSignal>` (const char * signal, const Variant "
"& args = Variant())"
msgstr ""

#: ../../reference/object.rst:44
msgid ":ref:`event<api_Object_event>` (Event * event)"
msgstr ""

#: ../../reference/object.rst:46
msgid ":ref:`find<api_Object_find>` (const int & path)"
msgstr ""

#: ../../reference/object.rst:48 ../../reference/variant.rst:104
msgid ":ref:`T<api_T>`"
msgstr ""

#: ../../reference/object.rst:48
msgid ":ref:`findChild<api_Object_findChild>` (bool  recursive = true)"
msgstr ""

#: ../../reference/object.rst:50
msgid ":ref:`findChildren<api_Object_findChildren>` (boo  bool)"
msgstr ""

#: ../../reference/object.rst:52
msgid ":ref:`const Object::ObjectList<api_const Object::ObjectList>` &"
msgstr ""

#: ../../reference/object.rst:52
msgid ":ref:`getChildren<api_Object_getChildren>` () const"
msgstr ""

#: ../../reference/object.rst:54
msgid ":ref:`const Object::LinkList<api_const Object::LinkList>` &"
msgstr ""

#: ../../reference/object.rst:54
msgid ":ref:`getReceivers<api_Object_getReceivers>` () const"
msgstr ""

#: ../../reference/object.rst:56
msgid ":ref:`isSerializable<api_Object_isSerializable>` () const"
msgstr ""

#: ../../reference/object.rst:58
msgid ":ref:`loadData<api_Object_loadData>` (const VariantList & data)"
msgstr ""

#: ../../reference/object.rst:60
msgid ":ref:`loadUserData<api_Object_loadUserData>` (const VariantMap & data)"
msgstr ""

#: ../../reference/object.rst:62
msgid ":ref:`metaObject<api_Object_metaObject>` () const"
msgstr ""

#: ../../reference/object.rst:64
msgid ":ref:`name<api_Object_name>` () const"
msgstr ""

#: ../../reference/object.rst:66
msgid ":ref:`parent<api_Object_parent>` () const"
msgstr ""

#: ../../reference/object.rst:68
msgid ":ref:`postEvent<api_Object_postEvent>` (Event * event)"
msgstr ""

#: ../../reference/object.rst:70
msgid ":ref:`property<api_Object_property>` (const char * name) const"
msgstr ""

#: ../../reference/object.rst:72
msgid ":ref:`removeChild<api_Object_removeChild>` (Object * child)"
msgstr ""

#: ../../reference/object.rst:74
msgid ":ref:`VariantList<api_VariantList>`"
msgstr ""

#: ../../reference/object.rst:74
msgid ":ref:`saveData<api_Object_saveData>` () const"
msgstr ""

#: ../../reference/object.rst:76
msgid ":ref:`VariantMap<api_VariantMap>`"
msgstr ""

#: ../../reference/object.rst:76
msgid ":ref:`saveUserData<api_Object_saveUserData>` () const"
msgstr ""

#: ../../reference/object.rst:78
msgid ":ref:`sender<api_Object_sender>` () const"
msgstr ""

#: ../../reference/object.rst:80
msgid ":ref:`setName<api_Object_setName>` (const int & name)"
msgstr ""

#: ../../reference/object.rst:82
msgid ":ref:`setParent<api_Object_setParent>` (Object * parent)"
msgstr ""

#: ../../reference/object.rst:84
msgid ""
":ref:`setProperty<api_Object_setProperty>` (const char * name, const Variant "
"& value)"
msgstr ""

#: ../../reference/object.rst:86
msgid ":ref:`ObjectSystem<api_ObjectSystem>` *"
msgstr ""

#: ../../reference/object.rst:86
msgid ":ref:`system<api_Object_system>` () const"
msgstr ""

#: ../../reference/object.rst:88
msgid ":ref:`typeName<api_Object_typeName>` () const"
msgstr ""

#: ../../reference/object.rst:90
msgid ":ref:`uuid<api_Object_uuid>` () const"
msgstr ""

#: ../../reference/object.rst:92
msgid ":ref:`operator!=<api_Object_operator!=>` (const Object & ) const"
msgstr ""

#: ../../reference/object.rst:94
msgid ":ref:`operator==<api_Object_operator==>` (const Object & ) const"
msgstr ""

#: ../../reference/object.rst:102
msgid ""
":ref:`connect<api_Object_connect>` (Object * sender, const char * signal, "
"Object * receiver, const char * method)"
msgstr ""

#: ../../reference/object.rst:104
msgid ":ref:`construct<api_Object_construct>` ()"
msgstr ""

#: ../../reference/object.rst:106
msgid ""
":ref:`disconnect<api_Object_disconnect>` (Object * sender, const char * "
"signal, Object * receiver, const char * method)"
msgstr ""

#: ../../reference/object.rst:108
msgid ":ref:`metaClass<api_Object_metaClass>` ()"
msgstr ""

#: ../../reference/object.rst:117
msgid "**Object::Object** ()"
msgstr ""

#: ../../reference/object.rst:119
msgid "Constructs an object."
msgstr ""

#: ../../reference/object.rst:121
msgid ""
"By default Object create without parent to assign the parent object use "
"setParent()."
msgstr ""

#: ../../reference/object.rst:127
msgid "**Object::~Object** ()"
msgstr ""

#: ../../reference/object.rst:129
msgid "Destroys the instance of Object. The destructor is virtual."
msgstr ""

#: ../../reference/object.rst:135
msgid ""
":ref:`void<api_void>`  **Object::addChild** (:ref:`Object<api_Object>` * "
"*child*)"
msgstr ""

#: ../../reference/object.rst:137
msgid "Pushes a *child* object to the internal list of *child*ren."
msgstr ""

#: ../../reference/object.rst:143
msgid ":ref:`Object<api_Object>` * **Object::clone** ()"
msgstr ""

#: ../../reference/object.rst:145
msgid "Clones this object. Returns pointer to clone object."
msgstr ""

#: ../../reference/object.rst:147
msgid ""
"When you clone the Object or subclasses of it, all child objects also will "
"be cloned. By default the parent for the new object will be nullptr. This "
"clone will not have the name so you will need to set it manualy if required."
msgstr ""

#: ../../reference/object.rst:149
msgid "Connections will be recreated with the same objects as original."
msgstr ""

#: ../../reference/object.rst:151 ../../reference/object.rst:255
#: ../../reference/object.rst:269
msgid "**See also** connect()."
msgstr ""

#: ../../reference/object.rst:157
msgid ":ref:`int<api_int>`  **Object::clonedFrom** () const"
msgstr ""

#: ../../reference/object.rst:159
msgid "Returns the UUID of cloned object."
msgstr ""

#: ../../reference/object.rst:165
msgid ""
":ref:`bool<api_bool>`  **Object::connect** (:ref:`Object<api_Object>` * "
"*sender*, :ref:`char<api_char>` * *signal*, :ref:`Object<api_Object>` * "
"*receiver*, :ref:`char<api_char>` * *method*)"
msgstr ""

#: ../../reference/object.rst:167
msgid ""
"Creates connection beteen the *signal* of the *sender* and the *method* of "
"the *receiver*. Returns true if successful; otherwise returns false."
msgstr ""

#: ../../reference/object.rst:169
msgid ""
"You must use the _SIGNAL() and _SLOT() macros when specifying *signal* and "
"the *method*."
msgstr ""

#: ../../reference/object.rst:171
msgid ""
"**Note:** The _SIGNAL() and _SLOT() must not contain any parameter values "
"only parameter types."
msgstr ""

#: ../../reference/object.rst:196
msgid ""
"**Note:** Mehod *signal* in MyObject class may not have the implementation. "
"It used only in description purposes in A_SIGNAL(signal) macros."
msgstr ""

#: ../../reference/object.rst:198
msgid "Signal can also be conected to another *signal*."
msgstr ""

#: ../../reference/object.rst:211
msgid ":ref:`Object<api_Object>` * **Object::construct** ()"
msgstr ""

#: ../../reference/object.rst:213
msgid ""
"Returns new instance of Object class. This method is used in MetaObject "
"system."
msgstr ""

#: ../../reference/object.rst:215 ../../reference/object.rst:363
#: ../../reference/object.rst:373
msgid "**See also** MetaObject."
msgstr ""

#: ../../reference/object.rst:221
msgid ":ref:`void<api_void>`  **Object::deleteLater** ()"
msgstr ""

#: ../../reference/object.rst:223
msgid ""
"Marks this object to be deleted. This object will be deleted when event loop "
"will call processEvent() method for this object."
msgstr ""

#: ../../reference/object.rst:229
msgid ""
":ref:`void<api_void>`  **Object::disconnect** (:ref:`Object<api_Object>` * "
"*sender*, :ref:`char<api_char>` * *signal*, :ref:`Object<api_Object>` * "
"*receiver*, :ref:`char<api_char>` * *method*)"
msgstr ""

#: ../../reference/object.rst:231
msgid ""
"Disconnects *signal* in object *sender* from *method* in object *receiver*."
msgstr ""

#: ../../reference/object.rst:233
msgid "A connection is removed when either of the objects are destroyed."
msgstr ""

#: ../../reference/object.rst:235
msgid "disconnect() can be used in three ways:"
msgstr ""

#: ../../reference/object.rst:237
msgid "Disconnect everything from a specific *sender*..."
msgstr ""

#: ../../reference/object.rst:243
msgid "Disconnect everything connected to a specific *signal*..."
msgstr ""

#: ../../reference/object.rst:249
msgid "Disconnect all connections from the *receiver*..."
msgstr ""

#: ../../reference/object.rst:261
msgid ""
":ref:`void<api_void>`  **Object::emitSignal** (:ref:`char<api_char>` * "
"*signal*, :ref:`Variant<api_Variant>` & *args* = Variant())"
msgstr ""

#: ../../reference/object.rst:263
msgid "Send specific *signal* with *args* for all connected receivers."
msgstr ""

#: ../../reference/object.rst:265
msgid ""
"For now it places *signal* directly to receivers queues. In case of another "
"*signal* connected as method this *signal* will be emitted immediately."
msgstr ""

#: ../../reference/object.rst:267
msgid "**Note:** Receiver should be in event loop to process incoming message."
msgstr ""

#: ../../reference/object.rst:275
msgid ""
":ref:`bool<api_bool>`  **Object::event** (:ref:`Event<api_Event>` * *event*)"
msgstr ""

#: ../../reference/object.rst:277
msgid ""
"Abstract *event* handler. Developers should reimplement this method to "
"handle *event*s manually. Returns true in case of *event* was handled "
"otherwise return false."
msgstr ""

#: ../../reference/object.rst:283
msgid ""
":ref:`Object<api_Object>` * **Object::find** (:ref:`int<api_int>` & *path*)"
msgstr ""

#: ../../reference/object.rst:285
msgid "Returns an object located along the *path*."
msgstr ""

#: ../../reference/object.rst:299
msgid "Returns nullptr if no such object."
msgstr ""

#: ../../reference/object.rst:301
msgid "**See also** findChild()."
msgstr ""

#: ../../reference/object.rst:307
msgid ""
":ref:`T<api_T>`  **Object::findChild** (:ref:`bool<api_bool>`  *recursive* = "
"true)"
msgstr ""

#: ../../reference/object.rst:313
msgid ""
":ref:`int<api_int>`  **Object::findChildren** (:ref:`boo<api_boo>`  *bool*)"
msgstr ""

#: ../../reference/object.rst:319
msgid ""
":ref:`const Object::ObjectList<api_const Object::ObjectList>` & **Object::"
"getChildren** () const"
msgstr ""

#: ../../reference/object.rst:321
msgid "Returns list of child objects for this object."
msgstr ""

#: ../../reference/object.rst:327
msgid ""
":ref:`const Object::LinkList<api_const Object::LinkList>` & **Object::"
"getReceivers** () const"
msgstr ""

#: ../../reference/object.rst:329
msgid "Returns list of links to receivers objects for this object."
msgstr ""

#: ../../reference/object.rst:335
msgid ":ref:`bool<api_bool>`  **Object::isSerializable** () const"
msgstr ""

#: ../../reference/object.rst:337
msgid "Returns true if the object can be serialized; otherwise returns false."
msgstr ""

#: ../../reference/object.rst:343
msgid ""
":ref:`void<api_void>`  **Object::loadData** (:ref:"
"`VariantList<api_VariantList>` & *data*)"
msgstr ""

#: ../../reference/object.rst:345
msgid ""
"This method allows to DESERIALIZE *data* of object like properties, "
"connections and user *data*."
msgstr ""

#: ../../reference/object.rst:351
msgid ""
":ref:`void<api_void>`  **Object::loadUserData** (:ref:"
"`VariantMap<api_VariantMap>` & *data*)"
msgstr ""

#: ../../reference/object.rst:353
msgid ""
"This method allows to DESERIALIZE *data* which not present as A_PROPERTY() "
"in object."
msgstr ""

#: ../../reference/object.rst:359
msgid ""
":ref:`const MetaObject<api_const MetaObject>` * **Object::metaClass** ()"
msgstr ""

#: ../../reference/object.rst:361
msgid ""
"Returns MetaObject and can be invoke without object of current class. This "
"method is used in MetaObject system."
msgstr ""

#: ../../reference/object.rst:369
msgid ""
":ref:`const MetaObject<api_const MetaObject>` * **Object::metaObject** () "
"const"
msgstr ""

#: ../../reference/object.rst:371
msgid ""
"Returns ponter MetaObject of this object. This method is used in MetaObject "
"system."
msgstr ""

#: ../../reference/object.rst:379
msgid ":ref:`int<api_int>`  **Object::name** () const"
msgstr ""

#: ../../reference/object.rst:381
msgid "Returns name of the object."
msgstr ""

#: ../../reference/object.rst:383
msgid "**See also** setName()."
msgstr ""

#: ../../reference/object.rst:389
msgid ":ref:`Object<api_Object>` * **Object::parent** () const"
msgstr ""

#: ../../reference/object.rst:391
msgid "Returns a pointer to the parent object."
msgstr ""

#: ../../reference/object.rst:393
msgid "**See also** setParent()."
msgstr ""

#: ../../reference/object.rst:399
msgid ""
":ref:`void<api_void>`  **Object::postEvent** (:ref:`Event<api_Event>` * "
"*event*)"
msgstr ""

#: ../../reference/object.rst:401
msgid ""
"Place *event* to internal *event* queue to be processed in *event* loop."
msgstr ""

#: ../../reference/object.rst:407
msgid ""
":ref:`Variant<api_Variant>`  **Object::property** (:ref:`char<api_char>` * "
"*name*) const"
msgstr ""

#: ../../reference/object.rst:409
msgid "Returns the value of the object's property by *name*."
msgstr ""

#: ../../reference/object.rst:411
msgid ""
"If property not found returns invalid Variant. Information of all properties "
"which provided by this object can be found in MetaObject."
msgstr ""

#: ../../reference/object.rst:413
msgid "**See also** setProperty(), metaObject(), and Variant::isValid()."
msgstr ""

#: ../../reference/object.rst:419
msgid ""
":ref:`void<api_void>`  **Object::removeChild** (:ref:`Object<api_Object>` * "
"*child*)"
msgstr ""

#: ../../reference/object.rst:421
msgid "Removes a *child* object from the internal list of *child*ren."
msgstr ""

#: ../../reference/object.rst:427
msgid ":ref:`VariantList<api_VariantList>`  **Object::saveData** () const"
msgstr ""

#: ../../reference/object.rst:429
msgid ""
"This method allows to SERIALIZE all object data like properties connections "
"and user data. Returns serialized data as VariantList."
msgstr ""

#: ../../reference/object.rst:435
msgid ":ref:`VariantMap<api_VariantMap>`  **Object::saveUserData** () const"
msgstr ""

#: ../../reference/object.rst:437
msgid ""
"This method allows to SERIALIZE data which not present as A_PROPERTY() in "
"object. Returns serialized data as VariantMap."
msgstr ""

#: ../../reference/object.rst:443
msgid ":ref:`Object<api_Object>` * **Object::sender** () const"
msgstr ""

#: ../../reference/object.rst:445
msgid "Returns object which sent signal."
msgstr ""

#: ../../reference/object.rst:447
msgid ""
"**Note:** This method returns a valid object only in receiver slot otherwise "
"it's return nullptr"
msgstr ""

#: ../../reference/object.rst:453
msgid ""
":ref:`void<api_void>`  **Object::setName** (:ref:`int<api_int>` & *name*)"
msgstr ""

#: ../../reference/object.rst:455
msgid "Set object *name* by provided *name*."
msgstr ""

#: ../../reference/object.rst:457
msgid "**See also** *name*() and metaObject()."
msgstr ""

#: ../../reference/object.rst:463
msgid ""
":ref:`void<api_void>`  **Object::setParent** (:ref:`Object<api_Object>` * "
"*parent*)"
msgstr ""

#: ../../reference/object.rst:465
msgid "Makes the object a child of *parent*."
msgstr ""

#: ../../reference/object.rst:467
msgid "**See also** *parent*()."
msgstr ""

#: ../../reference/object.rst:473
msgid ""
":ref:`void<api_void>`  **Object::setProperty** (:ref:`char<api_char>` * "
"*name*, :ref:`Variant<api_Variant>` & *value*)"
msgstr ""

#: ../../reference/object.rst:475
msgid "Sets the property with *name* to *value*."
msgstr ""

#: ../../reference/object.rst:477
msgid ""
"If property not found do nothing. Property must be defined as A_PROPERTY(). "
"Information of all properties which provided by this object can be found in "
"MetaObject."
msgstr ""

#: ../../reference/object.rst:479
msgid "**See also** property(), metaObject(), and Variant::isValid()."
msgstr ""

#: ../../reference/object.rst:485
msgid ":ref:`ObjectSystem<api_ObjectSystem>` * **Object::system** () const"
msgstr ""

#: ../../reference/object.rst:487
msgid "Returns System which handles this object."
msgstr ""

#: ../../reference/object.rst:493
msgid ":ref:`int<api_int>`  **Object::typeName** () const"
msgstr ""

#: ../../reference/object.rst:495
msgid "Returns class name the object."
msgstr ""

#: ../../reference/object.rst:501
msgid ":ref:`int<api_int>`  **Object::uuid** () const"
msgstr ""

#: ../../reference/object.rst:503
msgid "Returns unique ID of the object."
msgstr ""

#: ../../reference/object.rst:509
msgid ""
":ref:`bool<api_bool>`  **Object::operator!=** (:ref:`Object<api_Object>` & "
"**) const"
msgstr ""

#: ../../reference/object.rst:515
msgid ""
":ref:`bool<api_bool>`  **Object::operator==** (:ref:`Object<api_Object>` & "
"**) const"
msgstr ""

#: ../../reference/objectsystem.rst:3
msgid "ObjectSystem Class"
msgstr ""

#: ../../reference/objectsystem.rst:11
msgid "The ObjectSystem responds for object management."
msgstr ""

#: ../../reference/objectsystem.rst:13
msgid ""
"ObjectSystem helps to developers create new instances and serialize/"
"deserialize them on disc or in memory."
msgstr ""

#: ../../reference/objectsystem.rst:22
msgid ":ref:`ObjectSystem<api_ObjectSystem_ObjectSystem>` ()"
msgstr ""

#: ../../reference/objectsystem.rst:24
msgid ":ref:`~ObjectSystem<api_ObjectSystem_~ObjectSystem>` ()"
msgstr ""

#: ../../reference/objectsystem.rst:26
msgid ":ref:`ObjectSystem::GroupMap<api_ObjectSystem::GroupMap>`"
msgstr ""

#: ../../reference/objectsystem.rst:26
msgid ":ref:`factories<api_ObjectSystem_factories>` () const"
msgstr ""

#: ../../reference/objectsystem.rst:28
msgid ""
":ref:`factoryAdd<api_ObjectSystem_factoryAdd>` (const int & group, const "
"MetaObject * meta)"
msgstr ""

#: ../../reference/objectsystem.rst:30
msgid ""
":ref:`factoryRemove<api_ObjectSystem_factoryRemove>` (const int & group)"
msgstr ""

#: ../../reference/objectsystem.rst:32
msgid ":ref:`processEvents<api_ObjectSystem_processEvents>` ()"
msgstr ""

#: ../../reference/objectsystem.rst:40
msgid ":ref:`generateUUID<api_ObjectSystem_generateUUID>` ()"
msgstr ""

#: ../../reference/objectsystem.rst:42
msgid ":ref:`ObjectSystem::FactoryPair<api_ObjectSystem::FactoryPair>` *"
msgstr ""

#: ../../reference/objectsystem.rst:42
msgid ":ref:`metaFactory<api_ObjectSystem_metaFactory>` (const int & uri)"
msgstr ""

#: ../../reference/objectsystem.rst:44
msgid ":ref:`T<api_T>` *"
msgstr ""

#: ../../reference/objectsystem.rst:44
msgid ""
":ref:`objectCreate<api_ObjectSystem_objectCreate>` (const int & name = ..., "
"Object * parent = nullptr)"
msgstr ""

#: ../../reference/objectsystem.rst:46
msgid ""
":ref:`objectCreate<api_ObjectSystem_objectCreate>` (const int & uri, const "
"int & name = ..., Object * parent = nullptr)"
msgstr ""

#: ../../reference/objectsystem.rst:48
msgid ""
":ref:`replaceUUID<api_ObjectSystem_replaceUUID>` (Object * object, int  uuid)"
msgstr ""

#: ../../reference/objectsystem.rst:50
msgid ""
":ref:`toObject<api_ObjectSystem_toObject>` (const Variant & variant, Object "
"* root = nullptr)"
msgstr ""

#: ../../reference/objectsystem.rst:52
msgid ":ref:`toVariant<api_ObjectSystem_toVariant>` (const Object * object)"
msgstr ""

#: ../../reference/objectsystem.rst:61
msgid "**ObjectSystem::ObjectSystem** ()"
msgstr ""

#: ../../reference/objectsystem.rst:63
msgid "Constructs ObjectSystem."
msgstr ""

#: ../../reference/objectsystem.rst:69
msgid "**ObjectSystem::~ObjectSystem** ()"
msgstr ""

#: ../../reference/objectsystem.rst:71
msgid ""
"Destructs ObjectSystem, related objects and registered object factories."
msgstr ""

#: ../../reference/objectsystem.rst:77
msgid ""
":ref:`ObjectSystem::GroupMap<api_ObjectSystem::GroupMap>`  **ObjectSystem::"
"factories** () const"
msgstr ""

#: ../../reference/objectsystem.rst:79
msgid "Returns all registered classes."
msgstr ""

#: ../../reference/objectsystem.rst:85
msgid ""
":ref:`void<api_void>`  **ObjectSystem::factoryAdd** (:ref:`int<api_int>` & "
"*group*, :ref:`MetaObject<api_MetaObject>` * *meta*)"
msgstr ""

#: ../../reference/objectsystem.rst:91
msgid ""
":ref:`void<api_void>`  **ObjectSystem::factoryRemove** (:ref:`int<api_int>` "
"& *group*)"
msgstr ""

#: ../../reference/objectsystem.rst:97
msgid ":ref:`int<api_int>`  **ObjectSystem::generateUUID** ()"
msgstr ""

#: ../../reference/objectsystem.rst:99
msgid "Returns the new unique ID based on random number generator."
msgstr ""

#: ../../reference/objectsystem.rst:105
msgid ""
":ref:`ObjectSystem::FactoryPair<api_ObjectSystem::FactoryPair>` * "
"**ObjectSystem::metaFactory** (:ref:`int<api_int>` & *uri*)"
msgstr ""

#: ../../reference/objectsystem.rst:107
msgid "Returns MetaObject for registered factory by provided *uri*."
msgstr ""

#: ../../reference/objectsystem.rst:113
msgid ""
":ref:`T<api_T>` * **ObjectSystem::objectCreate** (:ref:`int<api_int>` & "
"*name* = ..., :ref:`Object<api_Object>` * *parent* = nullptr)"
msgstr ""

#: ../../reference/objectsystem.rst:119
msgid ""
":ref:`Object<api_Object>` * **ObjectSystem::objectCreate** (:ref:"
"`int<api_int>` & *uri*, :ref:`int<api_int>` & *name* = ..., :ref:"
"`Object<api_Object>` * *parent* = nullptr)"
msgstr ""

#: ../../reference/objectsystem.rst:121
msgid ""
"Returns new instance of type represented in *uri* and *name* as child of "
"*parent* object."
msgstr ""

#: ../../reference/objectsystem.rst:123
msgid ""
"**Note:** Class represented as *uri* should be registered first via "
"factoryAdd()"
msgstr ""

#: ../../reference/objectsystem.rst:125
msgid "**See also** factoryAdd() and factoryRemove()."
msgstr ""

#: ../../reference/objectsystem.rst:131
msgid ":ref:`void<api_void>`  **ObjectSystem::processEvents** ()"
msgstr ""

#: ../../reference/objectsystem.rst:133
msgid "Updates all related objects."
msgstr ""

#: ../../reference/objectsystem.rst:139
msgid ""
":ref:`void<api_void>`  **ObjectSystem::replaceUUID** (:ref:"
"`Object<api_Object>` * *object*, :ref:`int<api_int>`  *uuid*)"
msgstr ""

#: ../../reference/objectsystem.rst:141
msgid "Replaces current *uuid* of the *object* with the new one."
msgstr ""

#: ../../reference/objectsystem.rst:147
msgid ""
":ref:`Object<api_Object>` * **ObjectSystem::toObject** (:ref:"
"`Variant<api_Variant>` & *variant*, :ref:`Object<api_Object>` * *root* = "
"nullptr)"
msgstr ""

#: ../../reference/objectsystem.rst:149
msgid ""
"Returns object deserialized from *variant* based representation. The Variant "
"representation can be loaded from BSON or JSON formats or retrieved from "
"memory. Deserialization will try to restore objects hierarchy with *root* as "
"parent, its properties and connections."
msgstr ""

#: ../../reference/objectsystem.rst:155
msgid ""
":ref:`Variant<api_Variant>`  **ObjectSystem::toVariant** (:ref:"
"`Object<api_Object>` * *object*)"
msgstr ""

#: ../../reference/objectsystem.rst:157
msgid ""
"Returns serialized to Variant version of *object* inherited from Object "
"class. This method saves all *object* property values, active connections "
"and necessary parameters."
msgstr ""

#: ../../reference/objectsystem.rst:159
msgid "**Note:** All childs of *object* will be also serialized."
msgstr ""

#: ../../reference/objectsystem.rst:161
msgid ""
"The returned value can be saved on disk in BSON or JSON form or keep it in "
"memory. Developers is able to save own data using Object::saveUserData() "
"mechanism."
msgstr ""

#: ../../reference/threadpool.rst:3
msgid "ThreadPool Class"
msgstr ""

#: ../../reference/threadpool.rst:11
msgid "The ThreadPool class manages a collection of threads."
msgstr ""

#: ../../reference/threadpool.rst:20
msgid ":ref:`ThreadPool<api_ThreadPool_ThreadPool>` ()"
msgstr ""

#: ../../reference/threadpool.rst:22
msgid ":ref:`~ThreadPool<api_ThreadPool_~ThreadPool>` ()"
msgstr ""

#: ../../reference/threadpool.rst:24
msgid ":ref:`maxThreads<api_ThreadPool_maxThreads>` () const"
msgstr ""

#: ../../reference/threadpool.rst:26
msgid ":ref:`setMaxThreads<api_ThreadPool_setMaxThreads>` (int  value)"
msgstr ""

#: ../../reference/threadpool.rst:28
msgid ":ref:`start<api_ThreadPool_start>` (Object & object)"
msgstr ""

#: ../../reference/threadpool.rst:30
msgid ":ref:`waitForDone<api_ThreadPool_waitForDone>` (int  msecs = -1)"
msgstr ""

#: ../../reference/threadpool.rst:38
msgid ":ref:`optimalThreadCount<api_ThreadPool_optimalThreadCount>` ()"
msgstr ""

#: ../../reference/threadpool.rst:47
msgid "**ThreadPool::ThreadPool** ()"
msgstr ""

#: ../../reference/threadpool.rst:49
msgid "Default constructs an instance of ThreadPool."
msgstr ""

#: ../../reference/threadpool.rst:55
msgid "**ThreadPool::~ThreadPool** ()"
msgstr ""

#: ../../reference/threadpool.rst:57
msgid "Destroys the instance of ThreadPool. The destructor is virtual."
msgstr ""

#: ../../reference/threadpool.rst:63
msgid ":ref:`int<api_int>`  **ThreadPool::maxThreads** () const"
msgstr ""

#: ../../reference/threadpool.rst:65
msgid "**See also** setMaxThreads()."
msgstr ""

#: ../../reference/threadpool.rst:71
msgid ":ref:`int<api_int>`  **ThreadPool::optimalThreadCount** ()"
msgstr ""

#: ../../reference/threadpool.rst:77
msgid ""
":ref:`void<api_void>`  **ThreadPool::setMaxThreads** (:ref:`int<api_int>`  "
"*value*)"
msgstr ""

#: ../../reference/threadpool.rst:79
msgid "**See also** maxThreads()."
msgstr ""

#: ../../reference/threadpool.rst:85
msgid ""
":ref:`void<api_void>`  **ThreadPool::start** (:ref:`Object<api_Object>` & "
"*object*)"
msgstr ""

#: ../../reference/threadpool.rst:91
msgid ""
":ref:`bool<api_bool>`  **ThreadPool::waitForDone** (:ref:`int<api_int>`  "
"*msecs* = -1)"
msgstr ""

#: ../../reference/uri.rst:3
msgid "Uri Class"
msgstr ""

#: ../../reference/uri.rst:11
msgid "Uri class provides an interface for working with URI's."
msgstr ""

#: ../../reference/uri.rst:20
msgid ":ref:`Uri<api_Uri_Uri>` (const int & uri)"
msgstr ""

#: ../../reference/uri.rst:22
msgid ":ref:`~Uri<api_Uri_~Uri>` ()"
msgstr ""

#: ../../reference/uri.rst:24
msgid ":ref:`baseName<api_Uri_baseName>` () const"
msgstr ""

#: ../../reference/uri.rst:26
msgid ":ref:`dir<api_Uri_dir>` () const"
msgstr ""

#: ../../reference/uri.rst:28
msgid ":ref:`fragment<api_Uri_fragment>` () const"
msgstr ""

#: ../../reference/uri.rst:30
msgid ":ref:`host<api_Uri_host>` () const"
msgstr ""

#: ../../reference/uri.rst:32
msgid ":ref:`name<api_Uri_name>` () const"
msgstr ""

#: ../../reference/uri.rst:34
msgid ":ref:`path<api_Uri_path>` () const"
msgstr ""

#: ../../reference/uri.rst:36
msgid ":ref:`query<api_Uri_query>` () const"
msgstr ""

#: ../../reference/uri.rst:38
msgid ":ref:`scheme<api_Uri_scheme>` () const"
msgstr ""

#: ../../reference/uri.rst:40
msgid ":ref:`suffix<api_Uri_suffix>` () const"
msgstr ""

#: ../../reference/uri.rst:55
msgid "**Uri::Uri** (:ref:`int<api_int>` & *uri*)"
msgstr ""

#: ../../reference/uri.rst:57
msgid "Default constructs an instance of Uri."
msgstr ""

#: ../../reference/uri.rst:63
msgid "**Uri::~Uri** ()"
msgstr ""

#: ../../reference/uri.rst:65
msgid "Destroys the instance of Uri."
msgstr ""

#: ../../reference/uri.rst:71
msgid ":ref:`int<api_int>`  **Uri::baseName** () const"
msgstr ""

#: ../../reference/uri.rst:77
msgid ":ref:`int<api_int>`  **Uri::dir** () const"
msgstr ""

#: ../../reference/uri.rst:83
msgid ":ref:`int<api_int>`  **Uri::fragment** () const"
msgstr ""

#: ../../reference/uri.rst:89
msgid ":ref:`int<api_int>`  **Uri::host** () const"
msgstr ""

#: ../../reference/uri.rst:95
msgid ":ref:`int<api_int>`  **Uri::name** () const"
msgstr ""

#: ../../reference/uri.rst:101
msgid ":ref:`int<api_int>`  **Uri::path** () const"
msgstr ""

#: ../../reference/uri.rst:107
msgid ":ref:`int<api_int>`  **Uri::query** () const"
msgstr ""

#: ../../reference/uri.rst:113
msgid ":ref:`int<api_int>`  **Uri::scheme** () const"
msgstr ""

#: ../../reference/uri.rst:119
msgid ":ref:`int<api_int>`  **Uri::suffix** () const"
msgstr ""

#: ../../reference/variant.rst:3
msgid "Variant Class"
msgstr ""

#: ../../reference/variant.rst:11
msgid ""
"Variant represents union value in Next library and work with most common "
"data types."
msgstr ""

#: ../../reference/variant.rst:13
msgid ""
"Variant can contain values with common data types and return information "
"about this types. Also Variant can convert cantained values to another data "
"types using MetaType::convert function. Example:"
msgstr ""

#: ../../reference/variant.rst:15
msgid ""
"Object based classes can be automatically registered in meta type system to "
"be using as Variant objects. Example:"
msgstr ""

#: ../../reference/variant.rst:17
msgid "And then:"
msgstr ""

#: ../../reference/variant.rst:26
msgid ":ref:`Variant<api_Variant_Variant>` ()"
msgstr ""

#: ../../reference/variant.rst:28
msgid ":ref:`Variant<api_Variant_Variant>` (MetaType::Type  type)"
msgstr ""

#: ../../reference/variant.rst:30
msgid ":ref:`Variant<api_Variant_Variant>` (bool  value)"
msgstr ""

#: ../../reference/variant.rst:32
msgid ":ref:`Variant<api_Variant_Variant>` (int  value)"
msgstr ""

#: ../../reference/variant.rst:34
msgid ":ref:`Variant<api_Variant_Variant>` (float  value)"
msgstr ""

#: ../../reference/variant.rst:36
msgid ":ref:`Variant<api_Variant_Variant>` (const char * value)"
msgstr ""

#: ../../reference/variant.rst:38
msgid ":ref:`Variant<api_Variant_Variant>` (const int & value)"
msgstr ""

#: ../../reference/variant.rst:40
msgid ":ref:`Variant<api_Variant_Variant>` (const VariantMap & value)"
msgstr ""

#: ../../reference/variant.rst:42
msgid ":ref:`Variant<api_Variant_Variant>` (const VariantList & value)"
msgstr ""

#: ../../reference/variant.rst:44
msgid ":ref:`Variant<api_Variant_Variant>` (const ByteArray & value)"
msgstr ""

#: ../../reference/variant.rst:46
msgid ":ref:`Variant<api_Variant_Variant>` (const Vector2 & value)"
msgstr ""

#: ../../reference/variant.rst:48
msgid ":ref:`Variant<api_Variant_Variant>` (const Vector3 & value)"
msgstr ""

#: ../../reference/variant.rst:50
msgid ":ref:`Variant<api_Variant_Variant>` (const Vector4 & value)"
msgstr ""

#: ../../reference/variant.rst:52
msgid ":ref:`Variant<api_Variant_Variant>` (const Quaternion & value)"
msgstr ""

#: ../../reference/variant.rst:54
msgid ":ref:`Variant<api_Variant_Variant>` (const Matrix3 & value)"
msgstr ""

#: ../../reference/variant.rst:56
msgid ":ref:`Variant<api_Variant_Variant>` (const Matrix4 & value)"
msgstr ""

#: ../../reference/variant.rst:58
msgid ":ref:`Variant<api_Variant_Variant>` (int  type, void * copy)"
msgstr ""

#: ../../reference/variant.rst:60
msgid ":ref:`Variant<api_Variant_Variant>` (const Variant & value)"
msgstr ""

#: ../../reference/variant.rst:62
msgid ":ref:`~Variant<api_Variant_~Variant>` ()"
msgstr ""

#: ../../reference/variant.rst:64
msgid ":ref:`canConvert<api_Variant_canConvert>` (int  type) const"
msgstr ""

#: ../../reference/variant.rst:66
msgid ":ref:`canConvert<api_Variant_canConvert>` () const"
msgstr ""

#: ../../reference/variant.rst:68
msgid ":ref:`clear<api_Variant_clear>` ()"
msgstr ""

#: ../../reference/variant.rst:70
msgid ":ref:`data<api_Variant_data>` () const"
msgstr ""

#: ../../reference/variant.rst:72
msgid ":ref:`isValid<api_Variant_isValid>` () const"
msgstr ""

#: ../../reference/variant.rst:74
msgid ":ref:`toBool<api_Variant_toBool>` () const"
msgstr ""

#: ../../reference/variant.rst:76
msgid ":ref:`const ByteArray<api_const ByteArray>`"
msgstr ""

#: ../../reference/variant.rst:76
msgid ":ref:`toByteArray<api_Variant_toByteArray>` () const"
msgstr ""

#: ../../reference/variant.rst:78 ../../reference/baselight.rst:26
#: ../../reference/baselight.rst:28 ../../reference/camera.rst:28
#: ../../reference/camera.rst:30 ../../reference/camera.rst:32
#: ../../reference/camera.rst:36 ../../reference/camera.rst:38
#: ../../reference/camera.rst:46 ../../reference/pointlight.rst:26
#: ../../reference/spotlight.rst:26 ../../reference/spotlight.rst:28
#: ../../reference/timer.rst:28 ../../reference/timer.rst:34
#: ../../reference/timer.rst:38 ../../reference/font.rst:32
#: ../../reference/font.rst:38
msgid ":ref:`float<api_float>`"
msgstr ""

#: ../../reference/variant.rst:78
msgid ":ref:`toFloat<api_Variant_toFloat>` () const"
msgstr ""

#: ../../reference/variant.rst:80
msgid ":ref:`toInt<api_Variant_toInt>` () const"
msgstr ""

#: ../../reference/variant.rst:82
msgid ":ref:`const VariantList<api_const VariantList>`"
msgstr ""

#: ../../reference/variant.rst:82
msgid ":ref:`toList<api_Variant_toList>` () const"
msgstr ""

#: ../../reference/variant.rst:84
msgid ":ref:`const VariantMap<api_const VariantMap>`"
msgstr ""

#: ../../reference/variant.rst:84
msgid ":ref:`toMap<api_Variant_toMap>` () const"
msgstr ""

#: ../../reference/variant.rst:86
msgid ":ref:`const Matrix3<api_const Matrix3>`"
msgstr ""

#: ../../reference/variant.rst:86
msgid ":ref:`toMatrix3<api_Variant_toMatrix3>` () const"
msgstr ""

#: ../../reference/variant.rst:88
msgid ":ref:`const Matrix4<api_const Matrix4>`"
msgstr ""

#: ../../reference/variant.rst:88
msgid ":ref:`toMatrix4<api_Variant_toMatrix4>` () const"
msgstr ""

#: ../../reference/variant.rst:90
msgid ":ref:`const Quaternion<api_const Quaternion>`"
msgstr ""

#: ../../reference/variant.rst:90
msgid ":ref:`toQuaternion<api_Variant_toQuaternion>` () const"
msgstr ""

#: ../../reference/variant.rst:92
msgid ":ref:`const int<api_const int>`"
msgstr ""

#: ../../reference/variant.rst:92
msgid ":ref:`toString<api_Variant_toString>` () const"
msgstr ""

#: ../../reference/variant.rst:94
msgid ":ref:`const Vector2<api_const Vector2>`"
msgstr ""

#: ../../reference/variant.rst:94
msgid ":ref:`toVector2<api_Variant_toVector2>` () const"
msgstr ""

#: ../../reference/variant.rst:96
msgid ":ref:`const Vector3<api_const Vector3>`"
msgstr ""

#: ../../reference/variant.rst:96
msgid ":ref:`toVector3<api_Variant_toVector3>` () const"
msgstr ""

#: ../../reference/variant.rst:98
msgid ":ref:`const Vector4<api_const Vector4>`"
msgstr ""

#: ../../reference/variant.rst:98
msgid ":ref:`toVector4<api_Variant_toVector4>` () const"
msgstr ""

#: ../../reference/variant.rst:100
msgid ":ref:`type<api_Variant_type>` () const"
msgstr ""

#: ../../reference/variant.rst:102
msgid ":ref:`userType<api_Variant_userType>` () const"
msgstr ""

#: ../../reference/variant.rst:104
msgid ":ref:`value<api_Variant_value>` () const"
msgstr ""

#: ../../reference/variant.rst:106
msgid ":ref:`operator!=<api_Variant_operator!=>` (const Variant & right) const"
msgstr ""

#: ../../reference/variant.rst:108
msgid ":ref:`Variant<api_Variant>` &"
msgstr ""

#: ../../reference/variant.rst:108
msgid ":ref:`operator=<api_Variant_operator=>` (const Variant & value)"
msgstr ""

#: ../../reference/variant.rst:110
msgid ":ref:`operator==<api_Variant_operator==>` (const Variant & right) const"
msgstr ""

#: ../../reference/variant.rst:118
msgid ":ref:`fromValue<api_Variant_fromValue>` (const T & value)"
msgstr ""

#: ../../reference/variant.rst:127
msgid "**Variant::Variant** ()"
msgstr ""

#: ../../reference/variant.rst:129
msgid "Constructs an invalid variant."
msgstr ""

#: ../../reference/variant.rst:135
msgid ""
"**Variant::Variant** (:ref:`MetaType::Type<api_MetaType::Type>`  *type*)"
msgstr ""

#: ../../reference/variant.rst:137
msgid "Constructs an uninitialized variant of *type*."
msgstr ""

#: ../../reference/variant.rst:143
msgid "**Variant::Variant** (:ref:`bool<api_bool>`  *value*)"
msgstr ""

#: ../../reference/variant.rst:145
msgid "Constructs a new variant with a boolean *value*."
msgstr ""

#: ../../reference/variant.rst:151
msgid "**Variant::Variant** (:ref:`int<api_int>`  *value*)"
msgstr ""

#: ../../reference/variant.rst:153
msgid "Constructs a new variant with an integer *value*."
msgstr ""

#: ../../reference/variant.rst:159
msgid "**Variant::Variant** (:ref:`float<api_float>`  *value*)"
msgstr ""

#: ../../reference/variant.rst:161
msgid "Constructs a new variant with a floating point *value*."
msgstr ""

#: ../../reference/variant.rst:167
msgid "**Variant::Variant** (:ref:`char<api_char>` * *value*)"
msgstr ""

#: ../../reference/variant.rst:169 ../../reference/variant.rst:177
msgid "Constructs a new variant with a string *value*."
msgstr ""

#: ../../reference/variant.rst:175
msgid "**Variant::Variant** (:ref:`int<api_int>` & *value*)"
msgstr ""

#: ../../reference/variant.rst:183
msgid "**Variant::Variant** (:ref:`VariantMap<api_VariantMap>` & *value*)"
msgstr ""

#: ../../reference/variant.rst:185
msgid "Constructs a new variant with a map of variants *value*."
msgstr ""

#: ../../reference/variant.rst:191
msgid "**Variant::Variant** (:ref:`VariantList<api_VariantList>` & *value*)"
msgstr ""

#: ../../reference/variant.rst:193
msgid "Constructs a new variant with a list of variants *value*."
msgstr ""

#: ../../reference/variant.rst:199
msgid "**Variant::Variant** (:ref:`ByteArray<api_ByteArray>` & *value*)"
msgstr ""

#: ../../reference/variant.rst:201
msgid "Constructs a new variant with a ByteArray *value*."
msgstr ""

#: ../../reference/variant.rst:207
msgid "**Variant::Variant** (:ref:`Vector2<api_Vector2>` & *value*)"
msgstr ""

#: ../../reference/variant.rst:209
msgid "Constructs a new variant with a Vector2 *value*."
msgstr ""

#: ../../reference/variant.rst:215
msgid "**Variant::Variant** (:ref:`Vector3<api_Vector3>` & *value*)"
msgstr ""

#: ../../reference/variant.rst:217
msgid "Constructs a new variant with a Vector3 *value*."
msgstr ""

#: ../../reference/variant.rst:223
msgid "**Variant::Variant** (:ref:`Vector4<api_Vector4>` & *value*)"
msgstr ""

#: ../../reference/variant.rst:225
msgid "Constructs a new variant with a Vector4 *value*."
msgstr ""

#: ../../reference/variant.rst:231
msgid "**Variant::Variant** (:ref:`Quaternion<api_Quaternion>` & *value*)"
msgstr ""

#: ../../reference/variant.rst:233
msgid "Constructs a new variant with a Quaternion *value*."
msgstr ""

#: ../../reference/variant.rst:239
msgid "**Variant::Variant** (:ref:`Matrix3<api_Matrix3>` & *value*)"
msgstr ""

#: ../../reference/variant.rst:241
msgid "Constructs a new variant with a Matrix3 *value*."
msgstr ""

#: ../../reference/variant.rst:247
msgid "**Variant::Variant** (:ref:`Matrix4<api_Matrix4>` & *value*)"
msgstr ""

#: ../../reference/variant.rst:249
msgid "Constructs a new variant with a Matrix4 *value*."
msgstr ""

#: ../../reference/variant.rst:255
msgid ""
"**Variant::Variant** (:ref:`int<api_int>`  *type*, :ref:`void<api_void>` * "
"*copy*)"
msgstr ""

#: ../../reference/variant.rst:257
msgid "Constructs a new variant of *type* and initialized with *copy* value."
msgstr ""

#: ../../reference/variant.rst:263
msgid "**Variant::Variant** (:ref:`Variant<api_Variant>` & *value*)"
msgstr ""

#: ../../reference/variant.rst:265
msgid "Constructs a copy of variant *value*."
msgstr ""

#: ../../reference/variant.rst:271
msgid "**Variant::~Variant** ()"
msgstr ""

#: ../../reference/variant.rst:273
msgid "Destroys the instance of Variant."
msgstr ""

#: ../../reference/variant.rst:279
msgid ""
":ref:`bool<api_bool>`  **Variant::canConvert** (:ref:`int<api_int>`  *type*) "
"const"
msgstr ""

#: ../../reference/variant.rst:281 ../../reference/variant.rst:322
msgid "Returns"
msgstr ""

#: ../../reference/variant.rst:283
msgid ""
"ConstantDescription trueif variant converted to a *type*; otherwise return "
"false."
msgstr ""

#: ../../reference/variant.rst:292
msgid ":ref:`bool<api_bool>`  **Variant::canConvert** () const"
msgstr ""

#: ../../reference/variant.rst:298
msgid ":ref:`void<api_void>`  **Variant::clear** ()"
msgstr ""

#: ../../reference/variant.rst:300
msgid "Frees used resources and make this variant an invalid."
msgstr ""

#: ../../reference/variant.rst:306
msgid ":ref:`void<api_void>` * **Variant::data** () const"
msgstr ""

#: ../../reference/variant.rst:308
msgid "Returns pure pointer to value data."
msgstr ""

#: ../../reference/variant.rst:314
msgid ""
":ref:`Variant<api_Variant>`  **Variant::fromValue** (:ref:`T<api_T>` & "
"*value*)"
msgstr ""

#: ../../reference/variant.rst:320
msgid ":ref:`bool<api_bool>`  **Variant::isValid** () const"
msgstr ""

#: ../../reference/variant.rst:324
msgid ""
"ConstantDescription trueif variant value is valid; otherwise return false."
msgstr ""

#: ../../reference/variant.rst:333
msgid ":ref:`bool<api_bool>`  **Variant::toBool** () const"
msgstr ""

#: ../../reference/variant.rst:335
msgid ""
"Returns variant as a bool value if variant has a type MetaType::BOOLEAN. "
"Otherwise it tries to convert existing value to a bool."
msgstr ""

#: ../../reference/variant.rst:337 ../../reference/variant.rst:347
#: ../../reference/variant.rst:357 ../../reference/variant.rst:367
#: ../../reference/variant.rst:377 ../../reference/variant.rst:387
#: ../../reference/variant.rst:397 ../../reference/variant.rst:407
#: ../../reference/variant.rst:417 ../../reference/variant.rst:427
#: ../../reference/variant.rst:437 ../../reference/variant.rst:447
#: ../../reference/variant.rst:457
msgid "**See also** value, canConvert, and MetaType::convert."
msgstr ""

#: ../../reference/variant.rst:343
msgid ""
":ref:`const ByteArray<api_const ByteArray>`  **Variant::toByteArray** () "
"const"
msgstr ""

#: ../../reference/variant.rst:345
msgid ""
"Returns variant as a ByteArray value if variant has a type MetaType::"
"BYTEARRAY. Otherwise it tries to convert existing value to a ByteArray."
msgstr ""

#: ../../reference/variant.rst:353
msgid ":ref:`float<api_float>`  **Variant::toFloat** () const"
msgstr ""

#: ../../reference/variant.rst:355
msgid ""
"Returns variant as a float value if variant has a type MetaType::FLOAT. "
"Otherwise it tries to convert existing value to a float."
msgstr ""

#: ../../reference/variant.rst:363
msgid ":ref:`int<api_int>`  **Variant::toInt** () const"
msgstr ""

#: ../../reference/variant.rst:365
msgid ""
"Returns variant as an integer value if variant has a type MetaType::INTEGER. "
"Otherwise it tries to convert existing value to an integer."
msgstr ""

#: ../../reference/variant.rst:373
msgid ""
":ref:`const VariantList<api_const VariantList>`  **Variant::toList** () const"
msgstr ""

#: ../../reference/variant.rst:375
msgid ""
"Returns variant as a variant list value if variant has a type MetaType::"
"VARIANTLIST. Otherwise it tries to convert existing value to a variant list."
msgstr ""

#: ../../reference/variant.rst:383
msgid ""
":ref:`const VariantMap<api_const VariantMap>`  **Variant::toMap** () const"
msgstr ""

#: ../../reference/variant.rst:385
msgid ""
"Returns variant as a variant map value if variant has a type MetaType::"
"VARIANTMAP. Otherwise it tries to convert existing value to a variant map."
msgstr ""

#: ../../reference/variant.rst:393
msgid ""
":ref:`const Matrix3<api_const Matrix3>`  **Variant::toMatrix3** () const"
msgstr ""

#: ../../reference/variant.rst:395
msgid ""
"Returns variant as a Matrix3 value if variant has a type MetaType::MATRIX3. "
"Otherwise it tries to convert existing value to a Matrix3."
msgstr ""

#: ../../reference/variant.rst:403
msgid ""
":ref:`const Matrix4<api_const Matrix4>`  **Variant::toMatrix4** () const"
msgstr ""

#: ../../reference/variant.rst:405
msgid ""
"Returns variant as a Matrix4 value if variant has a type MetaType::MATRIX4. "
"Otherwise it tries to convert existing value to a Matrix4."
msgstr ""

#: ../../reference/variant.rst:413
msgid ""
":ref:`const Quaternion<api_const Quaternion>`  **Variant::toQuaternion** () "
"const"
msgstr ""

#: ../../reference/variant.rst:415
msgid ""
"Returns variant as a Quaternion value if variant has a type MetaType::"
"QUATERNION. Otherwise it tries to convert existing value to a Quaternion."
msgstr ""

#: ../../reference/variant.rst:423
msgid ":ref:`const int<api_const int>`  **Variant::toString** () const"
msgstr ""

#: ../../reference/variant.rst:425
msgid ""
"Returns variant as a string value if variant has a type MetaType::STRING. "
"Otherwise it tries to convert existing value to a string."
msgstr ""

#: ../../reference/variant.rst:433
msgid ""
":ref:`const Vector2<api_const Vector2>`  **Variant::toVector2** () const"
msgstr ""

#: ../../reference/variant.rst:435
msgid ""
"Returns variant as a Vector2 value if variant has a type MetaType::VECTOR2. "
"Otherwise it tries to convert existing value to a Vector2."
msgstr ""

#: ../../reference/variant.rst:443
msgid ""
":ref:`const Vector3<api_const Vector3>`  **Variant::toVector3** () const"
msgstr ""

#: ../../reference/variant.rst:445
msgid ""
"Returns variant as a Vector3 value if variant has a type MetaType::VECTOR3. "
"Otherwise it tries to convert existing value to a Vector3."
msgstr ""

#: ../../reference/variant.rst:453
msgid ""
":ref:`const Vector4<api_const Vector4>`  **Variant::toVector4** () const"
msgstr ""

#: ../../reference/variant.rst:455
msgid ""
"Returns variant as a Vector4 value if variant has a type MetaType::VECTOR4. "
"Otherwise it tries to convert existing value to a Vector4."
msgstr ""

#: ../../reference/variant.rst:463
msgid ":ref:`int<api_int>`  **Variant::type** () const"
msgstr ""

#: ../../reference/variant.rst:465
msgid "Returns type of variant value."
msgstr ""

#: ../../reference/variant.rst:467
msgid ""
"**Note:** If type of variant is user defined then fonction return MetaType::"
"USERTYPE. To get the real type id use userType."
msgstr ""

#: ../../reference/variant.rst:469
msgid "**See also** userType."
msgstr ""

#: ../../reference/variant.rst:475
msgid ":ref:`int<api_int>`  **Variant::userType** () const"
msgstr ""

#: ../../reference/variant.rst:477
msgid "Returns user type of variant value."
msgstr ""

#: ../../reference/variant.rst:479
msgid "**See also** type."
msgstr ""

#: ../../reference/variant.rst:485
msgid ":ref:`T<api_T>`  **Variant::value** () const"
msgstr ""

#: ../../reference/variant.rst:491
msgid ""
":ref:`bool<api_bool>`  **Variant::operator!=** (:ref:`Variant<api_Variant>` "
"& *right*) const"
msgstr ""

#: ../../reference/variant.rst:493
msgid ""
"Compares a this variant with variant *right* value. Returns true if variants "
"are NOT equal; otherwise returns false."
msgstr ""

#: ../../reference/variant.rst:499
msgid ""
":ref:`Variant<api_Variant>` & **Variant::operator=** (:ref:"
"`Variant<api_Variant>` & *value*)"
msgstr ""

#: ../../reference/variant.rst:501
msgid "Assigns the *value* of the variant to this variant."
msgstr ""

#: ../../reference/variant.rst:507
msgid ""
":ref:`bool<api_bool>`  **Variant::operator==** (:ref:`Variant<api_Variant>` "
"& *right*) const"
msgstr ""

#: ../../reference/variant.rst:509
msgid ""
"Compares a this variant with variant *right* value. Returns true if variants "
"are equal; otherwise returns false."
msgstr ""

#: ../../reference/engine-module.rst:4
msgid "Engine Module"
msgstr ""

#: ../../reference/actor.rst:3
msgid "Actor Class"
msgstr ""

#: ../../reference/actor.rst:11
msgid "Base class for all entities in Thunder Engine."
msgstr ""

#: ../../reference/actor.rst:13
msgid ""
"The Actor probably is the most important class in the Thunder Engine. It "
"represents all objects on the scene like 3D meshes, light sources, effects "
"and many more. You should think about Actor as a key chain for the various "
"Components. You can add and remove any components you like at any time "
"except the Transform component. The Transform component must persist "
"constantly and you shoudn't remove it."
msgstr ""

#: ../../reference/actor.rst:22
msgid ":ref:`Actor<api_Actor_Actor>` ()"
msgstr ""

#: ../../reference/actor.rst:24
msgid ":ref:`~Actor<api_Actor_~Actor>` ()"
msgstr ""

#: ../../reference/actor.rst:26 ../../reference/actor.rst:28
#: ../../reference/actor.rst:30
msgid ":ref:`Component<api_Component>` *"
msgstr ""

#: ../../reference/actor.rst:26
msgid ":ref:`addComponent<api_Actor_addComponent>` (const int  type)"
msgstr ""

#: ../../reference/actor.rst:28
msgid ":ref:`component<api_Actor_component>` (const int  type)"
msgstr ""

#: ../../reference/actor.rst:30
msgid ":ref:`componentInChild<api_Actor_componentInChild>` (const int  type)"
msgstr ""

#: ../../reference/actor.rst:32
msgid ":ref:`isEnabled<api_Actor_isEnabled>` () const"
msgstr ""

#: ../../reference/actor.rst:34
msgid ":ref:`isPrefab<api_Actor_isPrefab>` () const"
msgstr ""

#: ../../reference/actor.rst:36
msgid ":ref:`layers<api_Actor_layers>` () const"
msgstr ""

#: ../../reference/actor.rst:38 ../../reference/engine.rst:38
msgid ":ref:`Scene<api_Scene>` *"
msgstr ""

#: ../../reference/actor.rst:38
msgid ":ref:`scene<api_Actor_scene>` ()"
msgstr ""

#: ../../reference/actor.rst:40
msgid ":ref:`setEnabled<api_Actor_setEnabled>` (const bool  enabled)"
msgstr ""

#: ../../reference/actor.rst:42
msgid ":ref:`setLayers<api_Actor_setLayers>` (const int  layers)"
msgstr ""

#: ../../reference/actor.rst:44
msgid ":ref:`setParent<api_Actor_setParent>` (Object * parent)"
msgstr ""

#: ../../reference/actor.rst:46 ../../reference/transform.rst:28
msgid ":ref:`Transform<api_Transform>` *"
msgstr ""

#: ../../reference/actor.rst:46
msgid ":ref:`transform<api_Actor_transform>` ()"
msgstr ""

#: ../../reference/actor.rst:54
msgid ":ref:`methods<api_Actor_methods>` ()"
msgstr ""

#: ../../reference/actor.rst:56
msgid ":ref:`properties<api_Actor_properties>` ()"
msgstr ""

#: ../../reference/actor.rst:65
msgid "**Actor::Actor** ()"
msgstr ""

#: ../../reference/actor.rst:67
msgid "Default constructs an instance of Actor."
msgstr ""

#: ../../reference/actor.rst:73
msgid "**Actor::~Actor** ()"
msgstr ""

#: ../../reference/actor.rst:75
msgid "Destroys the instance of Actor. The destructor is virtual."
msgstr ""

#: ../../reference/actor.rst:81
msgid ""
":ref:`Component<api_Component>` * **Actor::addComponent** (:ref:"
"`int<api_int>`  *type*)"
msgstr ""

#: ../../reference/actor.rst:83
msgid "Returns created component with specified *type*;"
msgstr ""

#: ../../reference/actor.rst:89
msgid ""
":ref:`Component<api_Component>` * **Actor::component** (:ref:`int<api_int>`  "
"*type*)"
msgstr ""

#: ../../reference/actor.rst:91
msgid ""
"Returns the component with *type* if one is attached to this Actor; "
"otherwise returns nullptr."
msgstr ""

#: ../../reference/actor.rst:97
msgid ""
":ref:`Component<api_Component>` * **Actor::componentInChild** (:ref:"
"`int<api_int>`  *type*)"
msgstr ""

#: ../../reference/actor.rst:99
msgid ""
"Returns the component with *type* in the Actor's children using depth "
"search. A component is returned only if it's found on a current Actor; "
"otherwise returns nullptr."
msgstr ""

#: ../../reference/actor.rst:105
msgid ":ref:`bool<api_bool>`  **Actor::isEnabled** () const"
msgstr ""

#: ../../reference/actor.rst:107
msgid ""
"Returns true in case of Actor is enabled; otherwise returns false. Disabled "
"Actors becomes invisible for the user. By default the property is true."
msgstr ""

#: ../../reference/actor.rst:113
msgid ":ref:`bool<api_bool>`  **Actor::isPrefab** () const"
msgstr ""

#: ../../reference/actor.rst:115
msgid ""
"Returns true in case the current object is an instance of the serialized "
"prefab structure; otherwise returns false."
msgstr ""

#: ../../reference/actor.rst:121
msgid ":ref:`int<api_int>`  **Actor::layers** () const"
msgstr ""

#: ../../reference/actor.rst:123
msgid ""
"Returns the layers list for the this Actor as a bit mask. The layers used "
"for the various purposes like filtering objects before rendering."
msgstr ""

#: ../../reference/actor.rst:125
msgid "**See also** setLayers()."
msgstr ""

#: ../../reference/actor.rst:131
msgid ""
":ref:`const MetaMethod::Table<api_const MetaMethod::Table>` * **Actor::"
"methods** ()"
msgstr ""

#: ../../reference/actor.rst:137
msgid ""
":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` * **Actor::"
"properties** ()"
msgstr ""

#: ../../reference/actor.rst:143
msgid ":ref:`Scene<api_Scene>` * **Actor::scene** ()"
msgstr ""

#: ../../reference/actor.rst:145
msgid "Returns the scene where actor attached to."
msgstr ""

#: ../../reference/actor.rst:151
msgid ""
":ref:`void<api_void>`  **Actor::setEnabled** (:ref:`bool<api_bool>`  "
"*enabled*)"
msgstr ""

#: ../../reference/actor.rst:153
msgid ""
"Marks this Actor as *enabled* or disabled. Disabled Actors becomes invisible "
"for the user."
msgstr ""

#: ../../reference/actor.rst:155 ../../reference/component.rst:103
msgid "**See also** isEnabled()."
msgstr ""

#: ../../reference/actor.rst:161
msgid ""
":ref:`void<api_void>`  **Actor::setLayers** (:ref:`int<api_int>`  *layers*)"
msgstr ""

#: ../../reference/actor.rst:163
msgid "Assigns the list of *layers* for this Actor as a bitmask."
msgstr ""

#: ../../reference/actor.rst:165
msgid "**See also** *layers*()."
msgstr ""

#: ../../reference/actor.rst:171
msgid ""
":ref:`void<api_void>`  **Actor::setParent** (:ref:`Object<api_Object>` * "
"*parent*)"
msgstr ""

#: ../../reference/actor.rst:173
msgid "Reimplemented from Object::setParent()."
msgstr ""

#: ../../reference/actor.rst:175
msgid "Makes the actor a child of the *parent*."
msgstr ""

#: ../../reference/actor.rst:181
msgid ":ref:`Transform<api_Transform>` * **Actor::transform** ()"
msgstr ""

#: ../../reference/actor.rst:183
msgid ""
"Returns the Transform component attached to this Actor. If no Transform "
"component found this method will create a new one."
msgstr ""

#: ../../reference/animationcontroller.rst:3
msgid "AnimationController Class"
msgstr ""

#: ../../reference/animationcontroller.rst:5 ../../reference/renderable.rst:5
msgid "Inherited: :ref:`NativeBehaviour<api_NativeBehaviour>`"
msgstr ""

#: ../../reference/animationcontroller.rst:11
msgid "Manages all animations in the engine."
msgstr ""

#: ../../reference/animationcontroller.rst:13
msgid ""
"The animation controller allows to control different animation states from "
"AnimationStateMachine assets. To use any animations in the Thunder Engine "
"the AnimationController must be attached to a root Actor in the hierarchy. "
"The animation controller processes an AnimationStateMachine resource type. "
"The animation controller can use parametric values to decide when transition "
"between states must happen."
msgstr ""

#: ../../reference/animationcontroller.rst:22
msgid ""
":ref:`AnimationController<api_AnimationController_AnimationController>` ()"
msgstr ""

#: ../../reference/animationcontroller.rst:24
msgid ""
":ref:`~AnimationController<api_AnimationController_~AnimationController>` ()"
msgstr ""

#: ../../reference/animationcontroller.rst:26
msgid ":ref:`AnimationClip<api_AnimationClip>` *"
msgstr ""

#: ../../reference/animationcontroller.rst:26
msgid ":ref:`clip<api_AnimationController_clip>` () const"
msgstr ""

#: ../../reference/animationcontroller.rst:28
msgid ""
":ref:`crossFade<api_AnimationController_crossFade>` (const char * state, "
"float  duration)"
msgstr ""

#: ../../reference/animationcontroller.rst:30
msgid ""
":ref:`crossFade<api_AnimationController_crossFade>` (int  hash, float  "
"duration)"
msgstr ""

#: ../../reference/animationcontroller.rst:32
msgid ":ref:`duration<api_AnimationController_duration>` () const"
msgstr ""

#: ../../reference/animationcontroller.rst:34
msgid ":ref:`position<api_AnimationController_position>` () const"
msgstr ""

#: ../../reference/animationcontroller.rst:36
msgid ""
":ref:`setBool<api_AnimationController_setBool>` (const char * name, bool  "
"value)"
msgstr ""

#: ../../reference/animationcontroller.rst:38
msgid ""
":ref:`setBool<api_AnimationController_setBool>` (int  hash, bool  value)"
msgstr ""

#: ../../reference/animationcontroller.rst:40
msgid ":ref:`setClip<api_AnimationController_setClip>` (AnimationClip * clip)"
msgstr ""

#: ../../reference/animationcontroller.rst:42
msgid ""
":ref:`setFloat<api_AnimationController_setFloat>` (const char * name, float  "
"value)"
msgstr ""

#: ../../reference/animationcontroller.rst:44
msgid ""
":ref:`setFloat<api_AnimationController_setFloat>` (int  hash, float  value)"
msgstr ""

#: ../../reference/animationcontroller.rst:46
msgid ""
":ref:`setInteger<api_AnimationController_setInteger>` (const char * name, "
"int  value)"
msgstr ""

#: ../../reference/animationcontroller.rst:48
msgid ""
":ref:`setInteger<api_AnimationController_setInteger>` (int  hash, int  value)"
msgstr ""

#: ../../reference/animationcontroller.rst:50
msgid ":ref:`setPosition<api_AnimationController_setPosition>` (int  position)"
msgstr ""

#: ../../reference/animationcontroller.rst:52
msgid ":ref:`setState<api_AnimationController_setState>` (const char * state)"
msgstr ""

#: ../../reference/animationcontroller.rst:54
msgid ":ref:`setState<api_AnimationController_setState>` (int  hash)"
msgstr ""

#: ../../reference/animationcontroller.rst:56
msgid ""
":ref:`setStateMachine<api_AnimationController_setStateMachine>` "
"(AnimationStateMachine * resource)"
msgstr ""

#: ../../reference/animationcontroller.rst:58
msgid ":ref:`AnimationStateMachine<api_AnimationStateMachine>` *"
msgstr ""

#: ../../reference/animationcontroller.rst:58
msgid ":ref:`stateMachine<api_AnimationController_stateMachine>` () const"
msgstr ""

#: ../../reference/animationcontroller.rst:66
msgid ":ref:`properties<api_AnimationController_properties>` ()"
msgstr ""

#: ../../reference/animationcontroller.rst:75
msgid "**AnimationController::AnimationController** ()"
msgstr ""

#: ../../reference/animationcontroller.rst:77
msgid "Default constructs an instance of AnimationController."
msgstr ""

#: ../../reference/animationcontroller.rst:83
msgid "**AnimationController::~AnimationController** ()"
msgstr ""

#: ../../reference/animationcontroller.rst:85
msgid ""
"Destroys the instance of AnimationController. The destructor is virtual."
msgstr ""

#: ../../reference/animationcontroller.rst:91
msgid ""
":ref:`AnimationClip<api_AnimationClip>` * **AnimationController::clip** () "
"const"
msgstr ""

#: ../../reference/animationcontroller.rst:93
msgid "Returns AnimationClip for the current state."
msgstr ""

#: ../../reference/animationcontroller.rst:95
msgid "**See also** setClip()."
msgstr ""

#: ../../reference/animationcontroller.rst:101
msgid ""
":ref:`void<api_void>`  **AnimationController::crossFade** (:ref:"
"`char<api_char>` * *state*, :ref:`float<api_float>`  *duration*)"
msgstr ""

#: ../../reference/animationcontroller.rst:103
msgid ""
"Smoothly changes current *state* using crossfade interpolation from the "
"previous *state* to the new *state* with *duration* (in milliseconds)."
msgstr ""

#: ../../reference/animationcontroller.rst:109
msgid ""
":ref:`void<api_void>`  **AnimationController::crossFade** (:ref:"
"`int<api_int>`  *hash*, :ref:`float<api_float>`  *duration*)"
msgstr ""

#: ../../reference/animationcontroller.rst:111
msgid ""
"Smoothly changes current state using crossfade interpolation from the "
"previous state to the new state (using the *hash* of state) with *duration* "
"(in milliseconds)."
msgstr ""

#: ../../reference/animationcontroller.rst:117
msgid ":ref:`int<api_int>`  **AnimationController::duration** () const"
msgstr ""

#: ../../reference/animationcontroller.rst:119
msgid "Returns duration of the animation clip for the current state."
msgstr ""

#: ../../reference/animationcontroller.rst:125
msgid ":ref:`int<api_int>`  **AnimationController::position** () const"
msgstr ""

#: ../../reference/animationcontroller.rst:127
msgid ""
"Returns the position (in milliseconds) of animation for the current state."
msgstr ""

#: ../../reference/animationcontroller.rst:129
#: ../../reference/transform.rst:119
msgid "**See also** setPosition()."
msgstr ""

#: ../../reference/animationcontroller.rst:135
msgid ""
":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` * "
"**AnimationController::properties** ()"
msgstr ""

#: ../../reference/animationcontroller.rst:141
msgid ""
":ref:`void<api_void>`  **AnimationController::setBool** (:ref:"
"`char<api_char>` * *name*, :ref:`bool<api_bool>`  *value*)"
msgstr ""

#: ../../reference/animationcontroller.rst:143
msgid "Sets the new boolean *value* for the parameter with the *name*."
msgstr ""

#: ../../reference/animationcontroller.rst:149
msgid ""
":ref:`void<api_void>`  **AnimationController::setBool** (:ref:"
"`int<api_int>`  *hash*, :ref:`bool<api_bool>`  *value*)"
msgstr ""

#: ../../reference/animationcontroller.rst:151
msgid ""
"Sets the new boolean *value* for the parameter using the *hash* of state as "
"the name."
msgstr ""

#: ../../reference/animationcontroller.rst:157
msgid ""
":ref:`void<api_void>`  **AnimationController::setClip** (:ref:"
"`AnimationClip<api_AnimationClip>` * *clip*)"
msgstr ""

#: ../../reference/animationcontroller.rst:159
msgid "Forcefully sets animation *clip* over any state."
msgstr ""

#: ../../reference/animationcontroller.rst:161
msgid "**See also** *clip*()."
msgstr ""

#: ../../reference/animationcontroller.rst:167
msgid ""
":ref:`void<api_void>`  **AnimationController::setFloat** (:ref:"
"`char<api_char>` * *name*, :ref:`float<api_float>`  *value*)"
msgstr ""

#: ../../reference/animationcontroller.rst:169
msgid "Sets the new floating-point *value* for the parameter with the *name*."
msgstr ""

#: ../../reference/animationcontroller.rst:175
msgid ""
":ref:`void<api_void>`  **AnimationController::setFloat** (:ref:"
"`int<api_int>`  *hash*, :ref:`float<api_float>`  *value*)"
msgstr ""

#: ../../reference/animationcontroller.rst:177
msgid ""
"Sets the new floating-point *value* for the parameter using the *hash* of "
"state as the name."
msgstr ""

#: ../../reference/animationcontroller.rst:183
msgid ""
":ref:`void<api_void>`  **AnimationController::setInteger** (:ref:"
"`char<api_char>` * *name*, :ref:`int<api_int>`  *value*)"
msgstr ""

#: ../../reference/animationcontroller.rst:185
msgid "Sets the new integer *value* for the parameter with the *name*."
msgstr ""

#: ../../reference/animationcontroller.rst:191
msgid ""
":ref:`void<api_void>`  **AnimationController::setInteger** (:ref:"
"`int<api_int>`  *hash*, :ref:`int<api_int>`  *value*)"
msgstr ""

#: ../../reference/animationcontroller.rst:193
msgid ""
"Sets the new integer *value* for the parameter using the *hash* of state as "
"the name."
msgstr ""

#: ../../reference/animationcontroller.rst:199
msgid ""
":ref:`void<api_void>`  **AnimationController::setPosition** (:ref:"
"`int<api_int>`  *position*)"
msgstr ""

#: ../../reference/animationcontroller.rst:201
msgid ""
"Sets the *position* (in milliseconds) of animation for the current state."
msgstr ""

#: ../../reference/animationcontroller.rst:203
#: ../../reference/transform.rst:175
msgid "**See also** *position*()."
msgstr ""

#: ../../reference/animationcontroller.rst:209
msgid ""
":ref:`void<api_void>`  **AnimationController::setState** (:ref:"
"`char<api_char>` * *state*)"
msgstr ""

#: ../../reference/animationcontroller.rst:211
msgid "Changes the current *state* of *state* machine immediately."
msgstr ""

#: ../../reference/animationcontroller.rst:217
msgid ""
":ref:`void<api_void>`  **AnimationController::setState** (:ref:"
"`int<api_int>`  *hash*)"
msgstr ""

#: ../../reference/animationcontroller.rst:219
msgid ""
"Changes the current state (using the *hash* of state) of state machine "
"immediately."
msgstr ""

#: ../../reference/animationcontroller.rst:225
msgid ""
":ref:`void<api_void>`  **AnimationController::setStateMachine** (:ref:"
"`AnimationStateMachine<api_AnimationStateMachine>` * *resource*)"
msgstr ""

#: ../../reference/animationcontroller.rst:227
msgid ""
"Sets AnimationStateMachine *resource* which will be attached to this "
"AnimationController."
msgstr ""

#: ../../reference/animationcontroller.rst:229
msgid ""
"**Note:** The state machine will move to the initial state automatically "
"during the call of this function."
msgstr ""

#: ../../reference/animationcontroller.rst:231
msgid "**See also** stateMachine()."
msgstr ""

#: ../../reference/animationcontroller.rst:237
msgid ""
":ref:`AnimationStateMachine<api_AnimationStateMachine>` * "
"**AnimationController::stateMachine** () const"
msgstr ""

#: ../../reference/animationcontroller.rst:239
msgid ""
"Returns AnimationStateMachine resource attached to this AnimationController."
msgstr ""

#: ../../reference/animationcontroller.rst:241
msgid "**See also** setStateMachine()."
msgstr ""

#: ../../reference/baselight.rst:3
msgid "BaseLight Class"
msgstr ""

#: ../../reference/baselight.rst:5 ../../reference/meshrender.rst:5
#: ../../reference/particlerender.rst:5 ../../reference/spriterender.rst:5
#: ../../reference/textrender.rst:5
msgid "Inherited: :ref:`Renderable<api_Renderable>`"
msgstr ""

#: ../../reference/baselight.rst:11
msgid "Base class for every light source."
msgstr ""

#: ../../reference/baselight.rst:13 ../../reference/component.rst:15
#: ../../reference/renderable.rst:13 ../../reference/resource.rst:13
msgid ""
"Note: This class must be a superclass only and shouldn't be created manually."
msgstr ""

#: ../../reference/baselight.rst:22
msgid ":ref:`BaseLight<api_BaseLight_BaseLight>` ()"
msgstr ""

#: ../../reference/baselight.rst:24
msgid ":ref:`~BaseLight<api_BaseLight_~BaseLight>` ()"
msgstr ""

#: ../../reference/baselight.rst:26
msgid ":ref:`bias<api_BaseLight_bias>` () const"
msgstr ""

#: ../../reference/baselight.rst:28
msgid ":ref:`brightness<api_BaseLight_brightness>` () const"
msgstr ""

#: ../../reference/baselight.rst:30
msgid ":ref:`castShadows<api_BaseLight_castShadows>` () const"
msgstr ""

#: ../../reference/baselight.rst:32 ../../reference/camera.rst:26
#: ../../reference/input.rst:48 ../../reference/input.rst:52
#: ../../reference/input.rst:54 ../../reference/input.rst:60
#: ../../reference/spriterender.rst:26 ../../reference/textrender.rst:30
#: ../../reference/matrix3.rst:48 ../../reference/matrix4.rst:58
#: ../../reference/vector4.rst:46 ../../reference/vector4.rst:48
#: ../../reference/vector4.rst:52 ../../reference/vector4.rst:56
#: ../../reference/vector4.rst:58 ../../reference/vector4.rst:62
msgid ":ref:`Vector4<api_Vector4>`"
msgstr ""

#: ../../reference/baselight.rst:32
msgid ":ref:`color<api_BaseLight_color>` () const"
msgstr ""

#: ../../reference/baselight.rst:34
msgid ":ref:`setBias<api_BaseLight_setBias>` (const float  bias)"
msgstr ""

#: ../../reference/baselight.rst:36
msgid ""
":ref:`setBrightness<api_BaseLight_setBrightness>` (const float  brightness)"
msgstr ""

#: ../../reference/baselight.rst:38
msgid ""
":ref:`setCastShadows<api_BaseLight_setCastShadows>` (const bool  shadows)"
msgstr ""

#: ../../reference/baselight.rst:40
msgid ":ref:`setColor<api_BaseLight_setColor>` (const Vector4 & color)"
msgstr ""

#: ../../reference/baselight.rst:42
msgid ""
":ref:`shadowsUpdate<api_BaseLight_shadowsUpdate>` (const Camera & camera, "
"Pipeline * pipeline, Object::ObjectList & components)"
msgstr ""

#: ../../reference/baselight.rst:50
msgid ":ref:`properties<api_BaseLight_properties>` ()"
msgstr ""

#: ../../reference/baselight.rst:59
msgid "**BaseLight::BaseLight** ()"
msgstr ""

#: ../../reference/baselight.rst:61
msgid "Default constructs an instance of BaseLight."
msgstr ""

#: ../../reference/baselight.rst:67
msgid "**BaseLight::~BaseLight** ()"
msgstr ""

#: ../../reference/baselight.rst:69
msgid "Destroys the instance of BaseLight. The destructor is virtual."
msgstr ""

#: ../../reference/baselight.rst:75
msgid ":ref:`float<api_float>`  **BaseLight::bias** () const"
msgstr ""

#: ../../reference/baselight.rst:77
msgid "Returns shadow map bias value."
msgstr ""

#: ../../reference/baselight.rst:79
msgid "**See also** setBias()."
msgstr ""

#: ../../reference/baselight.rst:85
msgid ":ref:`float<api_float>`  **BaseLight::brightness** () const"
msgstr ""

#: ../../reference/baselight.rst:87
msgid "Returns a brightness of emitting light."
msgstr ""

#: ../../reference/baselight.rst:89
msgid "**See also** setBrightness()."
msgstr ""

#: ../../reference/baselight.rst:95
msgid ":ref:`bool<api_bool>`  **BaseLight::castShadows** () const"
msgstr ""

#: ../../reference/baselight.rst:97
msgid ""
"Returns true if the light source can cast shadows; otherwise returns false."
msgstr ""

#: ../../reference/baselight.rst:99
msgid "**See also** setCastShadows()."
msgstr ""

#: ../../reference/baselight.rst:105
msgid ":ref:`Vector4<api_Vector4>`  **BaseLight::color** () const"
msgstr ""

#: ../../reference/baselight.rst:107
msgid "Returns a color of emitting light."
msgstr ""

#: ../../reference/baselight.rst:109 ../../reference/camera.rst:125
#: ../../reference/spriterender.rst:77 ../../reference/textrender.rst:119
msgid "**See also** setColor()."
msgstr ""

#: ../../reference/baselight.rst:115
msgid ""
":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` * "
"**BaseLight::properties** ()"
msgstr ""

#: ../../reference/baselight.rst:121
msgid ""
":ref:`void<api_void>`  **BaseLight::setBias** (:ref:`float<api_float>`  "
"*bias*)"
msgstr ""

#: ../../reference/baselight.rst:123
msgid ""
"Changes shadow map *bias* value. You can use this value to mitigate the "
"shadow map acne effect."
msgstr ""

#: ../../reference/baselight.rst:125
msgid "**See also** *bias*()."
msgstr ""

#: ../../reference/baselight.rst:131
msgid ""
":ref:`void<api_void>`  **BaseLight::setBrightness** (:ref:"
"`float<api_float>`  *brightness*)"
msgstr ""

#: ../../reference/baselight.rst:133
msgid "Changes a *brightness* of emitting light."
msgstr ""

#: ../../reference/baselight.rst:135
msgid "**See also** *brightness*()."
msgstr ""

#: ../../reference/baselight.rst:141
msgid ""
":ref:`void<api_void>`  **BaseLight::setCastShadows** (:ref:`bool<api_bool>`  "
"*shadows*)"
msgstr ""

#: ../../reference/baselight.rst:143
msgid "Enables or disables cast *shadows* ability for the light source."
msgstr ""

#: ../../reference/baselight.rst:145
msgid "**See also** castShadows()."
msgstr ""

#: ../../reference/baselight.rst:151
msgid ""
":ref:`void<api_void>`  **BaseLight::setColor** (:ref:`Vector4<api_Vector4>` "
"& *color*)"
msgstr ""

#: ../../reference/baselight.rst:153
msgid "Changes a *color* of emitting light."
msgstr ""

#: ../../reference/baselight.rst:155 ../../reference/camera.rst:281
#: ../../reference/spriterender.rst:117 ../../reference/textrender.rst:201
msgid "**See also** *color*()."
msgstr ""

#: ../../reference/baselight.rst:161
msgid ""
":ref:`void<api_void>`  **BaseLight::shadowsUpdate** (:ref:"
"`Camera<api_Camera>` & *camera*, :ref:`Pipeline<api_Pipeline>` * "
"*pipeline*, :ref:`Object::ObjectList<api_Object::ObjectList>` & *components*)"
msgstr ""

#: ../../reference/baselight.rst:163
msgid "Updates the shadowmaps for the particular lightsource."
msgstr ""

#: ../../reference/camera.rst:3
msgid "Camera Class"
msgstr ""

#: ../../reference/camera.rst:5 ../../reference/transform.rst:5
msgid "Inherited: :ref:`Component<api_Component>`"
msgstr ""

#: ../../reference/camera.rst:11
msgid ""
"The Camera represents the player's point of view; how the player sees the "
"world."
msgstr ""

#: ../../reference/camera.rst:20
msgid ":ref:`Camera<api_Camera_Camera>` ()"
msgstr ""

#: ../../reference/camera.rst:22
msgid ":ref:`~Camera<api_Camera_~Camera>` ()"
msgstr ""

#: ../../reference/camera.rst:24 ../../reference/ray.rst:24
#: ../../reference/ray.rst:34 ../../reference/ray.rst:36
msgid ":ref:`Ray<api_Ray>`"
msgstr ""

#: ../../reference/camera.rst:24
msgid ":ref:`castRay<api_Camera_castRay>` (float  x, float  y)"
msgstr ""

#: ../../reference/camera.rst:26
msgid ":ref:`color<api_Camera_color>` () const"
msgstr ""

#: ../../reference/camera.rst:28
msgid ":ref:`farPlane<api_Camera_farPlane>` () const"
msgstr ""

#: ../../reference/camera.rst:30
msgid ":ref:`focal<api_Camera_focal>` () const"
msgstr ""

#: ../../reference/camera.rst:32
msgid ":ref:`fov<api_Camera_fov>` () const"
msgstr ""

#: ../../reference/camera.rst:34
msgid ""
":ref:`matrices<api_Camera_matrices>` (Matrix4 & view, Matrix4 & projection) "
"const"
msgstr ""

#: ../../reference/camera.rst:36
msgid ":ref:`nearPlane<api_Camera_nearPlane>` () const"
msgstr ""

#: ../../reference/camera.rst:38
msgid ":ref:`orthoSize<api_Camera_orthoSize>` () const"
msgstr ""

#: ../../reference/camera.rst:40
msgid ":ref:`orthographic<api_Camera_orthographic>` () const"
msgstr ""

#: ../../reference/camera.rst:42
msgid ":ref:`Pipeline<api_Pipeline>` *"
msgstr ""

#: ../../reference/camera.rst:42
msgid ":ref:`pipeline<api_Camera_pipeline>` ()"
msgstr ""

#: ../../reference/camera.rst:44 ../../reference/matrix4.rst:36
#: ../../reference/matrix4.rst:50 ../../reference/matrix4.rst:60
#: ../../reference/matrix4.rst:62 ../../reference/matrix4.rst:68
#: ../../reference/matrix4.rst:72 ../../reference/matrix4.rst:88
#: ../../reference/matrix4.rst:90 ../../reference/matrix4.rst:92
msgid ":ref:`Matrix4<api_Matrix4>`"
msgstr ""

#: ../../reference/camera.rst:44
msgid ":ref:`projectionMatrix<api_Camera_projectionMatrix>` () const"
msgstr ""

#: ../../reference/camera.rst:46
msgid ":ref:`ratio<api_Camera_ratio>` () const"
msgstr ""

#: ../../reference/camera.rst:48
msgid ":ref:`setColor<api_Camera_setColor>` (const Vector4 & color)"
msgstr ""

#: ../../reference/camera.rst:50
msgid ":ref:`setFar<api_Camera_setFar>` (const float  value)"
msgstr ""

#: ../../reference/camera.rst:52
msgid ":ref:`setFocal<api_Camera_setFocal>` (const float  focal)"
msgstr ""

#: ../../reference/camera.rst:54
msgid ":ref:`setFov<api_Camera_setFov>` (const float  value)"
msgstr ""

#: ../../reference/camera.rst:56
msgid ":ref:`setNear<api_Camera_setNear>` (const float  value)"
msgstr ""

#: ../../reference/camera.rst:58
msgid ":ref:`setOrthoSize<api_Camera_setOrthoSize>` (const float  size)"
msgstr ""

#: ../../reference/camera.rst:60
msgid ":ref:`setOrthographic<api_Camera_setOrthographic>` (const bool  mode)"
msgstr ""

#: ../../reference/camera.rst:62
msgid ":ref:`setPipeline<api_Camera_setPipeline>` (Pipeline * pipeline)"
msgstr ""

#: ../../reference/camera.rst:64
msgid ":ref:`setRatio<api_Camera_setRatio>` (float  ratio)"
msgstr ""

#: ../../reference/camera.rst:72
msgid ":ref:`Camera<api_Camera>` *"
msgstr ""

#: ../../reference/camera.rst:72
msgid ":ref:`current<api_Camera_current>` ()"
msgstr ""

#: ../../reference/camera.rst:74
msgid ":ref:`frustumCorners<api_Camera_frustumCorners>` (const Camera & )"
msgstr ""

#: ../../reference/camera.rst:76
msgid ""
":ref:`frustumCorners<api_Camera_frustumCorners>` (boo  bool, floa  float, "
"const Quaternion & )"
msgstr ""

#: ../../reference/camera.rst:78
msgid ":ref:`Object::ObjectList<api_Object::ObjectList>`"
msgstr ""

#: ../../reference/camera.rst:78
msgid ""
":ref:`frustumCulling<api_Camera_frustumCulling>` (Object::ObjectList & list, "
"const int & frustum)"
msgstr ""

#: ../../reference/camera.rst:80
msgid ":ref:`methods<api_Camera_methods>` ()"
msgstr ""

#: ../../reference/camera.rst:82
msgid ""
":ref:`project<api_Camera_project>` (const Vector3 & worldSpace, const "
"Matrix4 & modelView, const Matrix4 & projection, Vector3 & screenSpace)"
msgstr ""

#: ../../reference/camera.rst:84
msgid ":ref:`properties<api_Camera_properties>` ()"
msgstr ""

#: ../../reference/camera.rst:86
msgid ":ref:`setCurrent<api_Camera_setCurrent>` (Camera * current)"
msgstr ""

#: ../../reference/camera.rst:88
msgid ""
":ref:`unproject<api_Camera_unproject>` (const Vector3 & screenSpace, const "
"Matrix4 & modelView, const Matrix4 & projection, Vector3 & worldSpace)"
msgstr ""

#: ../../reference/camera.rst:97
msgid "**Camera::Camera** ()"
msgstr ""

#: ../../reference/camera.rst:99
msgid "Default constructs an instance of Camera."
msgstr ""

#: ../../reference/camera.rst:105
msgid "**Camera::~Camera** ()"
msgstr ""

#: ../../reference/camera.rst:107
msgid "Destroys the instance of Camera. The destructor is virtual."
msgstr ""

#: ../../reference/camera.rst:113
msgid ""
":ref:`Ray<api_Ray>`  **Camera::castRay** (:ref:`float<api_float>`  *x*, :ref:"
"`float<api_float>`  *y*)"
msgstr ""

#: ../../reference/camera.rst:115
msgid ""
"Returns ray with origin point in camera position and direction to projection "
"plane with *x* and *y* coordinates."
msgstr ""

#: ../../reference/camera.rst:121
msgid ":ref:`Vector4<api_Vector4>`  **Camera::color** () const"
msgstr ""

#: ../../reference/camera.rst:123
msgid "Returns the color with which the screen will be cleared."
msgstr ""

#: ../../reference/camera.rst:131
msgid ":ref:`Camera<api_Camera>` * **Camera::current** ()"
msgstr ""

#: ../../reference/camera.rst:133
msgid "Returns current active camera."
msgstr ""

#: ../../reference/camera.rst:135
msgid "**See also** setCurrent()."
msgstr ""

#: ../../reference/camera.rst:141
msgid ":ref:`float<api_float>`  **Camera::farPlane** () const"
msgstr ""

#: ../../reference/camera.rst:143
msgid "Returns a distance to far cut plane."
msgstr ""

#: ../../reference/camera.rst:149
msgid ":ref:`float<api_float>`  **Camera::focal** () const"
msgstr ""

#: ../../reference/camera.rst:151
msgid "Returns a focal distance for the camera."
msgstr ""

#: ../../reference/camera.rst:153
msgid "**See also** setFocal()."
msgstr ""

#: ../../reference/camera.rst:159
msgid ":ref:`float<api_float>`  **Camera::fov** () const"
msgstr ""

#: ../../reference/camera.rst:161
msgid "Returns field of view angle for the camera in degrees."
msgstr ""

#: ../../reference/camera.rst:163
msgid "**See also** setFov()."
msgstr ""

#: ../../reference/camera.rst:169
msgid ""
":ref:`int<api_int>`  **Camera::frustumCorners** (:ref:`Camera<api_Camera>` & "
"**)"
msgstr ""

#: ../../reference/camera.rst:171
msgid "Returns **frustum **corners **for **the **camera."
msgstr ""

#: ../../reference/camera.rst:177
msgid ""
":ref:`int<api_int>`  **Camera::frustumCorners** (:ref:`boo<api_boo>`  "
"*bool*, :ref:`floa<api_floa>`  *float*, :ref:`Quaternion<api_Quaternion>` & "
"**)"
msgstr ""

#: ../../reference/camera.rst:179
msgid "Returns **frustum **corners **with **provided **parameters."
msgstr ""

#: ../../reference/camera.rst:185
msgid ""
":ref:`Object::ObjectList<api_Object::ObjectList>`  **Camera::"
"frustumCulling** (:ref:`Object::ObjectList<api_Object::ObjectList>` & "
"*list*, :ref:`int<api_int>` & *frustum*)"
msgstr ""

#: ../../reference/camera.rst:187
msgid ""
"Filters out an incoming *list* which are not in the *frustum*. Returns "
"filtered *list*."
msgstr ""

#: ../../reference/camera.rst:193
msgid ""
":ref:`void<api_void>`  **Camera::matrices** (:ref:`Matrix4<api_Matrix4>` & "
"*view*, :ref:`Matrix4<api_Matrix4>` & *projection*) const"
msgstr ""

#: ../../reference/camera.rst:195
msgid "Returns *view* and *projection* matrices using output parameters."
msgstr ""

#: ../../reference/camera.rst:201
msgid ""
":ref:`const MetaMethod::Table<api_const MetaMethod::Table>` * **Camera::"
"methods** ()"
msgstr ""

#: ../../reference/camera.rst:207
msgid ":ref:`float<api_float>`  **Camera::nearPlane** () const"
msgstr ""

#: ../../reference/camera.rst:209
msgid "Returns a distance to near cut plane."
msgstr ""

#: ../../reference/camera.rst:215
msgid ":ref:`float<api_float>`  **Camera::orthoSize** () const"
msgstr ""

#: ../../reference/camera.rst:217
msgid "Returns camera size for orthographic mode."
msgstr ""

#: ../../reference/camera.rst:219
msgid "**See also** setOrthoSize()."
msgstr ""

#: ../../reference/camera.rst:225
msgid ":ref:`bool<api_bool>`  **Camera::orthographic** () const"
msgstr ""

#: ../../reference/camera.rst:227
msgid ""
"Returns true for the orthographic mode; for the perspective mode, returns "
"false."
msgstr ""

#: ../../reference/camera.rst:229
msgid "**See also** setOrthographic()."
msgstr ""

#: ../../reference/camera.rst:235
msgid ":ref:`Pipeline<api_Pipeline>` * **Camera::pipeline** ()"
msgstr ""

#: ../../reference/camera.rst:237
msgid "Returns render pipline which attached to the camera."
msgstr ""

#: ../../reference/camera.rst:239
msgid "**See also** setPipeline()."
msgstr ""

#: ../../reference/camera.rst:245
msgid ""
":ref:`bool<api_bool>`  **Camera::project** (:ref:`Vector3<api_Vector3>` & "
"*worldSpace*, :ref:`Matrix4<api_Matrix4>` & *modelView*, :ref:"
"`Matrix4<api_Matrix4>` & *projection*, :ref:`Vector3<api_Vector3>` & "
"*screenSpace*)"
msgstr ""

#: ../../reference/camera.rst:247 ../../reference/camera.rst:375
msgid ""
"Transforms position from *worldSpace* into *screenSpace* using *modelView* "
"and *projection* matrices. Returns true if success; otherwise returns false."
msgstr ""

#: ../../reference/camera.rst:253
msgid ":ref:`Matrix4<api_Matrix4>`  **Camera::projectionMatrix** () const"
msgstr ""

#: ../../reference/camera.rst:255
msgid "Returns projection matrix for the camera."
msgstr ""

#: ../../reference/camera.rst:261
msgid ""
":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` * **Camera::"
"properties** ()"
msgstr ""

#: ../../reference/camera.rst:267
msgid ":ref:`float<api_float>`  **Camera::ratio** () const"
msgstr ""

#: ../../reference/camera.rst:269
msgid "Returns the aspect ratio (width divided by height)."
msgstr ""

#: ../../reference/camera.rst:271
msgid "**See also** setRatio()."
msgstr ""

#: ../../reference/camera.rst:277
msgid ""
":ref:`void<api_void>`  **Camera::setColor** (:ref:`Vector4<api_Vector4>` & "
"*color*)"
msgstr ""

#: ../../reference/camera.rst:279
msgid "Sets the *color* with which the screen will be cleared."
msgstr ""

#: ../../reference/camera.rst:287
msgid ""
":ref:`void<api_void>`  **Camera::setCurrent** (:ref:`Camera<api_Camera>` * "
"*current*)"
msgstr ""

#: ../../reference/camera.rst:289
msgid "Sets *current* active camera."
msgstr ""

#: ../../reference/camera.rst:291
msgid "**See also** *current*()."
msgstr ""

#: ../../reference/camera.rst:297
msgid ""
":ref:`void<api_void>`  **Camera::setFar** (:ref:`float<api_float>`  *value*)"
msgstr ""

#: ../../reference/camera.rst:299
msgid "Sets a distance to far cut plane."
msgstr ""

#: ../../reference/camera.rst:305
msgid ""
":ref:`void<api_void>`  **Camera::setFocal** (:ref:`float<api_float>`  "
"*focal*)"
msgstr ""

#: ../../reference/camera.rst:307
msgid "Sets a *focal* distance for the camera."
msgstr ""

#: ../../reference/camera.rst:309
msgid "**See also** *focal*()."
msgstr ""

#: ../../reference/camera.rst:315
msgid ""
":ref:`void<api_void>`  **Camera::setFov** (:ref:`float<api_float>`  *value*)"
msgstr ""

#: ../../reference/camera.rst:317
msgid "Sets field of view angle for the camera in degrees."
msgstr ""

#: ../../reference/camera.rst:319
msgid "**Note:** Applicable only for the perspective mode."
msgstr ""

#: ../../reference/camera.rst:321
msgid "**See also** fov()."
msgstr ""

#: ../../reference/camera.rst:327
msgid ""
":ref:`void<api_void>`  **Camera::setNear** (:ref:`float<api_float>`  *value*)"
msgstr ""

#: ../../reference/camera.rst:333
msgid ""
":ref:`void<api_void>`  **Camera::setOrthoSize** (:ref:`float<api_float>`  "
"*size*)"
msgstr ""

#: ../../reference/camera.rst:335
msgid "Sets camera *size* for orthographic mode."
msgstr ""

#: ../../reference/camera.rst:337
msgid "**See also** orthoSize()."
msgstr ""

#: ../../reference/camera.rst:343
msgid ""
":ref:`void<api_void>`  **Camera::setOrthographic** (:ref:`bool<api_bool>`  "
"*mode*)"
msgstr ""

#: ../../reference/camera.rst:345
msgid "Sets orthographic *mode*."
msgstr ""

#: ../../reference/camera.rst:347
msgid "**See also** orthographic()."
msgstr ""

#: ../../reference/camera.rst:353
msgid ""
":ref:`void<api_void>`  **Camera::setPipeline** (:ref:"
"`Pipeline<api_Pipeline>` * *pipeline*)"
msgstr ""

#: ../../reference/camera.rst:355
msgid "Attaches render *pipeline* to the camera."
msgstr ""

#: ../../reference/camera.rst:357
msgid "**See also** *pipeline*()."
msgstr ""

#: ../../reference/camera.rst:363
msgid ""
":ref:`void<api_void>`  **Camera::setRatio** (:ref:`float<api_float>`  "
"*ratio*)"
msgstr ""

#: ../../reference/camera.rst:365
msgid "Sets the aspect *ratio* (width divided by height)."
msgstr ""

#: ../../reference/camera.rst:367
msgid "**See also** *ratio*()."
msgstr ""

#: ../../reference/camera.rst:373
msgid ""
":ref:`bool<api_bool>`  **Camera::unproject** (:ref:`Vector3<api_Vector3>` & "
"*screenSpace*, :ref:`Matrix4<api_Matrix4>` & *modelView*, :ref:"
"`Matrix4<api_Matrix4>` & *projection*, :ref:`Vector3<api_Vector3>` & "
"*worldSpace*)"
msgstr ""

#: ../../reference/component.rst:3
msgid "Component Class"
msgstr ""

#: ../../reference/component.rst:11
msgid "Base class for everything attached to Actor."
msgstr ""

#: ../../reference/component.rst:13
msgid ""
"The Component class is a base class for each aspect of the actor, and how it "
"interacts with the world."
msgstr ""

#: ../../reference/component.rst:24
msgid ":ref:`Component<api_Component_Component>` ()"
msgstr ""

#: ../../reference/component.rst:26
msgid ":ref:`~Component<api_Component_~Component>` ()"
msgstr ""

#: ../../reference/component.rst:28
msgid ":ref:`Actor<api_Actor>` *"
msgstr ""

#: ../../reference/component.rst:28
msgid ":ref:`actor<api_Component_actor>` () const"
msgstr ""

#: ../../reference/component.rst:30
msgid ":ref:`isEnabled<api_Component_isEnabled>` () const"
msgstr ""

#: ../../reference/component.rst:32
msgid ":ref:`setEnabled<api_Component_setEnabled>` (bool  enabled)"
msgstr ""

#: ../../reference/component.rst:34
msgid ":ref:`tr<api_Component_tr>` (const int & )"
msgstr ""

#: ../../reference/component.rst:42
msgid ":ref:`methods<api_Component_methods>` ()"
msgstr ""

#: ../../reference/component.rst:44
msgid ":ref:`properties<api_Component_properties>` ()"
msgstr ""

#: ../../reference/component.rst:53
msgid "**Component::Component** ()"
msgstr ""

#: ../../reference/component.rst:55
msgid "Default constructs an instance of Component."
msgstr ""

#: ../../reference/component.rst:61
msgid "**Component::~Component** ()"
msgstr ""

#: ../../reference/component.rst:63
msgid "Destroys the instance of Component. The destructor is virtual."
msgstr ""

#: ../../reference/component.rst:69
msgid ":ref:`Actor<api_Actor>` * **Component::actor** () const"
msgstr ""

#: ../../reference/component.rst:71
msgid "Returns a pointer to the actor to which the component is attached."
msgstr ""

#: ../../reference/component.rst:77
msgid ":ref:`bool<api_bool>`  **Component::isEnabled** () const"
msgstr ""

#: ../../reference/component.rst:79
msgid "Returns true if the component is enabled; otherwise returns false."
msgstr ""

#: ../../reference/component.rst:85
msgid ""
":ref:`const MetaMethod::Table<api_const MetaMethod::Table>` * **Component::"
"methods** ()"
msgstr ""

#: ../../reference/component.rst:91
msgid ""
":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` * "
"**Component::properties** ()"
msgstr ""

#: ../../reference/component.rst:97
msgid ""
":ref:`void<api_void>`  **Component::setEnabled** (:ref:`bool<api_bool>`  "
"*enabled*)"
msgstr ""

#: ../../reference/component.rst:99
msgid "Sets current state of component to *enabled* or disabled."
msgstr ""

#: ../../reference/component.rst:101
msgid ""
"**Note:** The disabled component will be created but not affect the Actor. "
"For example, MeshRender component will not draw a mesh."
msgstr ""

#: ../../reference/component.rst:109
msgid ":ref:`int<api_int>`  **Component::tr** (:ref:`int<api_int>` & **)"
msgstr ""

#: ../../reference/component.rst:111
msgid ""
"Returns **a **translated **version **of **source **text; **otherwise "
"**returns **source **text **if **no **appropriate **translated **string **is "
"**available."
msgstr ""

#: ../../reference/directlight.rst:3
msgid "DirectLight Class"
msgstr ""

#: ../../reference/directlight.rst:5 ../../reference/pointlight.rst:5
#: ../../reference/spotlight.rst:5
msgid "Inherited: :ref:`BaseLight<api_BaseLight>`"
msgstr ""

#: ../../reference/directlight.rst:11
msgid ""
"The Directional Light simulates light that is being emitted from a source "
"that is infinitely far away."
msgstr ""

#: ../../reference/directlight.rst:13
msgid ""
"To determine the emit direction DirectLight uses Transform component of the "
"own Actor."
msgstr ""

#: ../../reference/directlight.rst:22
msgid ":ref:`DirectLight<api_DirectLight_DirectLight>` ()"
msgstr ""

#: ../../reference/directlight.rst:24
msgid ":ref:`~DirectLight<api_DirectLight_~DirectLight>` ()"
msgstr ""

#: ../../reference/directlight.rst:32
msgid ":ref:`properties<api_DirectLight_properties>` ()"
msgstr ""

#: ../../reference/directlight.rst:41
msgid "**DirectLight::DirectLight** ()"
msgstr ""

#: ../../reference/directlight.rst:43
msgid "Default constructs an instance of DirectLight."
msgstr ""

#: ../../reference/directlight.rst:49
msgid "**DirectLight::~DirectLight** ()"
msgstr ""

#: ../../reference/directlight.rst:51
msgid "Destroys the instance of DirectLight. The destructor is virtual."
msgstr ""

#: ../../reference/directlight.rst:57
msgid ""
":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` * "
"**DirectLight::properties** ()"
msgstr ""

#: ../../reference/engine.rst:3
msgid "Engine Class"
msgstr ""

#: ../../reference/engine.rst:5
msgid "Inherited: :ref:`ObjectSystem<api_ObjectSystem>`"
msgstr ""

#: ../../reference/engine.rst:11
msgid "The Engine one of the central parts of Thunder Engine."
msgstr ""

#: ../../reference/engine.rst:13
msgid ""
"The Engine class is one of the central parts of the Thunder Engine. This "
"class is created first and removed last in your game. It is responsible for "
"many basic functions, such as game cycle, management of game modules, "
"loading and unloading of game resources, work with game settings."
msgstr ""

#: ../../reference/engine.rst:22
msgid ":ref:`Engine<api_Engine_Engine>` (File * file, const char * path)"
msgstr ""

#: ../../reference/engine.rst:24
msgid ":ref:`~Engine<api_Engine_~Engine>` ()"
msgstr ""

#: ../../reference/engine.rst:26
msgid ":ref:`addModule<api_Engine_addModule>` (Module * module)"
msgstr ""

#: ../../reference/engine.rst:28
msgid ":ref:`applicationName<api_Engine_applicationName>` () const"
msgstr ""

#: ../../reference/engine.rst:30
msgid ":ref:`init<api_Engine_init>` ()"
msgstr ""

#: ../../reference/engine.rst:32
msgid ":ref:`organizationName<api_Engine_organizationName>` () const"
msgstr ""

#: ../../reference/engine.rst:34
msgid ":ref:`resize<api_Engine_resize>` ()"
msgstr ""

#: ../../reference/engine.rst:36
msgid ":ref:`System<api_System>` *"
msgstr ""

#: ../../reference/engine.rst:36
msgid ":ref:`resourceSystem<api_Engine_resourceSystem>` () const"
msgstr ""

#: ../../reference/engine.rst:38
msgid ":ref:`scene<api_Engine_scene>` ()"
msgstr ""

#: ../../reference/engine.rst:40
msgid ":ref:`start<api_Engine_start>` ()"
msgstr ""

#: ../../reference/engine.rst:42
msgid ":ref:`update<api_Engine_update>` ()"
msgstr ""

#: ../../reference/engine.rst:44
msgid ":ref:`updateScene<api_Engine_updateScene>` (Scene * scene)"
msgstr ""

#: ../../reference/engine.rst:52
msgid ":ref:`File<api_File>` *"
msgstr ""

#: ../../reference/engine.rst:52
msgid ":ref:`file<api_Engine_file>` ()"
msgstr ""

#: ../../reference/engine.rst:54
msgid ":ref:`isGameMode<api_Engine_isGameMode>` ()"
msgstr ""

#: ../../reference/engine.rst:56
msgid ":ref:`isResourceExist<api_Engine_isResourceExist>` (const int & path)"
msgstr ""

#: ../../reference/engine.rst:58
msgid ":ref:`loadResource<api_Engine_loadResource>` (const int & path)"
msgstr ""

#: ../../reference/engine.rst:60
msgid ":ref:`loadTranslator<api_Engine_loadTranslator>` (const int & name)"
msgstr ""

#: ../../reference/engine.rst:62
msgid ":ref:`locationAppConfig<api_Engine_locationAppConfig>` ()"
msgstr ""

#: ../../reference/engine.rst:64
msgid ":ref:`locationAppDir<api_Engine_locationAppDir>` ()"
msgstr ""

#: ../../reference/engine.rst:66
msgid ":ref:`reference<api_Engine_reference>` (Object * )"
msgstr ""

#: ../../reference/engine.rst:68
msgid ":ref:`reloadBundle<api_Engine_reloadBundle>` ()"
msgstr ""

#: ../../reference/engine.rst:70
msgid ":ref:`setGameMode<api_Engine_setGameMode>` (bool  flag)"
msgstr ""

#: ../../reference/engine.rst:72
msgid ""
":ref:`setResource<api_Engine_setResource>` (Object * object, const int & "
"uuid)"
msgstr ""

#: ../../reference/engine.rst:74
msgid ""
":ref:`setValue<api_Engine_setValue>` (const int & key, const Variant & value)"
msgstr ""

#: ../../reference/engine.rst:76
msgid ":ref:`syncValues<api_Engine_syncValues>` ()"
msgstr ""

#: ../../reference/engine.rst:78
msgid ":ref:`translate<api_Engine_translate>` (const int & )"
msgstr ""

#: ../../reference/engine.rst:80
msgid ""
":ref:`unloadResource<api_Engine_unloadResource>` (const int & path, bool  "
"force = false)"
msgstr ""

#: ../../reference/engine.rst:82
msgid ""
":ref:`value<api_Engine_value>` (const int & key, const Variant & "
"defaultValue = Variant())"
msgstr ""

#: ../../reference/engine.rst:91
msgid ""
"**Engine::Engine** (:ref:`File<api_File>` * *file*, :ref:`char<api_char>` * "
"*path*)"
msgstr ""

#: ../../reference/engine.rst:93
msgid ""
"Constructs Engine. Using *file* and *path* parameters creates necessary "
"platform adapters, register basic component types and resource types."
msgstr ""

#: ../../reference/engine.rst:99
msgid "**Engine::~Engine** ()"
msgstr ""

#: ../../reference/engine.rst:101
msgid ""
"Destructs Engine, related objects, registered object factories and platform "
"adaptor."
msgstr ""

#: ../../reference/engine.rst:107
msgid ""
":ref:`void<api_void>`  **Engine::addModule** (:ref:`Module<api_Module>` * "
"*module*)"
msgstr ""

#: ../../reference/engine.rst:109
msgid ""
"Adds a game *module* to pool. This *module* will be used during update() "
"method execution."
msgstr ""

#: ../../reference/engine.rst:125
msgid ":ref:`int<api_int>`  **Engine::applicationName** () const"
msgstr ""

#: ../../reference/engine.rst:127
msgid "Returns application name."
msgstr ""

#: ../../reference/engine.rst:133
msgid ":ref:`File<api_File>` * **Engine::file** ()"
msgstr ""

#: ../../reference/engine.rst:135
msgid "Returns file system module."
msgstr ""

#: ../../reference/engine.rst:141
msgid ":ref:`bool<api_bool>`  **Engine::init** ()"
msgstr ""

#: ../../reference/engine.rst:143
msgid ""
"Initializes all engine systems. Returns true if successful; otherwise "
"returns false."
msgstr ""

#: ../../reference/engine.rst:149
msgid ":ref:`bool<api_bool>`  **Engine::isGameMode** ()"
msgstr ""

#: ../../reference/engine.rst:151
msgid "Returns true if game started; otherwise returns false."
msgstr ""

#: ../../reference/engine.rst:157
msgid ""
":ref:`bool<api_bool>`  **Engine::isResourceExist** (:ref:`int<api_int>` & "
"*path*)"
msgstr ""

#: ../../reference/engine.rst:159
msgid "Returns true if resource with *path* exists; otherwise returns false."
msgstr ""

#: ../../reference/engine.rst:165
msgid ""
":ref:`Object<api_Object>` * **Engine::loadResource** (:ref:`int<api_int>` & "
"*path*)"
msgstr ""

#: ../../reference/engine.rst:167
msgid "Returns an instance for loading resource by the provided *path*."
msgstr ""

#: ../../reference/engine.rst:169
msgid ""
"**Note:** In case of resource was loaded previously this function will "
"return the same instance."
msgstr ""

#: ../../reference/engine.rst:171
msgid "**See also** unloadResource()."
msgstr ""

#: ../../reference/engine.rst:177
msgid ""
":ref:`bool<api_bool>`  **Engine::loadTranslator** (:ref:`int<api_int>` & "
"*name*)"
msgstr ""

#: ../../reference/engine.rst:179
msgid ""
"Loads translation table with provided file *name*. This method generates the "
"LanguageChange event for the Engine instance. An Engine instance will "
"propagate the event to all top-level widgets, where reimplementation of "
"event() can re-translate user-visible strings. Returns true on success; "
"otherwise returns false."
msgstr ""

#: ../../reference/engine.rst:185
msgid ":ref:`int<api_int>`  **Engine::locationAppConfig** ()"
msgstr ""

#: ../../reference/engine.rst:187
msgid "Returns path to application config directory."
msgstr ""

#: ../../reference/engine.rst:193
msgid ":ref:`int<api_int>`  **Engine::locationAppDir** ()"
msgstr ""

#: ../../reference/engine.rst:195
msgid "Returns path to application binary directory."
msgstr ""

#: ../../reference/engine.rst:201
msgid ":ref:`int<api_int>`  **Engine::organizationName** () const"
msgstr ""

#: ../../reference/engine.rst:203
msgid "Returns organization name."
msgstr ""

#: ../../reference/engine.rst:209
msgid ""
":ref:`int<api_int>`  **Engine::reference** (:ref:`Object<api_Object>` * **)"
msgstr ""

#: ../../reference/engine.rst:211
msgid "Returns **resource **path **for **the **provided **resource **object."
msgstr ""

#: ../../reference/engine.rst:213
msgid "**See **also** **setResource()."
msgstr ""

#: ../../reference/engine.rst:219
msgid ":ref:`void<api_void>`  **Engine::reloadBundle** ()"
msgstr ""

#: ../../reference/engine.rst:221
msgid ""
"This method reads the index file for the resource bundle. The index file "
"helps to find required game resources."
msgstr ""

#: ../../reference/engine.rst:227
msgid ":ref:`void<api_void>`  **Engine::resize** ()"
msgstr ""

#: ../../reference/engine.rst:229
msgid ""
"This method must be called each time when your game screen changes its size."
msgstr ""

#: ../../reference/engine.rst:231 ../../reference/engine.rst:325
#: ../../reference/engine.rst:335 ../../reference/file.rst:201
#: ../../reference/file.rst:211 ../../reference/timer.rst:73
#: ../../reference/timer.rst:113
msgid ""
"**Note:** Usually, this method calls internally and must not be called "
"manually."
msgstr ""

#: ../../reference/engine.rst:237
msgid ":ref:`System<api_System>` * **Engine::resourceSystem** () const"
msgstr ""

#: ../../reference/engine.rst:239
msgid ""
"Returns the resource management system which can be used in external modules."
msgstr ""

#: ../../reference/engine.rst:245
msgid ":ref:`Scene<api_Scene>` * **Engine::scene** ()"
msgstr ""

#: ../../reference/engine.rst:247
msgid "Returns game Scene."
msgstr ""

#: ../../reference/engine.rst:249
msgid ""
"**Note:** The game can have only one scene. Scene is a root object, all map "
"loads on this scene."
msgstr ""

#: ../../reference/engine.rst:255
msgid ""
":ref:`void<api_void>`  **Engine::setGameMode** (:ref:`bool<api_bool>`  "
"*flag*)"
msgstr ""

#: ../../reference/engine.rst:257
msgid "Set game *flag* to true if game started; otherwise set false."
msgstr ""

#: ../../reference/engine.rst:259
msgid "**See also** isGameMode()."
msgstr ""

#: ../../reference/engine.rst:265
msgid ""
":ref:`void<api_void>`  **Engine::setResource** (:ref:`Object<api_Object>` * "
"*object*, :ref:`int<api_int>` & *uuid*)"
msgstr ""

#: ../../reference/engine.rst:267
msgid "Register resource *object* by *uuid* path."
msgstr ""

#: ../../reference/engine.rst:269
msgid "**See also** setResource()."
msgstr ""

#: ../../reference/engine.rst:275
msgid ""
":ref:`void<api_void>`  **Engine::setValue** (:ref:`int<api_int>` & *key*, :"
"ref:`Variant<api_Variant>` & *value*)"
msgstr ""

#: ../../reference/engine.rst:277
msgid ""
"Sets the *value* of setting *key* to *value*. If the *key* already exists, "
"the previous *value* is overwritten."
msgstr ""

#: ../../reference/engine.rst:279
msgid "**See also** *value*()."
msgstr ""

#: ../../reference/engine.rst:285
msgid ":ref:`bool<api_bool>`  **Engine::start** ()"
msgstr ""

#: ../../reference/engine.rst:287
msgid ""
"Starts the main game cycle. Also this method loads the first level of your "
"game. Returns true if successful; otherwise returns false."
msgstr ""

#: ../../reference/engine.rst:293
msgid ":ref:`void<api_void>`  **Engine::syncValues** ()"
msgstr ""

#: ../../reference/engine.rst:295
msgid "Applies all unsaved settings."
msgstr ""

#: ../../reference/engine.rst:301
msgid ":ref:`int<api_int>`  **Engine::translate** (:ref:`int<api_int>` & **)"
msgstr ""

#: ../../reference/engine.rst:303
msgid "Returns **the **translation **text **for **the **source **string."
msgstr ""

#: ../../reference/engine.rst:309
msgid ""
":ref:`void<api_void>`  **Engine::unloadResource** (:ref:`int<api_int>` & "
"*path*, :ref:`bool<api_bool>`  *force* = false)"
msgstr ""

#: ../../reference/engine.rst:311
msgid ""
"Force unloads the resource located along the *path* from memory. In case of "
"flag *force* provided the resource will be deleted immediately."
msgstr ""

#: ../../reference/engine.rst:313
msgid ""
"Warning: After this call, the reference on the resource may become an "
"invalid at any time and must not be used anymore."
msgstr ""

#: ../../reference/engine.rst:315
msgid "**See also** loadResource()."
msgstr ""

#: ../../reference/engine.rst:321
msgid ":ref:`void<api_void>`  **Engine::update** ()"
msgstr ""

#: ../../reference/engine.rst:323
msgid ""
"This method launches all your game modules responsible for processing all "
"the game logic. It calls on each iteration of the game cycle."
msgstr ""

#: ../../reference/engine.rst:331
msgid ""
":ref:`void<api_void>`  **Engine::updateScene** (:ref:`Scene<api_Scene>` * "
"*scene*)"
msgstr ""

#: ../../reference/engine.rst:333
msgid ""
"This method launches your game logic for the current *scene*. It calls on "
"each iteration of the game cycle."
msgstr ""

#: ../../reference/engine.rst:341
msgid ""
":ref:`Variant<api_Variant>`  **Engine::value** (:ref:`int<api_int>` & "
"*key*, :ref:`Variant<api_Variant>` & *defaultValue* = Variant())"
msgstr ""

#: ../../reference/engine.rst:343
msgid ""
"Returns the value for setting *key*. If the setting doesn't exist, returns "
"*defaultValue*."
msgstr ""

#: ../../reference/engine.rst:345
msgid "**See also** setValue()."
msgstr ""

#: ../../reference/file.rst:3
msgid "File Class"
msgstr ""

#: ../../reference/file.rst:11
msgid "Basic file system I/O module."
msgstr ""

#: ../../reference/file.rst:13
msgid ""
"The File class provides an interface for reading from and writing to files. "
"File expects the file separator to be '/' regardless of operating system. "
"The use of other separators (e.g., '') is not supported."
msgstr ""

#: ../../reference/file.rst:15
msgid ""
"You can check for a file's existence using _exists(), and remove a file "
"using _delete(). You can create a directory using _mkdir(), list all files "
"in directory using _flist() and retrive other basic information."
msgstr ""

#: ../../reference/file.rst:17
msgid ""
"The file can be opened with _open() and closed with _fclose(). Data is "
"usually can be read with _fread() and written with _fwrite()."
msgstr ""

#: ../../reference/file.rst:19 ../../reference/log.rst:15
msgid "Common usecase:"
msgstr ""

#: ../../reference/file.rst:28
msgid ":ref:`_delete<api_File__delete>` (const char * path)"
msgstr ""

#: ../../reference/file.rst:30
msgid ":ref:`_exists<api_File__exists>` (const char * path)"
msgstr ""

#: ../../reference/file.rst:32
msgid ":ref:`_fclose<api_File__fclose>` (_FILE * stream)"
msgstr ""

#: ../../reference/file.rst:34
msgid ":ref:`StringList<api_StringList>`"
msgstr ""

#: ../../reference/file.rst:34
msgid ":ref:`_flist<api_File__flist>` (const char * path)"
msgstr ""

#: ../../reference/file.rst:36
msgid ":ref:`_FILE<api__FILE>` *"
msgstr ""

#: ../../reference/file.rst:36
msgid ":ref:`_fopen<api_File__fopen>` (const char * path, const char * mode)"
msgstr ""

#: ../../reference/file.rst:38 ../../reference/file.rst:40
#: ../../reference/file.rst:42 ../../reference/file.rst:44
#: ../../reference/file.rst:46
msgid ":ref:`_size_t<api__size_t>`"
msgstr ""

#: ../../reference/file.rst:38
msgid ""
":ref:`_fread<api_File__fread>` (void * ptr, _size_t  size, _size_t  count, "
"_FILE * stream)"
msgstr ""

#: ../../reference/file.rst:40
msgid ":ref:`_fseek<api_File__fseek>` (_FILE * stream, int  origin)"
msgstr ""

#: ../../reference/file.rst:42
msgid ":ref:`_fsize<api_File__fsize>` (_FILE * stream)"
msgstr ""

#: ../../reference/file.rst:44
msgid ":ref:`_ftell<api_File__ftell>` (_FILE * stream)"
msgstr ""

#: ../../reference/file.rst:46
msgid ""
":ref:`_fwrite<api_File__fwrite>` (const void * ptr, _size_t  size, _size_t  "
"count, _FILE * stream)"
msgstr ""

#: ../../reference/file.rst:48
msgid ":ref:`_isdir<api_File__isdir>` (const char * path)"
msgstr ""

#: ../../reference/file.rst:50
msgid ":ref:`_mkdir<api_File__mkdir>` (const char * path)"
msgstr ""

#: ../../reference/file.rst:52
msgid ":ref:`finit<api_File_finit>` (const char * argv0)"
msgstr ""

#: ../../reference/file.rst:54
msgid ""
":ref:`fsearchPathAdd<api_File_fsearchPathAdd>` (const char * path, bool  "
"isFirst = false)"
msgstr ""

#: ../../reference/file.rst:69
msgid ""
":ref:`bool<api_bool>`  **File::_delete** (:ref:`char<api_char>` * *path*)"
msgstr ""

#: ../../reference/file.rst:71
msgid ""
"Delete file. Returns true if the operation succeeded; otherwise returns "
"false."
msgstr ""

#: ../../reference/file.rst:73
msgid "**Note:** The file can be deleted only if *path* marked as writable."
msgstr ""

#: ../../reference/file.rst:79
msgid ""
":ref:`bool<api_bool>`  **File::_exists** (:ref:`char<api_char>` * *path*)"
msgstr ""

#: ../../reference/file.rst:81
msgid ""
"Checks if a file by *path* exists. Returns true if operation succeeded; "
"otherwise returns false."
msgstr ""

#: ../../reference/file.rst:87
msgid ""
":ref:`int<api_int>`  **File::_fclose** (:ref:`_FILE<api__FILE>` * *stream*)"
msgstr ""

#: ../../reference/file.rst:89
msgid ""
"Closes file *stream*. Returns 0 if succeeded; otherwise returns non-zero "
"value."
msgstr ""

#: ../../reference/file.rst:95
msgid ""
":ref:`StringList<api_StringList>`  **File::_flist** (:ref:`char<api_char>` * "
"*path*)"
msgstr ""

#: ../../reference/file.rst:97
msgid "Get a file listing of a search *path* directory."
msgstr ""

#: ../../reference/file.rst:111
msgid ""
":ref:`_FILE<api__FILE>` * **File::_fopen** (:ref:`char<api_char>` * *path*, :"
"ref:`char<api_char>` * *mode*)"
msgstr ""

#: ../../reference/file.rst:113
msgid ""
"Opens the file whose name is specified in the *path* and associates it with "
"a stream that can be identified in future operations. The operations that "
"are allowed on the stream and how these are performed are defined by the "
"*mode* parameter. Allowed values of *mode* parameter:"
msgstr ""

#: ../../reference/file.rst:116
msgid ""
"\"r\" - Open a file for reading. \"w\" - Open a file for writing. The *path* "
"must marked as writable. \"a\" - Open a file for appending. The *path* must "
"marked as writable."
msgstr ""

#: ../../reference/file.rst:121
msgid ""
"Returns _FILE pointer to file stream if succeeded; otherwise returns nullptr "
"value."
msgstr ""

#: ../../reference/file.rst:127
msgid ""
":ref:`_size_t<api__size_t>`  **File::_fread** (:ref:`void<api_void>` * "
"*ptr*, :ref:`_size_t<api__size_t>`  *size*, :ref:`_size_t<api__size_t>`  "
"*count*, :ref:`_FILE<api__FILE>` * *stream*)"
msgstr ""

#: ../../reference/file.rst:129
msgid ""
"Reads an array of *count* elements, each one with a *size* of *size* bytes, "
"from the *stream* and stores them in the block of memory specified by *ptr*. "
"The file must be opened for reading."
msgstr ""

#: ../../reference/file.rst:131
msgid "Returns number of objects read."
msgstr ""

#: ../../reference/file.rst:137
msgid ""
":ref:`_size_t<api__size_t>`  **File::_fseek** (:ref:`_FILE<api__FILE>` * "
"*stream*, :ref:`int<api_int>`  *origin*)"
msgstr ""

#: ../../reference/file.rst:139
msgid ""
"Seek to a new position within a file *stream*. Returns 0 if succeeded; "
"otherwise returns non-zero value. The next read or write will occur at that "
"*origin* position. Seeking past the beginning or end of the file is not "
"allowed, and causes an error."
msgstr ""

#: ../../reference/file.rst:141
msgid "**See also** _ftell()."
msgstr ""

#: ../../reference/file.rst:147
msgid ""
":ref:`_size_t<api__size_t>`  **File::_fsize** (:ref:`_FILE<api__FILE>` * "
"*stream*)"
msgstr ""

#: ../../reference/file.rst:149
msgid "Get total length of a file *stream* in bytes."
msgstr ""

#: ../../reference/file.rst:155
msgid ""
":ref:`_size_t<api__size_t>`  **File::_ftell** (:ref:`_FILE<api__FILE>` * "
"*stream*)"
msgstr ""

#: ../../reference/file.rst:157
msgid "Determine current position within a file *stream*."
msgstr ""

#: ../../reference/file.rst:159
msgid "Returns offset in bytes from start of file."
msgstr ""

#: ../../reference/file.rst:161
msgid "**See also** _fseek()."
msgstr ""

#: ../../reference/file.rst:167
msgid ""
":ref:`_size_t<api__size_t>`  **File::_fwrite** (:ref:`void<api_void>` * "
"*ptr*, :ref:`_size_t<api__size_t>`  *size*, :ref:`_size_t<api__size_t>`  "
"*count*, :ref:`_FILE<api__FILE>` * *stream*)"
msgstr ""

#: ../../reference/file.rst:169
msgid ""
"Writes an array of *count* elements, each one with a *size* of *size* bytes, "
"from the block of memory pointed by *ptr* to the current position in the "
"*stream*. The file must be opened for writing."
msgstr ""

#: ../../reference/file.rst:171
msgid "Returns number of objects written."
msgstr ""

#: ../../reference/file.rst:177
msgid ""
":ref:`bool<api_bool>`  **File::_isdir** (:ref:`char<api_char>` * *path*)"
msgstr ""

#: ../../reference/file.rst:179
msgid ""
"Determine if a file by *path* in the search *path* is really a directory."
msgstr ""

#: ../../reference/file.rst:181
msgid "Returns true if operation succeeded; otherwise returns false."
msgstr ""

#: ../../reference/file.rst:187
msgid ""
":ref:`bool<api_bool>`  **File::_mkdir** (:ref:`char<api_char>` * *path*)"
msgstr ""

#: ../../reference/file.rst:189
msgid ""
"Create directory. Returns true if the operation succeeded; otherwise returns "
"false."
msgstr ""

#: ../../reference/file.rst:191
msgid "**Note:** Directory can be created only if *path* marked as writable."
msgstr ""

#: ../../reference/file.rst:197
msgid ""
":ref:`void<api_void>`  **File::finit** (:ref:`char<api_char>` * *argv0*)"
msgstr ""

#: ../../reference/file.rst:199
msgid ""
"Initialize the file system module at *argv0* application file path. This "
"method must be called before any operations with filesytem."
msgstr ""

#: ../../reference/file.rst:207
msgid ""
":ref:`void<api_void>`  **File::fsearchPathAdd** (:ref:`char<api_char>` * "
"*path*, :ref:`bool<api_bool>`  *isFirst* = false)"
msgstr ""

#: ../../reference/file.rst:209
msgid ""
"Add an archive or directory to the search *path*. If *isFirst* provided as "
"true the directory will be marked as writable. The Method can be called "
"multiple time to add more directories to work with."
msgstr ""

#: ../../reference/input.rst:3
msgid "Input Class"
msgstr ""

#: ../../reference/input.rst:11
msgid "The interface to inpust system of Thunder Engine."
msgstr ""

#: ../../reference/input.rst:13
msgid ""
"Use this class to get information from the inpute devices, like mouse, "
"keyboard, joystick and etc."
msgstr ""

#: ../../reference/input.rst:15
msgid ""
"Note: All input data updates once per frame during Engine::update() method."
msgstr ""

#: ../../reference/input.rst:17
msgid ""
"Note: Many mobile devices are capable of tracking multiple fingers touching "
"the screen simultaneously."
msgstr ""

#: ../../reference/input.rst:32
msgid ":ref:`isKey<api_Input_isKey>` (Input::KeyCode  code)"
msgstr ""

#: ../../reference/input.rst:34
msgid ":ref:`isKeyDown<api_Input_isKeyDown>` (Input::KeyCode  code)"
msgstr ""

#: ../../reference/input.rst:36
msgid ":ref:`isKeyUp<api_Input_isKeyUp>` (Input::KeyCode  code)"
msgstr ""

#: ../../reference/input.rst:38
msgid ""
":ref:`isMouseButton<api_Input_isMouseButton>` (Input::MouseButton  button)"
msgstr ""

#: ../../reference/input.rst:40
msgid ""
":ref:`isMouseButtonDown<api_Input_isMouseButtonDown>` (Input::MouseButton  "
"button)"
msgstr ""

#: ../../reference/input.rst:42
msgid ""
":ref:`isMouseButtonUp<api_Input_isMouseButtonUp>` (Input::MouseButton  "
"button)"
msgstr ""

#: ../../reference/input.rst:44
msgid ":ref:`joystickButtons<api_Input_joystickButtons>` (in  int)"
msgstr ""

#: ../../reference/input.rst:46
msgid ":ref:`joystickCount<api_Input_joystickCount>` ()"
msgstr ""

#: ../../reference/input.rst:48
msgid ":ref:`joystickThumbs<api_Input_joystickThumbs>` (int  index)"
msgstr ""

#: ../../reference/input.rst:50 ../../reference/textrender.rst:28
#: ../../reference/vector2.rst:44 ../../reference/vector2.rst:46
#: ../../reference/vector2.rst:50 ../../reference/vector2.rst:54
#: ../../reference/vector2.rst:56 ../../reference/vector2.rst:60
msgid ":ref:`Vector2<api_Vector2>`"
msgstr ""

#: ../../reference/input.rst:50
msgid ":ref:`joystickTriggers<api_Input_joystickTriggers>` (int  index)"
msgstr ""

#: ../../reference/input.rst:52
msgid ":ref:`mouseDelta<api_Input_mouseDelta>` ()"
msgstr ""

#: ../../reference/input.rst:54
msgid ":ref:`mousePosition<api_Input_mousePosition>` ()"
msgstr ""

#: ../../reference/input.rst:56
msgid ":ref:`setMousePosition<api_Input_setMousePosition>` (int  x, int  y)"
msgstr ""

#: ../../reference/input.rst:58
msgid ":ref:`touchCount<api_Input_touchCount>` ()"
msgstr ""

#: ../../reference/input.rst:60
msgid ":ref:`touchPosition<api_Input_touchPosition>` (int  index)"
msgstr ""

#: ../../reference/input.rst:62
msgid ":ref:`touchState<api_Input_touchState>` (in  int)"
msgstr ""

#: ../../reference/input.rst:71
msgid ""
":ref:`bool<api_bool>`  **Input::isKey** (:ref:`Input::KeyCode<api_Input::"
"KeyCode>`  *code*)"
msgstr ""

#: ../../reference/input.rst:73
msgid ""
"Returns true in case of a key with *code* is pressed; otherwise returns "
"false. Please refer to Input::KeyCode to see possible key *code*s."
msgstr ""

#: ../../reference/input.rst:79
msgid ""
":ref:`bool<api_bool>`  **Input::isKeyDown** (:ref:`Input::KeyCode<api_Input::"
"KeyCode>`  *code*)"
msgstr ""

#: ../../reference/input.rst:81
msgid ""
"Returns true during the frame in case of a key with *code* is pressed; "
"otherwise returns false. Please refer to Input::KeyCode to see possible key "
"*code*s."
msgstr ""

#: ../../reference/input.rst:87
msgid ""
":ref:`bool<api_bool>`  **Input::isKeyUp** (:ref:`Input::KeyCode<api_Input::"
"KeyCode>`  *code*)"
msgstr ""

#: ../../reference/input.rst:89
msgid ""
"Returns true during the frame in case of a key with *code* is released; "
"otherwise returns false. Please refer to Input::KeyCode to see possible key "
"*code*s."
msgstr ""

#: ../../reference/input.rst:95
msgid ""
":ref:`bool<api_bool>`  **Input::isMouseButton** (:ref:`Input::"
"MouseButton<api_Input::MouseButton>`  *button*)"
msgstr ""

#: ../../reference/input.rst:97
msgid ""
"Returns the states of mouse *button*s. Please refer to Input::MouseButton to "
"see possible *button*s. Example code:"
msgstr ""

#: ../../reference/input.rst:109
msgid ""
":ref:`bool<api_bool>`  **Input::isMouseButtonDown** (:ref:`Input::"
"MouseButton<api_Input::MouseButton>`  *button*)"
msgstr ""

#: ../../reference/input.rst:111
msgid ""
"Returns true in case of the *button* is pressed; otherwise returns false. "
"Please refer to Input::MouseButton to see possible *button*s."
msgstr ""

#: ../../reference/input.rst:117
msgid ""
":ref:`bool<api_bool>`  **Input::isMouseButtonUp** (:ref:`Input::"
"MouseButton<api_Input::MouseButton>`  *button*)"
msgstr ""

#: ../../reference/input.rst:119
msgid ""
"Returns true in case of the *button* is released; otherwise returns false. "
"Please refer to Input::MouseButton to see possible *button*s."
msgstr ""

#: ../../reference/input.rst:125
msgid ""
":ref:`int<api_int>`  **Input::joystickButtons** (:ref:`in<api_in>`  *int*)"
msgstr ""

#: ../../reference/input.rst:127
msgid ""
"Returns the states of buttons for joystick with index. Please refer to "
"Input::JoystickButton to see possible buttons."
msgstr ""

#: ../../reference/input.rst:129
msgid ""
"**Note:** This method returns a bit masked value. To retrieve the state of "
"the required button please make bit comparison."
msgstr ""

#: ../../reference/input.rst:131
msgid "Example code:"
msgstr ""

#: ../../reference/input.rst:143
msgid ":ref:`int<api_int>`  **Input::joystickCount** ()"
msgstr ""

#: ../../reference/input.rst:145
msgid "Returns the number of connected joysticks."
msgstr ""

#: ../../reference/input.rst:151
msgid ""
":ref:`Vector4<api_Vector4>`  **Input::joystickThumbs** (:ref:`int<api_int>`  "
"*index*)"
msgstr ""

#: ../../reference/input.rst:153
msgid ""
"Returns the thumbs position of joystick with *index*. The components x and y "
"will contain a value for the left thumbs. The components z and w will "
"contain a value for the right thumbs."
msgstr ""

#: ../../reference/input.rst:159
msgid ""
":ref:`Vector2<api_Vector2>`  **Input::joystickTriggers** (:ref:"
"`int<api_int>`  *index*)"
msgstr ""

#: ../../reference/input.rst:161
msgid ""
"Returns the value of pressure for the joystick triggers with *index*. The "
"component x will contain a value for the left trigger and component y will "
"contain value for the right trigger."
msgstr ""

#: ../../reference/input.rst:167
msgid ":ref:`Vector4<api_Vector4>`  **Input::mouseDelta** ()"
msgstr ""

#: ../../reference/input.rst:169
msgid ""
"Returns the mouse position delta. The absolute position will be stored in x "
"and y components. The normalized position will be stored in z and w "
"components."
msgstr ""

#: ../../reference/input.rst:171
msgid ""
"**Note:** Delta value recalculated once per frame, calling this method "
"multiple times in one frame will return the same result."
msgstr ""

#: ../../reference/input.rst:173
msgid "**Note:** The value will be Vector4(0.0f) if a mouse is not moved."
msgstr ""

#: ../../reference/input.rst:179
msgid ":ref:`Vector4<api_Vector4>`  **Input::mousePosition** ()"
msgstr ""

#: ../../reference/input.rst:181
msgid ""
"Returns the mouse position. The absolute position will be stored in x and y "
"components. The normalized position will be stored in z and w components."
msgstr ""

#: ../../reference/input.rst:183
msgid "**See also** setMousePosition()."
msgstr ""

#: ../../reference/input.rst:189
msgid ""
":ref:`void<api_void>`  **Input::setMousePosition** (:ref:`int<api_int>`  "
"*x*, :ref:`int<api_int>`  *y*)"
msgstr ""

#: ../../reference/input.rst:191
msgid "Moves the mouse cursor to the global screen position (x, *y*)."
msgstr ""

#: ../../reference/input.rst:193
msgid "**See also** mousePosition()."
msgstr ""

#: ../../reference/input.rst:199
msgid ":ref:`int<api_int>`  **Input::touchCount** ()"
msgstr ""

#: ../../reference/input.rst:201
msgid "Returns the number of touches."
msgstr ""

#: ../../reference/input.rst:207
msgid ""
":ref:`Vector4<api_Vector4>`  **Input::touchPosition** (:ref:`int<api_int>`  "
"*index*)"
msgstr ""

#: ../../reference/input.rst:209
msgid ""
"Returns the position of touch with *index*. The absolute position will be "
"stored in x and y components. The normalized position will be stored in z "
"and w components."
msgstr ""

#: ../../reference/input.rst:215
msgid ":ref:`int<api_int>`  **Input::touchState** (:ref:`in<api_in>`  *int*)"
msgstr ""

#: ../../reference/input.rst:217
msgid ""
"Returns the state of touch with index. Please refer to Input::TouchState to "
"see possible states."
msgstr ""

#: ../../reference/log.rst:3
msgid "Log Class"
msgstr ""

#: ../../reference/log.rst:11
msgid "The Log class provides an output stream for logging information."
msgstr ""

#: ../../reference/log.rst:13
msgid ""
"The Log is used whenever the developer needs to write out debugging or "
"tracing information to a file or console."
msgstr ""

#: ../../reference/log.rst:24
msgid ":ref:`Log<api_Log_Log>` (Log::LogTypes  type)"
msgstr ""

#: ../../reference/log.rst:26
msgid ":ref:`~Log<api_Log_~Log>` ()"
msgstr ""

#: ../../reference/log.rst:28 ../../reference/log.rst:30
#: ../../reference/log.rst:32 ../../reference/log.rst:34
#: ../../reference/log.rst:36
msgid ":ref:`Log<api_Log>` &"
msgstr ""

#: ../../reference/log.rst:28
msgid ":ref:`operator<<<api_Log_operator<<>` (bool  b)"
msgstr ""

#: ../../reference/log.rst:30
msgid ":ref:`operator<<<api_Log_operator<<>` (int  i)"
msgstr ""

#: ../../reference/log.rst:32
msgid ":ref:`operator<<<api_Log_operator<<>` (float  f)"
msgstr ""

#: ../../reference/log.rst:34
msgid ":ref:`operator<<<api_Log_operator<<>` (double  d)"
msgstr ""

#: ../../reference/log.rst:36
msgid ":ref:`operator<<<api_Log_operator<<>` (const char * string)"
msgstr ""

#: ../../reference/log.rst:44
msgid ":ref:`LogHandler<api_LogHandler>` *"
msgstr ""

#: ../../reference/log.rst:44
msgid ":ref:`handler<api_Log_handler>` ()"
msgstr ""

#: ../../reference/log.rst:46
msgid ":ref:`overrideHandler<api_Log_overrideHandler>` (LogHandler * handler)"
msgstr ""

#: ../../reference/log.rst:48
msgid ":ref:`setLogLevel<api_Log_setLogLevel>` (Log::LogTypes  level)"
msgstr ""

#: ../../reference/log.rst:57
msgid "**Log::Log** (:ref:`Log::LogTypes<api_Log::LogTypes>`  *type*)"
msgstr ""

#: ../../reference/log.rst:59
msgid ""
"Constructs a log stream that writes to the handler for the message *type*."
msgstr ""

#: ../../reference/log.rst:65
msgid "**Log::~Log** ()"
msgstr ""

#: ../../reference/log.rst:67
msgid "Flushes any pending data to be written and destroys the log stream."
msgstr ""

#: ../../reference/log.rst:73
msgid ":ref:`LogHandler<api_LogHandler>` * **Log::handler** ()"
msgstr ""

#: ../../reference/log.rst:75
msgid "Returns LogHandler object if present; otherwise returns nullptr."
msgstr ""

#: ../../reference/log.rst:81
msgid ""
":ref:`void<api_void>`  **Log::overrideHandler** (:ref:"
"`LogHandler<api_LogHandler>` * *handler*)"
msgstr ""

#: ../../reference/log.rst:83
msgid ""
"Set a new Log *handler*. This method can be used in case if a developer "
"would need to move logging stream to someplace. For example to the console."
msgstr ""

#: ../../reference/log.rst:89
msgid ""
":ref:`void<api_void>`  **Log::setLogLevel** (:ref:`Log::LogTypes<api_Log::"
"LogTypes>`  *level*)"
msgstr ""

#: ../../reference/log.rst:91
msgid ""
"Set current log *level* output. Messages wich are below this *level* will be "
"descarded."
msgstr ""

#: ../../reference/log.rst:97
msgid ":ref:`Log<api_Log>` & **Log::operator<<** (:ref:`bool<api_bool>`  *b*)"
msgstr ""

#: ../../reference/log.rst:99
msgid ""
"Writes the *b*oolean value, *b*, to the stream and returns a reference to "
"the stream."
msgstr ""

#: ../../reference/log.rst:105
msgid ":ref:`Log<api_Log>` & **Log::operator<<** (:ref:`int<api_int>`  *i*)"
msgstr ""

#: ../../reference/log.rst:107
msgid ""
"Writes the singed 64 bit *i*nteger value, *i*, to the stream and returns a "
"reference to the stream."
msgstr ""

#: ../../reference/log.rst:113
msgid ""
":ref:`Log<api_Log>` & **Log::operator<<** (:ref:`float<api_float>`  *f*)"
msgstr ""

#: ../../reference/log.rst:115
msgid ""
"Writes the *f*loat value, *f*, to the stream and returns a reference to the "
"stream."
msgstr ""

#: ../../reference/log.rst:121
msgid ""
":ref:`Log<api_Log>` & **Log::operator<<** (:ref:`double<api_double>`  *d*)"
msgstr ""

#: ../../reference/log.rst:123
msgid ""
"Writes the float value with *d*ouble precision, *d*, to the stream and "
"returns a reference to the stream."
msgstr ""

#: ../../reference/log.rst:129
msgid ""
":ref:`Log<api_Log>` & **Log::operator<<** (:ref:`char<api_char>` * *string*)"
msgstr ""

#: ../../reference/log.rst:131
msgid ""
"Writes the '\\0'-terminated *string*, to the stream and returns a reference "
"to the stream."
msgstr ""

#: ../../reference/meshrender.rst:3
msgid "MeshRender Class"
msgstr ""

#: ../../reference/meshrender.rst:11
msgid "Draws a mesh for the 3D graphics."
msgstr ""

#: ../../reference/meshrender.rst:13
msgid ""
"The MeshRender component allows you to display 3D Mesh to use in both 2D and "
"3D scenes."
msgstr ""

#: ../../reference/meshrender.rst:22
msgid ":ref:`MeshRender<api_MeshRender_MeshRender>` ()"
msgstr ""

#: ../../reference/meshrender.rst:24
msgid ":ref:`~MeshRender<api_MeshRender_~MeshRender>` ()"
msgstr ""

#: ../../reference/meshrender.rst:26 ../../reference/spriterender.rst:28
#: ../../reference/textrender.rst:38
msgid ":ref:`Material<api_Material>` *"
msgstr ""

#: ../../reference/meshrender.rst:26
msgid ":ref:`material<api_MeshRender_material>` () const"
msgstr ""

#: ../../reference/meshrender.rst:28 ../../reference/spriterender.rst:30
msgid ":ref:`Mesh<api_Mesh>` *"
msgstr ""

#: ../../reference/meshrender.rst:28
msgid ":ref:`mesh<api_MeshRender_mesh>` () const"
msgstr ""

#: ../../reference/meshrender.rst:30
msgid ":ref:`setMaterial<api_MeshRender_setMaterial>` (Material * material)"
msgstr ""

#: ../../reference/meshrender.rst:32
msgid ":ref:`setMesh<api_MeshRender_setMesh>` (Mesh * mesh)"
msgstr ""

#: ../../reference/meshrender.rst:40
msgid ":ref:`methods<api_MeshRender_methods>` ()"
msgstr ""

#: ../../reference/meshrender.rst:42
msgid ":ref:`properties<api_MeshRender_properties>` ()"
msgstr ""

#: ../../reference/meshrender.rst:51
msgid "**MeshRender::MeshRender** ()"
msgstr ""

#: ../../reference/meshrender.rst:53
msgid "Default constructs an instance of MeshRender."
msgstr ""

#: ../../reference/meshrender.rst:59
msgid "**MeshRender::~MeshRender** ()"
msgstr ""

#: ../../reference/meshrender.rst:61
msgid "Destroys the instance of MeshRender. The destructor is virtual."
msgstr ""

#: ../../reference/meshrender.rst:67
msgid ":ref:`Material<api_Material>` * **MeshRender::material** () const"
msgstr ""

#: ../../reference/meshrender.rst:69
msgid "Returns an instantiated Material assigned to MeshRender."
msgstr ""

#: ../../reference/meshrender.rst:71 ../../reference/spriterender.rst:87
#: ../../reference/textrender.rst:159
msgid "**See also** setMaterial()."
msgstr ""

#: ../../reference/meshrender.rst:77
msgid ":ref:`Mesh<api_Mesh>` * **MeshRender::mesh** () const"
msgstr ""

#: ../../reference/meshrender.rst:79
msgid "Returns a Mesh assigned to this component."
msgstr ""

#: ../../reference/meshrender.rst:81
msgid "**See also** setMesh()."
msgstr ""

#: ../../reference/meshrender.rst:87
msgid ""
":ref:`const MetaMethod::Table<api_const MetaMethod::Table>` * **MeshRender::"
"methods** ()"
msgstr ""

#: ../../reference/meshrender.rst:93
msgid ""
":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` * "
"**MeshRender::properties** ()"
msgstr ""

#: ../../reference/meshrender.rst:99
msgid ""
":ref:`void<api_void>`  **MeshRender::setMaterial** (:ref:"
"`Material<api_Material>` * *material*)"
msgstr ""

#: ../../reference/meshrender.rst:101 ../../reference/spriterender.rst:125
#: ../../reference/textrender.rst:241
msgid "Creates a new instance of *material* and assigns it."
msgstr ""

#: ../../reference/meshrender.rst:103 ../../reference/spriterender.rst:127
#: ../../reference/textrender.rst:243
msgid "**See also** *material*()."
msgstr ""

#: ../../reference/meshrender.rst:109
msgid ""
":ref:`void<api_void>`  **MeshRender::setMesh** (:ref:`Mesh<api_Mesh>` * "
"*mesh*)"
msgstr ""

#: ../../reference/meshrender.rst:111
msgid "Assigns a new *mesh* to draw."
msgstr ""

#: ../../reference/meshrender.rst:113
msgid "**See also** *mesh*()."
msgstr ""

#: ../../reference/particlerender.rst:3
msgid "ParticleRender Class"
msgstr ""

#: ../../reference/particlerender.rst:11
msgid "Draws a particle effect on the scene."
msgstr ""

#: ../../reference/particlerender.rst:13
msgid ""
"The ParticleRender component allows you to display Particle Effects such as "
"fire and explosions."
msgstr ""

#: ../../reference/particlerender.rst:22
msgid ":ref:`ParticleRender<api_ParticleRender_ParticleRender>` ()"
msgstr ""

#: ../../reference/particlerender.rst:24
msgid ":ref:`~ParticleRender<api_ParticleRender_~ParticleRender>` ()"
msgstr ""

#: ../../reference/particlerender.rst:26
msgid ":ref:`ParticleEffect<api_ParticleEffect>` *"
msgstr ""

#: ../../reference/particlerender.rst:26
msgid ":ref:`effect<api_ParticleRender_effect>` () const"
msgstr ""

#: ../../reference/particlerender.rst:28
msgid ""
":ref:`setEffect<api_ParticleRender_setEffect>` (ParticleEffect * effect)"
msgstr ""

#: ../../reference/particlerender.rst:36
msgid ":ref:`methods<api_ParticleRender_methods>` ()"
msgstr ""

#: ../../reference/particlerender.rst:38
msgid ":ref:`properties<api_ParticleRender_properties>` ()"
msgstr ""

#: ../../reference/particlerender.rst:47
msgid "**ParticleRender::ParticleRender** ()"
msgstr ""

#: ../../reference/particlerender.rst:49
msgid "Default constructs an instance of ParticleRender."
msgstr ""

#: ../../reference/particlerender.rst:55
msgid "**ParticleRender::~ParticleRender** ()"
msgstr ""

#: ../../reference/particlerender.rst:57
msgid "Destroys the instance of ParticleRender. The destructor is virtual."
msgstr ""

#: ../../reference/particlerender.rst:63
msgid ""
":ref:`ParticleEffect<api_ParticleEffect>` * **ParticleRender::effect** () "
"const"
msgstr ""

#: ../../reference/particlerender.rst:65
msgid "Returns a ParticleEffect assigned to the this component."
msgstr ""

#: ../../reference/particlerender.rst:67
msgid "**See also** setEffect()."
msgstr ""

#: ../../reference/particlerender.rst:73
msgid ""
":ref:`const MetaMethod::Table<api_const MetaMethod::Table>` * "
"**ParticleRender::methods** ()"
msgstr ""

#: ../../reference/particlerender.rst:79
msgid ""
":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` * "
"**ParticleRender::properties** ()"
msgstr ""

#: ../../reference/particlerender.rst:85
msgid ""
":ref:`void<api_void>`  **ParticleRender::setEffect** (:ref:"
"`ParticleEffect<api_ParticleEffect>` * *effect*)"
msgstr ""

#: ../../reference/particlerender.rst:87
msgid "Assgines a particle *effect* to the this component."
msgstr ""

#: ../../reference/particlerender.rst:89
msgid "**See also** *effect*()."
msgstr ""

#: ../../reference/pointlight.rst:3
msgid "PointLight Class"
msgstr ""

#: ../../reference/pointlight.rst:11
msgid ""
"Point Lights works much like a real-world light bulb, emitting light in all "
"directions."
msgstr ""

#: ../../reference/pointlight.rst:13
msgid ""
"To determine the emiter position PointLight uses Transform component of the "
"own Actor."
msgstr ""

#: ../../reference/pointlight.rst:22
msgid ":ref:`PointLight<api_PointLight_PointLight>` ()"
msgstr ""

#: ../../reference/pointlight.rst:24
msgid ":ref:`~PointLight<api_PointLight_~PointLight>` ()"
msgstr ""

#: ../../reference/pointlight.rst:26
msgid ":ref:`radius<api_PointLight_radius>` () const"
msgstr ""

#: ../../reference/pointlight.rst:28
msgid ":ref:`setRadius<api_PointLight_setRadius>` (float  radius)"
msgstr ""

#: ../../reference/pointlight.rst:36
msgid ":ref:`properties<api_PointLight_properties>` ()"
msgstr ""

#: ../../reference/pointlight.rst:45
msgid "**PointLight::PointLight** ()"
msgstr ""

#: ../../reference/pointlight.rst:47
msgid "Default constructs an instance of PointLight."
msgstr ""

#: ../../reference/pointlight.rst:53
msgid "**PointLight::~PointLight** ()"
msgstr ""

#: ../../reference/pointlight.rst:55
msgid "Destroys the instance of PointLight. The destructor is virtual."
msgstr ""

#: ../../reference/pointlight.rst:61
msgid ""
":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` * "
"**PointLight::properties** ()"
msgstr ""

#: ../../reference/pointlight.rst:67
msgid ":ref:`float<api_float>`  **PointLight::radius** () const"
msgstr ""

#: ../../reference/pointlight.rst:69
msgid "Returns the attenuation radius of the light."
msgstr ""

#: ../../reference/pointlight.rst:71
msgid "**See also** setRadius()."
msgstr ""

#: ../../reference/pointlight.rst:77
msgid ""
":ref:`void<api_void>`  **PointLight::setRadius** (:ref:`float<api_float>`  "
"*radius*)"
msgstr ""

#: ../../reference/pointlight.rst:79
msgid "Changes the attenuation *radius* of the light."
msgstr ""

#: ../../reference/pointlight.rst:81
msgid "**See also** *radius*()."
msgstr ""

#: ../../reference/renderable.rst:3
msgid "Renderable Class"
msgstr ""

#: ../../reference/renderable.rst:11
msgid "Base class for every object which can be drawn on the screen."
msgstr ""

#: ../../reference/renderable.rst:22
msgid ":ref:`Renderable<api_Renderable_Renderable>` ()"
msgstr ""

#: ../../reference/renderable.rst:24
msgid ":ref:`AABBox<api_AABBox>`"
msgstr ""

#: ../../reference/renderable.rst:24
msgid ":ref:`bound<api_Renderable_bound>` () const"
msgstr ""

#: ../../reference/renderable.rst:32
msgid ":ref:`methods<api_Renderable_methods>` ()"
msgstr ""

#: ../../reference/renderable.rst:34
msgid ":ref:`properties<api_Renderable_properties>` ()"
msgstr ""

#: ../../reference/renderable.rst:43
msgid "**Renderable::Renderable** ()"
msgstr ""

#: ../../reference/renderable.rst:45
msgid "Default constructs an instance of Renderable."
msgstr ""

#: ../../reference/renderable.rst:51
msgid ":ref:`AABBox<api_AABBox>`  **Renderable::bound** () const"
msgstr ""

#: ../../reference/renderable.rst:53
msgid "Returns a bound box of the renderable object."
msgstr ""

#: ../../reference/renderable.rst:59
msgid ""
":ref:`const MetaMethod::Table<api_const MetaMethod::Table>` * **Renderable::"
"methods** ()"
msgstr ""

#: ../../reference/renderable.rst:65
msgid ""
":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` * "
"**Renderable::properties** ()"
msgstr ""

#: ../../reference/spotlight.rst:3
msgid "SpotLight Class"
msgstr ""

#: ../../reference/spotlight.rst:11
msgid "A Spot Light emits light from a single point in a cone shape."
msgstr ""

#: ../../reference/spotlight.rst:13
msgid ""
"To determine the emitter position and emit direction SpotLight uses "
"Transform component of the own Actor."
msgstr ""

#: ../../reference/spotlight.rst:22
msgid ":ref:`SpotLight<api_SpotLight_SpotLight>` ()"
msgstr ""

#: ../../reference/spotlight.rst:24
msgid ":ref:`~SpotLight<api_SpotLight_~SpotLight>` ()"
msgstr ""

#: ../../reference/spotlight.rst:26
msgid ":ref:`angle<api_SpotLight_angle>` () const"
msgstr ""

#: ../../reference/spotlight.rst:28
msgid ":ref:`distance<api_SpotLight_distance>` () const"
msgstr ""

#: ../../reference/spotlight.rst:30
msgid ":ref:`setAngle<api_SpotLight_setAngle>` (float  angle)"
msgstr ""

#: ../../reference/spotlight.rst:32
msgid ":ref:`setDistance<api_SpotLight_setDistance>` (float  distance)"
msgstr ""

#: ../../reference/spotlight.rst:40
msgid ":ref:`properties<api_SpotLight_properties>` ()"
msgstr ""

#: ../../reference/spotlight.rst:49
msgid "**SpotLight::SpotLight** ()"
msgstr ""

#: ../../reference/spotlight.rst:51
msgid "Default constructs an instance of SpotLight."
msgstr ""

#: ../../reference/spotlight.rst:57
msgid "**SpotLight::~SpotLight** ()"
msgstr ""

#: ../../reference/spotlight.rst:59
msgid "Destroys the instance of SpotLight. The destructor is virtual."
msgstr ""

#: ../../reference/spotlight.rst:65
msgid ":ref:`float<api_float>`  **SpotLight::angle** () const"
msgstr ""

#: ../../reference/spotlight.rst:67
msgid "Returns the angle of the light cone in degrees."
msgstr ""

#: ../../reference/spotlight.rst:69
msgid "**See also** setAngle()."
msgstr ""

#: ../../reference/spotlight.rst:75
msgid ":ref:`float<api_float>`  **SpotLight::distance** () const"
msgstr ""

#: ../../reference/spotlight.rst:77
msgid "Returns the attenuation distance of the light cone."
msgstr ""

#: ../../reference/spotlight.rst:79
msgid "**See also** setDistance()."
msgstr ""

#: ../../reference/spotlight.rst:85
msgid ""
":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` * "
"**SpotLight::properties** ()"
msgstr ""

#: ../../reference/spotlight.rst:91
msgid ""
":ref:`void<api_void>`  **SpotLight::setAngle** (:ref:`float<api_float>`  "
"*angle*)"
msgstr ""

#: ../../reference/spotlight.rst:93
msgid "Changes the *angle* of the light cone in degrees."
msgstr ""

#: ../../reference/spotlight.rst:95
msgid "**See also** *angle*()."
msgstr ""

#: ../../reference/spotlight.rst:101
msgid ""
":ref:`void<api_void>`  **SpotLight::setDistance** (:ref:`float<api_float>`  "
"*distance*)"
msgstr ""

#: ../../reference/spotlight.rst:103
msgid "Changes the attenuation *distance* of the light cone."
msgstr ""

#: ../../reference/spotlight.rst:105
msgid "**See also** *distance*()."
msgstr ""

#: ../../reference/spriterender.rst:3
msgid "SpriteRender Class"
msgstr ""

#: ../../reference/spriterender.rst:11
msgid "Draws a sprite for the 2D graphics."
msgstr ""

#: ../../reference/spriterender.rst:13
msgid ""
"The SpriteRender component allows you to display images as sprites to use in "
"both 2D and 3D scenes."
msgstr ""

#: ../../reference/spriterender.rst:22
msgid ":ref:`SpriteRender<api_SpriteRender_SpriteRender>` ()"
msgstr ""

#: ../../reference/spriterender.rst:24
msgid ":ref:`~SpriteRender<api_SpriteRender_~SpriteRender>` ()"
msgstr ""

#: ../../reference/spriterender.rst:26
msgid ":ref:`color<api_SpriteRender_color>` () const"
msgstr ""

#: ../../reference/spriterender.rst:28
msgid ":ref:`material<api_SpriteRender_material>` () const"
msgstr ""

#: ../../reference/spriterender.rst:30
msgid ":ref:`mesh<api_SpriteRender_mesh>` () const"
msgstr ""

#: ../../reference/spriterender.rst:32
msgid ":ref:`setColor<api_SpriteRender_setColor>` (const Vector4 & color)"
msgstr ""

#: ../../reference/spriterender.rst:34
msgid ":ref:`setMaterial<api_SpriteRender_setMaterial>` (Material * material)"
msgstr ""

#: ../../reference/spriterender.rst:36
msgid ":ref:`setTexture<api_SpriteRender_setTexture>` (Texture * texture)"
msgstr ""

#: ../../reference/spriterender.rst:38
msgid ":ref:`Texture<api_Texture>` *"
msgstr ""

#: ../../reference/spriterender.rst:38
msgid ":ref:`texture<api_SpriteRender_texture>` () const"
msgstr ""

#: ../../reference/spriterender.rst:46
msgid ":ref:`methods<api_SpriteRender_methods>` ()"
msgstr ""

#: ../../reference/spriterender.rst:48
msgid ":ref:`properties<api_SpriteRender_properties>` ()"
msgstr ""

#: ../../reference/spriterender.rst:57
msgid "**SpriteRender::SpriteRender** ()"
msgstr ""

#: ../../reference/spriterender.rst:59
msgid "Default constructs an instance of SpriteRender."
msgstr ""

#: ../../reference/spriterender.rst:65
msgid "**SpriteRender::~SpriteRender** ()"
msgstr ""

#: ../../reference/spriterender.rst:67
msgid "Destroys the instance of SpriteRender. The destructor is virtual."
msgstr ""

#: ../../reference/spriterender.rst:73
msgid ":ref:`Vector4<api_Vector4>`  **SpriteRender::color** () const"
msgstr ""

#: ../../reference/spriterender.rst:75
msgid "Returns the color of the sprite to be drawn."
msgstr ""

#: ../../reference/spriterender.rst:83
msgid ":ref:`Material<api_Material>` * **SpriteRender::material** () const"
msgstr ""

#: ../../reference/spriterender.rst:85
msgid "Returns an instantiated Material assigned to SpriteRender."
msgstr ""

#: ../../reference/spriterender.rst:93
msgid ":ref:`Mesh<api_Mesh>` * **SpriteRender::mesh** () const"
msgstr ""

#: ../../reference/spriterender.rst:95
msgid "Returns a sprite mesh which uses to render a sprite."
msgstr ""

#: ../../reference/spriterender.rst:101
msgid ""
":ref:`const MetaMethod::Table<api_const MetaMethod::Table>` * "
"**SpriteRender::methods** ()"
msgstr ""

#: ../../reference/spriterender.rst:107
msgid ""
":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` * "
"**SpriteRender::properties** ()"
msgstr ""

#: ../../reference/spriterender.rst:113
msgid ""
":ref:`void<api_void>`  **SpriteRender::setColor** (:ref:"
"`Vector4<api_Vector4>` & *color*)"
msgstr ""

#: ../../reference/spriterender.rst:115
msgid "Changes the *color* of the sprite to be drawn."
msgstr ""

#: ../../reference/spriterender.rst:123
msgid ""
":ref:`void<api_void>`  **SpriteRender::setMaterial** (:ref:"
"`Material<api_Material>` * *material*)"
msgstr ""

#: ../../reference/spriterender.rst:133
msgid ""
":ref:`void<api_void>`  **SpriteRender::setTexture** (:ref:"
"`Texture<api_Texture>` * *texture*)"
msgstr ""

#: ../../reference/spriterender.rst:135
msgid "Replaces current *texture* with a new one."
msgstr ""

#: ../../reference/spriterender.rst:137
msgid "**See also** *texture*()."
msgstr ""

#: ../../reference/spriterender.rst:143
msgid ":ref:`Texture<api_Texture>` * **SpriteRender::texture** () const"
msgstr ""

#: ../../reference/spriterender.rst:145
msgid "Returns a sprite texture."
msgstr ""

#: ../../reference/spriterender.rst:147
msgid "**See also** setTexture()."
msgstr ""

#: ../../reference/textrender.rst:3
msgid "TextRender Class"
msgstr ""

#: ../../reference/textrender.rst:11
msgid "Draws a text for the 2D and 3D graphics."
msgstr ""

#: ../../reference/textrender.rst:13
msgid ""
"The TextRender component allows you to display a text in both 2D and 3D "
"scenes."
msgstr ""

#: ../../reference/textrender.rst:22
msgid ":ref:`TextRender<api_TextRender_TextRender>` ()"
msgstr ""

#: ../../reference/textrender.rst:24
msgid ":ref:`~TextRender<api_TextRender_~TextRender>` ()"
msgstr ""

#: ../../reference/textrender.rst:26
msgid ":ref:`align<api_TextRender_align>` () const"
msgstr ""

#: ../../reference/textrender.rst:28
msgid ":ref:`boundaries<api_TextRender_boundaries>` () const"
msgstr ""

#: ../../reference/textrender.rst:30
msgid ":ref:`color<api_TextRender_color>` () const"
msgstr ""

#: ../../reference/textrender.rst:32
msgid ":ref:`Font<api_Font>` *"
msgstr ""

#: ../../reference/textrender.rst:32
msgid ":ref:`font<api_TextRender_font>` () const"
msgstr ""

#: ../../reference/textrender.rst:34
msgid ":ref:`fontSize<api_TextRender_fontSize>` () const"
msgstr ""

#: ../../reference/textrender.rst:36
msgid ":ref:`kerning<api_TextRender_kerning>` () const"
msgstr ""

#: ../../reference/textrender.rst:38
msgid ":ref:`material<api_TextRender_material>` () const"
msgstr ""

#: ../../reference/textrender.rst:40
msgid ":ref:`setAlign<api_TextRender_setAlign>` (int  alignment)"
msgstr ""

#: ../../reference/textrender.rst:42
msgid ""
":ref:`setBoundaries<api_TextRender_setBoundaries>` (const Vector2 & "
"boundaries)"
msgstr ""

#: ../../reference/textrender.rst:44
msgid ":ref:`setColor<api_TextRender_setColor>` (const Vector4 & color)"
msgstr ""

#: ../../reference/textrender.rst:46
msgid ":ref:`setFont<api_TextRender_setFont>` (Font * font)"
msgstr ""

#: ../../reference/textrender.rst:48
msgid ":ref:`setFontSize<api_TextRender_setFontSize>` (int  size)"
msgstr ""

#: ../../reference/textrender.rst:50
msgid ":ref:`setKerning<api_TextRender_setKerning>` (const bool  kerning)"
msgstr ""

#: ../../reference/textrender.rst:52
msgid ":ref:`setMaterial<api_TextRender_setMaterial>` (Material * material)"
msgstr ""

#: ../../reference/textrender.rst:54
msgid ":ref:`setText<api_TextRender_setText>` (const int & text)"
msgstr ""

#: ../../reference/textrender.rst:56
msgid ":ref:`setWrap<api_TextRender_setWrap>` (bool  wrap)"
msgstr ""

#: ../../reference/textrender.rst:58
msgid ":ref:`text<api_TextRender_text>` () const"
msgstr ""

#: ../../reference/textrender.rst:60
msgid ":ref:`wrap<api_TextRender_wrap>` () const"
msgstr ""

#: ../../reference/textrender.rst:68
msgid ":ref:`methods<api_TextRender_methods>` ()"
msgstr ""

#: ../../reference/textrender.rst:70
msgid ":ref:`properties<api_TextRender_properties>` ()"
msgstr ""

#: ../../reference/textrender.rst:79
msgid "**TextRender::TextRender** ()"
msgstr ""

#: ../../reference/textrender.rst:81
msgid "Default constructs an instance of TextRender."
msgstr ""

#: ../../reference/textrender.rst:87
msgid "**TextRender::~TextRender** ()"
msgstr ""

#: ../../reference/textrender.rst:89
msgid "Destroys the instance of TextRender. The destructor is virtual."
msgstr ""

#: ../../reference/textrender.rst:95
msgid ":ref:`int<api_int>`  **TextRender::align** () const"
msgstr ""

#: ../../reference/textrender.rst:97
msgid "Returns text alignment policy."
msgstr ""

#: ../../reference/textrender.rst:99
msgid "**See also** setAlign()."
msgstr ""

#: ../../reference/textrender.rst:105
msgid ":ref:`Vector2<api_Vector2>`  **TextRender::boundaries** () const"
msgstr ""

#: ../../reference/textrender.rst:107
msgid ""
"Returns the boundaries of the text area. This parameter is involved in Word "
"Wrap calculations."
msgstr ""

#: ../../reference/textrender.rst:109
msgid "**See also** setBoundaries()."
msgstr ""

#: ../../reference/textrender.rst:115
msgid ":ref:`Vector4<api_Vector4>`  **TextRender::color** () const"
msgstr ""

#: ../../reference/textrender.rst:117
msgid "Returns the color of the text to be drawn."
msgstr ""

#: ../../reference/textrender.rst:125
msgid ":ref:`Font<api_Font>` * **TextRender::font** () const"
msgstr ""

#: ../../reference/textrender.rst:127
msgid "Returns the font which will be used to draw a text."
msgstr ""

#: ../../reference/textrender.rst:129
msgid "**See also** setFont()."
msgstr ""

#: ../../reference/textrender.rst:135
msgid ":ref:`int<api_int>`  **TextRender::fontSize** () const"
msgstr ""

#: ../../reference/textrender.rst:137
msgid "Returns the size of the font."
msgstr ""

#: ../../reference/textrender.rst:139
msgid "**See also** setFontSize()."
msgstr ""

#: ../../reference/textrender.rst:145
msgid ":ref:`bool<api_bool>`  **TextRender::kerning** () const"
msgstr ""

#: ../../reference/textrender.rst:147
msgid "Returns true if glyph kerning enabled; otherwise returns false."
msgstr ""

#: ../../reference/textrender.rst:149
msgid "**See also** setKerning()."
msgstr ""

#: ../../reference/textrender.rst:155
msgid ":ref:`Material<api_Material>` * **TextRender::material** () const"
msgstr ""

#: ../../reference/textrender.rst:157
msgid "Returns an instantiated Material assigned to TextRender."
msgstr ""

#: ../../reference/textrender.rst:165
msgid ""
":ref:`const MetaMethod::Table<api_const MetaMethod::Table>` * **TextRender::"
"methods** ()"
msgstr ""

#: ../../reference/textrender.rst:171
msgid ""
":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` * "
"**TextRender::properties** ()"
msgstr ""

#: ../../reference/textrender.rst:177
msgid ""
":ref:`void<api_void>`  **TextRender::setAlign** (:ref:`int<api_int>`  "
"*alignment*)"
msgstr ""

#: ../../reference/textrender.rst:179
msgid "Sets text *alignment* policy."
msgstr ""

#: ../../reference/textrender.rst:181
msgid "**See also** align()."
msgstr ""

#: ../../reference/textrender.rst:187
msgid ""
":ref:`void<api_void>`  **TextRender::setBoundaries** (:ref:"
"`Vector2<api_Vector2>` & *boundaries*)"
msgstr ""

#: ../../reference/textrender.rst:189
msgid ""
"Changes the *boundaries* of the text area. This parameter is involved in "
"Word Wrap calculations."
msgstr ""

#: ../../reference/textrender.rst:191
msgid "**See also** *boundaries*()."
msgstr ""

#: ../../reference/textrender.rst:197
msgid ""
":ref:`void<api_void>`  **TextRender::setColor** (:ref:`Vector4<api_Vector4>` "
"& *color*)"
msgstr ""

#: ../../reference/textrender.rst:199
msgid "Changes the *color* of the text to be drawn."
msgstr ""

#: ../../reference/textrender.rst:207
msgid ""
":ref:`void<api_void>`  **TextRender::setFont** (:ref:`Font<api_Font>` * "
"*font*)"
msgstr ""

#: ../../reference/textrender.rst:209
msgid "Changes the *font* which will be used to draw a text."
msgstr ""

#: ../../reference/textrender.rst:211
msgid "**See also** *font*()."
msgstr ""

#: ../../reference/textrender.rst:217
msgid ""
":ref:`void<api_void>`  **TextRender::setFontSize** (:ref:`int<api_int>`  "
"*size*)"
msgstr ""

#: ../../reference/textrender.rst:219
msgid "Changes the *size* of the font."
msgstr ""

#: ../../reference/textrender.rst:221
msgid "**See also** fontSize()."
msgstr ""

#: ../../reference/textrender.rst:227
msgid ""
":ref:`void<api_void>`  **TextRender::setKerning** (:ref:`bool<api_bool>`  "
"*kerning*)"
msgstr ""

#: ../../reference/textrender.rst:229
msgid "Set true to enable glyph *kerning* and false to disable."
msgstr ""

#: ../../reference/textrender.rst:231
msgid ""
"**Note:** Glyph *kerning* functionality depends on fonts which you are "
"using. In case of font doesn't support *kerning*, you will not see the "
"difference."
msgstr ""

#: ../../reference/textrender.rst:233
msgid "**See also** *kerning*()."
msgstr ""

#: ../../reference/textrender.rst:239
msgid ""
":ref:`void<api_void>`  **TextRender::setMaterial** (:ref:"
"`Material<api_Material>` * *material*)"
msgstr ""

#: ../../reference/textrender.rst:249
msgid ""
":ref:`void<api_void>`  **TextRender::setText** (:ref:`int<api_int>` & *text*)"
msgstr ""

#: ../../reference/textrender.rst:251
msgid "Changes the *text* which will be drawn."
msgstr ""

#: ../../reference/textrender.rst:253
msgid "**See also** *text*()."
msgstr ""

#: ../../reference/textrender.rst:259
msgid ""
":ref:`void<api_void>`  **TextRender::setWrap** (:ref:`bool<api_bool>`  "
"*wrap*)"
msgstr ""

#: ../../reference/textrender.rst:261
msgid ""
"Sets the word *wrap* policy. Set true to enable word *wrap* and false to "
"disable."
msgstr ""

#: ../../reference/textrender.rst:263
msgid "**See also** *wrap*()."
msgstr ""

#: ../../reference/textrender.rst:269
msgid ":ref:`int<api_int>`  **TextRender::text** () const"
msgstr ""

#: ../../reference/textrender.rst:271
msgid "Returns the text which will be drawn."
msgstr ""

#: ../../reference/textrender.rst:273
msgid "**See also** setText()."
msgstr ""

#: ../../reference/textrender.rst:279
msgid ":ref:`bool<api_bool>`  **TextRender::wrap** () const"
msgstr ""

#: ../../reference/textrender.rst:281
msgid "Returns true if word wrap enabled; otherwise returns false."
msgstr ""

#: ../../reference/textrender.rst:283 ../../reference/texture.rst:273
msgid "**See also** setWrap()."
msgstr ""

#: ../../reference/timer.rst:3
msgid "Timer Class"
msgstr ""

#: ../../reference/timer.rst:11
msgid "The interface to get time information from Thunder Engine."
msgstr ""

#: ../../reference/timer.rst:13
msgid ""
"The Timer class helps to make your game more smooth and accurate. This class "
"is used in all systems which doing any animation Using deltaTime() method "
"developers are able to calculate a logic based on delays for example shots "
"or movements of your character. Time scale value can be used for the slow-"
"motion effects because it applied for all deltaTime() values."
msgstr ""

#: ../../reference/timer.rst:28
msgid ":ref:`deltaTime<api_Timer_deltaTime>` ()"
msgstr ""

#: ../../reference/timer.rst:30
msgid ":ref:`init<api_Timer_init>` ()"
msgstr ""

#: ../../reference/timer.rst:32
msgid ":ref:`reset<api_Timer_reset>` ()"
msgstr ""

#: ../../reference/timer.rst:34
msgid ":ref:`scale<api_Timer_scale>` ()"
msgstr ""

#: ../../reference/timer.rst:36
msgid ":ref:`setScale<api_Timer_setScale>` (float  scale)"
msgstr ""

#: ../../reference/timer.rst:38
msgid ":ref:`time<api_Timer_time>` ()"
msgstr ""

#: ../../reference/timer.rst:40
msgid ":ref:`update<api_Timer_update>` ()"
msgstr ""

#: ../../reference/timer.rst:49
msgid ":ref:`float<api_float>`  **Timer::deltaTime** ()"
msgstr ""

#: ../../reference/timer.rst:51
msgid "Returns the time in seconds since the last frame."
msgstr ""

#: ../../reference/timer.rst:53 ../../reference/timer.rst:103
msgid ""
"**Note:** This value is updated in each frame. In case of calling multiple "
"times in a single frame will return the same result."
msgstr ""

#: ../../reference/timer.rst:59
msgid ":ref:`void<api_void>`  **Timer::init** ()"
msgstr ""

#: ../../reference/timer.rst:61
msgid "Initialize the Timer module."
msgstr ""

#: ../../reference/timer.rst:63
msgid "**Note:** This method calls internally and must not be called manually."
msgstr ""

#: ../../reference/timer.rst:69
msgid ":ref:`void<api_void>`  **Timer::reset** ()"
msgstr ""

#: ../../reference/timer.rst:71
msgid "Resets all Timer related variables."
msgstr ""

#: ../../reference/timer.rst:79
msgid ":ref:`float<api_float>`  **Timer::scale** ()"
msgstr ""

#: ../../reference/timer.rst:81
msgid "Return the time scale at which the time is passing."
msgstr ""

#: ../../reference/timer.rst:83 ../../reference/transform.rst:145
msgid "**See also** setScale()."
msgstr ""

#: ../../reference/timer.rst:89
msgid ""
":ref:`void<api_void>`  **Timer::setScale** (:ref:`float<api_float>`  *scale*)"
msgstr ""

#: ../../reference/timer.rst:91
msgid "Sets the time *scale* at which the time is passing."
msgstr ""

#: ../../reference/timer.rst:93 ../../reference/transform.rst:195
msgid "**See also** *scale*()."
msgstr ""

#: ../../reference/timer.rst:99
msgid ":ref:`float<api_float>`  **Timer::time** ()"
msgstr ""

#: ../../reference/timer.rst:101
msgid "Returns the time in seconds since the start of the game."
msgstr ""

#: ../../reference/timer.rst:109
msgid ":ref:`void<api_void>`  **Timer::update** ()"
msgstr ""

#: ../../reference/timer.rst:111
msgid "Updates all Timer related variables."
msgstr ""

#: ../../reference/transform.rst:3
msgid "Transform Class"
msgstr ""

#: ../../reference/transform.rst:11
msgid "Position, rotation and scale of an Actor."
msgstr ""

#: ../../reference/transform.rst:13
msgid ""
"Every Actor in a Scene has a Transform. It's used to store and manipulate "
"the position, rotation and scale of the object. Every Transform can have a "
"parent, which allows you to apply position, rotation and scale "
"hierarchically."
msgstr ""

#: ../../reference/transform.rst:22
msgid ":ref:`Transform<api_Transform_Transform>` ()"
msgstr ""

#: ../../reference/transform.rst:24
msgid ":ref:`~Transform<api_Transform_~Transform>` ()"
msgstr ""

#: ../../reference/transform.rst:26 ../../reference/transform.rst:30
#: ../../reference/transform.rst:34 ../../reference/transform.rst:46
#: ../../reference/transform.rst:48 ../../reference/transform.rst:52
#: ../../reference/matrix3.rst:26 ../../reference/matrix3.rst:46
#: ../../reference/matrix4.rst:32 ../../reference/matrix4.rst:56
#: ../../reference/quaternion.rst:30 ../../reference/quaternion.rst:42
#: ../../reference/vector3.rst:36 ../../reference/vector3.rst:38
#: ../../reference/vector3.rst:50 ../../reference/vector3.rst:52
#: ../../reference/vector3.rst:56 ../../reference/vector3.rst:60
#: ../../reference/vector3.rst:62 ../../reference/vector3.rst:66
msgid ":ref:`Vector3<api_Vector3>`"
msgstr ""

#: ../../reference/transform.rst:26
msgid ":ref:`euler<api_Transform_euler>` () const"
msgstr ""

#: ../../reference/transform.rst:28
msgid ":ref:`parentTransform<api_Transform_parentTransform>` () const"
msgstr ""

#: ../../reference/transform.rst:30
msgid ":ref:`position<api_Transform_position>` () const"
msgstr ""

#: ../../reference/transform.rst:32 ../../reference/transform.rst:50
#: ../../reference/quaternion.rst:32 ../../reference/quaternion.rst:40
msgid ":ref:`Quaternion<api_Quaternion>`"
msgstr ""

#: ../../reference/transform.rst:32
msgid ":ref:`rotation<api_Transform_rotation>` () const"
msgstr ""

#: ../../reference/transform.rst:34
msgid ":ref:`scale<api_Transform_scale>` () const"
msgstr ""

#: ../../reference/transform.rst:36
msgid ":ref:`setEuler<api_Transform_setEuler>` (const Vector3 & angles)"
msgstr ""

#: ../../reference/transform.rst:38
msgid ""
":ref:`setParentTransform<api_Transform_setParentTransform>` (Transform * "
"parent, bool  force = false)"
msgstr ""

#: ../../reference/transform.rst:40
msgid ""
":ref:`setPosition<api_Transform_setPosition>` (const Vector3 & position)"
msgstr ""

#: ../../reference/transform.rst:42
msgid ""
":ref:`setRotation<api_Transform_setRotation>` (const Quaternion & rotation)"
msgstr ""

#: ../../reference/transform.rst:44
msgid ":ref:`setScale<api_Transform_setScale>` (const Vector3 & scale)"
msgstr ""

#: ../../reference/transform.rst:46
msgid ":ref:`worldEuler<api_Transform_worldEuler>` () const"
msgstr ""

#: ../../reference/transform.rst:48
msgid ":ref:`worldPosition<api_Transform_worldPosition>` () const"
msgstr ""

#: ../../reference/transform.rst:50
msgid ":ref:`worldRotation<api_Transform_worldRotation>` () const"
msgstr ""

#: ../../reference/transform.rst:52
msgid ":ref:`worldScale<api_Transform_worldScale>` () const"
msgstr ""

#: ../../reference/transform.rst:54 ../../reference/matrix4.rst:64
#: ../../reference/matrix4.rst:66 ../../reference/matrix4.rst:70
#: ../../reference/matrix4.rst:74
msgid ":ref:`Matrix4<api_Matrix4>` &"
msgstr ""

#: ../../reference/transform.rst:54
msgid ":ref:`worldTransform<api_Transform_worldTransform>` ()"
msgstr ""

#: ../../reference/transform.rst:62
msgid ":ref:`methods<api_Transform_methods>` ()"
msgstr ""

#: ../../reference/transform.rst:64
msgid ":ref:`properties<api_Transform_properties>` ()"
msgstr ""

#: ../../reference/transform.rst:73
msgid "**Transform::Transform** ()"
msgstr ""

#: ../../reference/transform.rst:75
msgid "Default constructs an instance of Transform."
msgstr ""

#: ../../reference/transform.rst:81
msgid "**Transform::~Transform** ()"
msgstr ""

#: ../../reference/transform.rst:83
msgid "Destroys the instance of Transform. The destructor is virtual."
msgstr ""

#: ../../reference/transform.rst:89
msgid ":ref:`Vector3<api_Vector3>`  **Transform::euler** () const"
msgstr ""

#: ../../reference/transform.rst:91
msgid ""
"Returns current rotation of the Transform in local space as Euler angles in "
"degrees."
msgstr ""

#: ../../reference/transform.rst:93
msgid "**See also** setEuler()."
msgstr ""

#: ../../reference/transform.rst:99
msgid ""
":ref:`const MetaMethod::Table<api_const MetaMethod::Table>` * **Transform::"
"methods** ()"
msgstr ""

#: ../../reference/transform.rst:105
msgid ""
":ref:`Transform<api_Transform>` * **Transform::parentTransform** () const"
msgstr ""

#: ../../reference/transform.rst:107
msgid "Returns parent of the transform."
msgstr ""

#: ../../reference/transform.rst:109
msgid "**See also** setParentTransform()."
msgstr ""

#: ../../reference/transform.rst:115
msgid ":ref:`Vector3<api_Vector3>`  **Transform::position** () const"
msgstr ""

#: ../../reference/transform.rst:117
msgid "Returns current position of the Transform in local space."
msgstr ""

#: ../../reference/transform.rst:125
msgid ""
":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` * "
"**Transform::properties** ()"
msgstr ""

#: ../../reference/transform.rst:131
msgid ":ref:`Quaternion<api_Quaternion>`  **Transform::rotation** () const"
msgstr ""

#: ../../reference/transform.rst:133
msgid "Returns current rotation of the Transform in local space as Quaternion."
msgstr ""

#: ../../reference/transform.rst:135
msgid "**See also** setRotation()."
msgstr ""

#: ../../reference/transform.rst:141
msgid ":ref:`Vector3<api_Vector3>`  **Transform::scale** () const"
msgstr ""

#: ../../reference/transform.rst:143
msgid "Returns current scale of the Transform in local space."
msgstr ""

#: ../../reference/transform.rst:151
msgid ""
":ref:`void<api_void>`  **Transform::setEuler** (:ref:`Vector3<api_Vector3>` "
"& *angles*)"
msgstr ""

#: ../../reference/transform.rst:153
msgid ""
"Changes the rotation of the Transform in local space by provided Euler "
"*angles* in degrees."
msgstr ""

#: ../../reference/transform.rst:155
msgid "**See also** euler()."
msgstr ""

#: ../../reference/transform.rst:161
msgid ""
":ref:`void<api_void>`  **Transform::setParentTransform** (:ref:"
"`Transform<api_Transform>` * *parent*, :ref:`bool<api_bool>`  *force* = "
"false)"
msgstr ""

#: ../../reference/transform.rst:163
msgid ""
"Changing the *parent* will modify the *parent*-relative position, scale and "
"rotation but keep the world space position, rotation and scale the same. In "
"case of *force* flag provided as true, no recalculations of transform happen."
msgstr ""

#: ../../reference/transform.rst:165
msgid "**See also** *parent*Transform()."
msgstr ""

#: ../../reference/transform.rst:171
msgid ""
":ref:`void<api_void>`  **Transform::setPosition** (:ref:"
"`Vector3<api_Vector3>` & *position*)"
msgstr ""

#: ../../reference/transform.rst:173
msgid "Changes *position* of the Transform in local space."
msgstr ""

#: ../../reference/transform.rst:181
msgid ""
":ref:`void<api_void>`  **Transform::setRotation** (:ref:"
"`Quaternion<api_Quaternion>` & *rotation*)"
msgstr ""

#: ../../reference/transform.rst:183
msgid ""
"Changes the *rotation* of the Transform in local space by provided "
"Quaternion."
msgstr ""

#: ../../reference/transform.rst:185
msgid "**See also** *rotation*()."
msgstr ""

#: ../../reference/transform.rst:191
msgid ""
":ref:`void<api_void>`  **Transform::setScale** (:ref:`Vector3<api_Vector3>` "
"& *scale*)"
msgstr ""

#: ../../reference/transform.rst:193
msgid "Changes the *scale* of the Transform in local space."
msgstr ""

#: ../../reference/transform.rst:201
msgid ":ref:`Vector3<api_Vector3>`  **Transform::worldEuler** () const"
msgstr ""

#: ../../reference/transform.rst:203
msgid ""
"Returns current rotation of the transform in world space as Euler angles in "
"degrees."
msgstr ""

#: ../../reference/transform.rst:209
msgid ":ref:`Vector3<api_Vector3>`  **Transform::worldPosition** () const"
msgstr ""

#: ../../reference/transform.rst:211
msgid "Returns current position of the transform in world space."
msgstr ""

#: ../../reference/transform.rst:217
msgid ""
":ref:`Quaternion<api_Quaternion>`  **Transform::worldRotation** () const"
msgstr ""

#: ../../reference/transform.rst:219
msgid "Returns current rotation of the transform in world space as Quaternion."
msgstr ""

#: ../../reference/transform.rst:225
msgid ":ref:`Vector3<api_Vector3>`  **Transform::worldScale** () const"
msgstr ""

#: ../../reference/transform.rst:227
msgid "Returns current scale of the transform in world space."
msgstr ""

#: ../../reference/transform.rst:233
msgid ":ref:`Matrix4<api_Matrix4>` & **Transform::worldTransform** ()"
msgstr ""

#: ../../reference/transform.rst:235
msgid "Returns current transform matrix in world space."
msgstr ""

#: ../../reference/math-module.rst:4
msgid "Math Module"
msgstr ""

#: ../../reference/aabbox.rst:3
msgid "AABBox Class"
msgstr ""

#: ../../reference/aabbox.rst:11
msgid "The AABBox class represents a Axis Aligned Bounding Box in 3D space."
msgstr ""

#: ../../reference/aabbox.rst:13
msgid ""
"Bounded volume in space in the form of a rectangular parallelepiped, with a "
"period parallel to the coordinate axes in the world system. When the object "
"rotates, the AABB changes its dimensions, but it always remains oriented "
"along the coordinate axes. Axis Aligned Bounding Box represented by center "
"of box and extent."
msgstr ""

#: ../../reference/aabbox.rst:22
msgid ":ref:`AABBox<api_AABBox_AABBox>` ()"
msgstr ""

#: ../../reference/aabbox.rst:24
msgid ""
":ref:`AABBox<api_AABBox_AABBox>` (const Vector3 & center, const Vector3 & "
"extent)"
msgstr ""

#: ../../reference/aabbox.rst:26
msgid ":ref:`box<api_AABBox_box>` (Vector3 & min, Vector3 & max) const"
msgstr ""

#: ../../reference/aabbox.rst:28
msgid ":ref:`encapsulate<api_AABBox_encapsulate>` (const Vector3 & point)"
msgstr ""

#: ../../reference/aabbox.rst:30
msgid ":ref:`encapsulate<api_AABBox_encapsulate>` (const AABBox & box)"
msgstr ""

#: ../../reference/aabbox.rst:32
msgid ""
":ref:`intersect<api_AABBox_intersect>` (const Vector3 & position, areal  "
"radius) const"
msgstr ""

#: ../../reference/aabbox.rst:34
msgid ""
":ref:`intersect<api_AABBox_intersect>` (const Plane * planes, areal  count) "
"const"
msgstr ""

#: ../../reference/aabbox.rst:36
msgid ""
":ref:`setBox<api_AABBox_setBox>` (const Vector3 & min, const Vector3 & max)"
msgstr ""

#: ../../reference/aabbox.rst:38
msgid ":ref:`setBox<api_AABBox_setBox>` (const Vector3 * points, int  number)"
msgstr ""

#: ../../reference/aabbox.rst:40 ../../reference/aabbox.rst:42
#: ../../reference/aabbox.rst:44
msgid ":ref:`const AABBox<api_const AABBox>`"
msgstr ""

#: ../../reference/aabbox.rst:40
msgid ":ref:`operator*<api_AABBox_operator*>` (areal  factor) const"
msgstr ""

#: ../../reference/aabbox.rst:42
msgid ":ref:`operator*<api_AABBox_operator*>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/aabbox.rst:44
msgid ":ref:`operator*<api_AABBox_operator*>` (const Matrix4 & matrix) const"
msgstr ""

#: ../../reference/aabbox.rst:59
msgid "**AABBox::AABBox** ()"
msgstr ""

#: ../../reference/aabbox.rst:61
msgid ""
"Constructs an bounding box with center (0, 0, 0) and extent (0.5, 0.5, 0.5)."
msgstr ""

#: ../../reference/aabbox.rst:67
msgid ""
"**AABBox::AABBox** (:ref:`Vector3<api_Vector3>` & *center*, :ref:"
"`Vector3<api_Vector3>` & *extent*)"
msgstr ""

#: ../../reference/aabbox.rst:69
msgid "Constructs a bounding box with *center* and *extent*."
msgstr ""

#: ../../reference/aabbox.rst:75
msgid ""
":ref:`void<api_void>`  **AABBox::box** (:ref:`Vector3<api_Vector3>` & "
"*min*, :ref:`Vector3<api_Vector3>` & *max*) const"
msgstr ""

#: ../../reference/aabbox.rst:77 ../../reference/obbox.rst:75
msgid "Returns *min* and *max* points of bounding box as output arguments."
msgstr ""

#: ../../reference/aabbox.rst:79 ../../reference/obbox.rst:77
msgid "**See also** setBox()."
msgstr ""

#: ../../reference/aabbox.rst:85
msgid ""
":ref:`void<api_void>`  **AABBox::encapsulate** (:ref:`Vector3<api_Vector3>` "
"& *point*)"
msgstr ""

#: ../../reference/aabbox.rst:87
msgid "Grows the AABBox to include the *point*."
msgstr ""

#: ../../reference/aabbox.rst:93
msgid ""
":ref:`void<api_void>`  **AABBox::encapsulate** (:ref:`AABBox<api_AABBox>` & "
"*box*)"
msgstr ""

#: ../../reference/aabbox.rst:95
msgid "Grow the AABBox to encapsulate the *box*."
msgstr ""

#: ../../reference/aabbox.rst:101
msgid ""
":ref:`bool<api_bool>`  **AABBox::intersect** (:ref:`Vector3<api_Vector3>` & "
"*position*, :ref:`areal<api_areal>`  *radius*) const"
msgstr ""

#: ../../reference/aabbox.rst:103
msgid ""
"Returns true if this bounding box intersects the given sphere at *position* "
"and *radius*; otherwise returns false."
msgstr ""

#: ../../reference/aabbox.rst:109
msgid ""
":ref:`bool<api_bool>`  **AABBox::intersect** (:ref:`Plane<api_Plane>` * "
"*planes*, :ref:`areal<api_areal>`  *count*) const"
msgstr ""

#: ../../reference/aabbox.rst:111
msgid ""
"Returns true if this bounding box intersects the given *count* of *planes*; "
"otherwise returns false."
msgstr ""

#: ../../reference/aabbox.rst:117
msgid ""
":ref:`void<api_void>`  **AABBox::setBox** (:ref:`Vector3<api_Vector3>` & "
"*min*, :ref:`Vector3<api_Vector3>` & *max*)"
msgstr ""

#: ../../reference/aabbox.rst:119
msgid "Set current bounding box by *min* and *max* points."
msgstr ""

#: ../../reference/aabbox.rst:121 ../../reference/obbox.rst:87
msgid "**See also** box()."
msgstr ""

#: ../../reference/aabbox.rst:127
msgid ""
":ref:`void<api_void>`  **AABBox::setBox** (:ref:`Vector3<api_Vector3>` * "
"*points*, :ref:`int<api_int>`  *number*)"
msgstr ""

#: ../../reference/aabbox.rst:129
msgid ""
"Set curent bounding box by provided array of *points* and *number* of them."
msgstr ""

#: ../../reference/aabbox.rst:135
msgid ""
":ref:`const AABBox<api_const AABBox>`  **AABBox::operator*** (:ref:"
"`areal<api_areal>`  *factor*) const"
msgstr ""

#: ../../reference/aabbox.rst:137
msgid "Returns a copy of this box, multiplied by the given *factor*."
msgstr ""

#: ../../reference/aabbox.rst:143
msgid ""
":ref:`const AABBox<api_const AABBox>`  **AABBox::operator*** (:ref:"
"`Vector3<api_Vector3>` & *vector*) const"
msgstr ""

#: ../../reference/aabbox.rst:145
msgid "Returns a copy of this box, multiplied by the given *vector*."
msgstr ""

#: ../../reference/aabbox.rst:151
msgid ""
":ref:`const AABBox<api_const AABBox>`  **AABBox::operator*** (:ref:"
"`Matrix4<api_Matrix4>` & *matrix*) const"
msgstr ""

#: ../../reference/aabbox.rst:153
msgid "Returns a copy of this box, multiplied by the given *matrix*."
msgstr ""

#: ../../reference/matrix3.rst:3
msgid "Matrix3 Class"
msgstr ""

#: ../../reference/matrix3.rst:11
msgid "The Matrix3 class represents a 3x3 rotation matrix in 3D space."
msgstr ""

#: ../../reference/matrix3.rst:13 ../../reference/matrix4.rst:13
msgid ""
"Internally the data is stored as column-major format, so as to be optimal "
"for passing to OpenGL functions, which expect column-major data."
msgstr ""

#: ../../reference/matrix3.rst:22
msgid ":ref:`Matrix3<api_Matrix3_Matrix3>` ()"
msgstr ""

#: ../../reference/matrix3.rst:24 ../../reference/matrix3.rst:70
#: ../../reference/matrix4.rst:28 ../../reference/matrix4.rst:80
#: ../../reference/plane.rst:26 ../../reference/quaternion.rst:48
#: ../../reference/vector2.rst:32 ../../reference/vector2.rst:34
#: ../../reference/vector2.rst:36 ../../reference/vector2.rst:38
#: ../../reference/vector2.rst:40 ../../reference/vector2.rst:72
#: ../../reference/vector3.rst:40 ../../reference/vector3.rst:42
#: ../../reference/vector3.rst:44 ../../reference/vector3.rst:46
#: ../../reference/vector3.rst:78 ../../reference/vector4.rst:36
#: ../../reference/vector4.rst:38 ../../reference/vector4.rst:40
#: ../../reference/vector4.rst:42 ../../reference/vector4.rst:74
msgid ":ref:`areal<api_areal>`"
msgstr ""

#: ../../reference/matrix3.rst:24
msgid ":ref:`determinant<api_Matrix3_determinant>` () const"
msgstr ""

#: ../../reference/matrix3.rst:26
msgid ":ref:`euler<api_Matrix3_euler>` ()"
msgstr ""

#: ../../reference/matrix3.rst:28
msgid ":ref:`identity<api_Matrix3_identity>` ()"
msgstr ""

#: ../../reference/matrix3.rst:30 ../../reference/matrix3.rst:40
#: ../../reference/matrix3.rst:50 ../../reference/matrix3.rst:52
#: ../../reference/matrix3.rst:58 ../../reference/matrix3.rst:62
#: ../../reference/matrix4.rst:44 ../../reference/quaternion.rst:36
msgid ":ref:`Matrix3<api_Matrix3>`"
msgstr ""

#: ../../reference/matrix3.rst:30
msgid ":ref:`inverse<api_Matrix3_inverse>` () const"
msgstr ""

#: ../../reference/matrix3.rst:32
msgid ":ref:`orthonormalize<api_Matrix3_orthonormalize>` ()"
msgstr ""

#: ../../reference/matrix3.rst:34
msgid ":ref:`rotate<api_Matrix3_rotate>` (const Vector3 & axis, areal  angle)"
msgstr ""

#: ../../reference/matrix3.rst:36
msgid ":ref:`rotate<api_Matrix3_rotate>` (const Vector3 & angles)"
msgstr ""

#: ../../reference/matrix3.rst:38
msgid ":ref:`scale<api_Matrix3_scale>` (const Vector3 & vector)"
msgstr ""

#: ../../reference/matrix3.rst:40
msgid ":ref:`transpose<api_Matrix3_transpose>` () const"
msgstr ""

#: ../../reference/matrix3.rst:42
msgid ":ref:`zero<api_Matrix3_zero>` ()"
msgstr ""

#: ../../reference/matrix3.rst:44
msgid ""
":ref:`operator!=<api_Matrix3_operator!=>` (const Matrix3 & matrix) const"
msgstr ""

#: ../../reference/matrix3.rst:46
msgid ":ref:`operator*<api_Matrix3_operator*>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/matrix3.rst:48
msgid ":ref:`operator*<api_Matrix3_operator*>` (const Vector4 & vector) const"
msgstr ""

#: ../../reference/matrix3.rst:50
msgid ":ref:`operator*<api_Matrix3_operator*>` (areal  factor) const"
msgstr ""

#: ../../reference/matrix3.rst:52
msgid ":ref:`operator*<api_Matrix3_operator*>` (const Matrix3 & matrix) const"
msgstr ""

#: ../../reference/matrix3.rst:54 ../../reference/matrix3.rst:56
#: ../../reference/matrix3.rst:60 ../../reference/matrix3.rst:64
msgid ":ref:`Matrix3<api_Matrix3>` &"
msgstr ""

#: ../../reference/matrix3.rst:54
msgid ":ref:`operator*=<api_Matrix3_operator*=>` (areal  factor)"
msgstr ""

#: ../../reference/matrix3.rst:56
msgid ":ref:`operator*=<api_Matrix3_operator*=>` (const Matrix3 & matrix)"
msgstr ""

#: ../../reference/matrix3.rst:58
msgid ":ref:`operator+<api_Matrix3_operator+>` (const Matrix3 & matrix) const"
msgstr ""

#: ../../reference/matrix3.rst:60
msgid ":ref:`operator+=<api_Matrix3_operator+=>` (const Matrix3 & matrix)"
msgstr ""

#: ../../reference/matrix3.rst:62
msgid ":ref:`operator-<api_Matrix3_operator->` (const Matrix3 & matrix) const"
msgstr ""

#: ../../reference/matrix3.rst:64
msgid ":ref:`operator-=<api_Matrix3_operator-=>` (const Matrix3 & matrix)"
msgstr ""

#: ../../reference/matrix3.rst:66
msgid ""
":ref:`operator==<api_Matrix3_operator==>` (const Matrix3 & matrix) const"
msgstr ""

#: ../../reference/matrix3.rst:68 ../../reference/matrix4.rst:78
#: ../../reference/quaternion.rst:46 ../../reference/vector2.rst:70
#: ../../reference/vector3.rst:76 ../../reference/vector4.rst:72
msgid ":ref:`areal<api_areal>` &"
msgstr ""

#: ../../reference/matrix3.rst:68
msgid ":ref:`operator[]<api_Matrix3_operator[]>` (int  i)"
msgstr ""

#: ../../reference/matrix3.rst:70
msgid ":ref:`operator[]<api_Matrix3_operator[]>` (int  i) const"
msgstr ""

#: ../../reference/matrix3.rst:85
msgid "**Matrix3::Matrix3** ()"
msgstr ""

#: ../../reference/matrix3.rst:87
msgid "Constructs a identity matrix."
msgstr ""

#: ../../reference/matrix3.rst:93
msgid ":ref:`areal<api_areal>`  **Matrix3::determinant** () const"
msgstr ""

#: ../../reference/matrix3.rst:95 ../../reference/matrix4.rst:127
msgid "Returns the matrix determinant."
msgstr ""

#: ../../reference/matrix3.rst:101
msgid ":ref:`Vector3<api_Vector3>`  **Matrix3::euler** ()"
msgstr ""

#: ../../reference/matrix3.rst:103 ../../reference/matrix4.rst:143
msgid ""
"Returns an Euler angles represented by Vector3(pitch, yaw, roll) in rotation "
"degrees."
msgstr ""

#: ../../reference/matrix3.rst:109
msgid ":ref:`void<api_void>`  **Matrix3::identity** ()"
msgstr ""

#: ../../reference/matrix3.rst:111 ../../reference/matrix4.rst:151
msgid "Resets this matrix to an identity matrix."
msgstr ""

#: ../../reference/matrix3.rst:117
msgid ":ref:`Matrix3<api_Matrix3>`  **Matrix3::inverse** () const"
msgstr ""

#: ../../reference/matrix3.rst:119 ../../reference/matrix4.rst:159
msgid "Returns an inverted copy of this matrix."
msgstr ""

#: ../../reference/matrix3.rst:125
msgid ":ref:`void<api_void>`  **Matrix3::orthonormalize** ()"
msgstr ""

#: ../../reference/matrix3.rst:127
msgid "Orthonormalize this matrix."
msgstr ""

#: ../../reference/matrix3.rst:133
msgid ""
":ref:`void<api_void>`  **Matrix3::rotate** (:ref:`Vector3<api_Vector3>` & "
"*axis*, :ref:`areal<api_areal>`  *angle*)"
msgstr ""

#: ../../reference/matrix3.rst:135
msgid "Rotate this matrix around *axis* to *angle* in rotation degrees."
msgstr ""

#: ../../reference/matrix3.rst:141
msgid ""
":ref:`void<api_void>`  **Matrix3::rotate** (:ref:`Vector3<api_Vector3>` & "
"*angles*)"
msgstr ""

#: ../../reference/matrix3.rst:143
msgid ""
"Rotate this matrix with Euler *angles* represented by Vector3(pitch, yaw, "
"roll) in rotation degrees."
msgstr ""

#: ../../reference/matrix3.rst:149
msgid ""
":ref:`void<api_void>`  **Matrix3::scale** (:ref:`Vector3<api_Vector3>` & "
"*vector*)"
msgstr ""

#: ../../reference/matrix3.rst:151 ../../reference/matrix4.rst:223
msgid "Scales the coordinate system by *vector*."
msgstr ""

#: ../../reference/matrix3.rst:157
msgid ":ref:`Matrix3<api_Matrix3>`  **Matrix3::transpose** () const"
msgstr ""

#: ../../reference/matrix3.rst:159 ../../reference/matrix4.rst:239
msgid "Returns this matrix, transposed about its diagonal."
msgstr ""

#: ../../reference/matrix3.rst:165
msgid ":ref:`void<api_void>`  **Matrix3::zero** ()"
msgstr ""

#: ../../reference/matrix3.rst:167 ../../reference/matrix4.rst:247
msgid "Clear this matrix, with 0.0 value for all components."
msgstr ""

#: ../../reference/matrix3.rst:173
msgid ""
":ref:`bool<api_bool>`  **Matrix3::operator!=** (:ref:`Matrix3<api_Matrix3>` "
"& *matrix*) const"
msgstr ""

#: ../../reference/matrix3.rst:175 ../../reference/matrix4.rst:255
msgid ""
"Returns true if this *matrix* is NOT equal to given *matrix*; otherwise "
"returns false. This operator uses an exact floating-point comparison."
msgstr ""

#: ../../reference/matrix3.rst:181
msgid ""
":ref:`Vector3<api_Vector3>`  **Matrix3::operator*** (:ref:"
"`Vector3<api_Vector3>` & *vector*) const"
msgstr ""

#: ../../reference/matrix3.rst:183 ../../reference/matrix4.rst:263
msgid ""
"Returns the result of multiplying this matrix and the given 3D *vector*."
msgstr ""

#: ../../reference/matrix3.rst:189
msgid ""
":ref:`Vector4<api_Vector4>`  **Matrix3::operator*** (:ref:"
"`Vector4<api_Vector4>` & *vector*) const"
msgstr ""

#: ../../reference/matrix3.rst:191 ../../reference/matrix4.rst:271
msgid ""
"Returns the result of multiplying this matrix and the given 4D *vector*."
msgstr ""

#: ../../reference/matrix3.rst:197
msgid ""
":ref:`Matrix3<api_Matrix3>`  **Matrix3::operator*** (:ref:"
"`areal<api_areal>`  *factor*) const"
msgstr ""

#: ../../reference/matrix3.rst:199 ../../reference/matrix4.rst:279
msgid "Returns the result of multiplying this matrix and the given *factor*."
msgstr ""

#: ../../reference/matrix3.rst:205
msgid ""
":ref:`Matrix3<api_Matrix3>`  **Matrix3::operator*** (:ref:"
"`Matrix3<api_Matrix3>` & *matrix*) const"
msgstr ""

#: ../../reference/matrix3.rst:207 ../../reference/matrix3.rst:225
#: ../../reference/matrix4.rst:287 ../../reference/matrix4.rst:305
msgid "Returns the result of multiplying this *matrix* by the given *matrix*."
msgstr ""

#: ../../reference/matrix3.rst:209 ../../reference/matrix4.rst:289
msgid "Note that *matrix* multiplication is not commutative, i.e. a*b != b*a."
msgstr ""

#: ../../reference/matrix3.rst:215
msgid ""
":ref:`Matrix3<api_Matrix3>` & **Matrix3::operator*=** (:ref:"
"`areal<api_areal>`  *factor*)"
msgstr ""

#: ../../reference/matrix3.rst:217 ../../reference/matrix4.rst:297
msgid "Multiplies all elements of this matrix by *factor*."
msgstr ""

#: ../../reference/matrix3.rst:223
msgid ""
":ref:`Matrix3<api_Matrix3>` & **Matrix3::operator*=** (:ref:"
"`Matrix3<api_Matrix3>` & *matrix*)"
msgstr ""

#: ../../reference/matrix3.rst:231
msgid ""
":ref:`Matrix3<api_Matrix3>`  **Matrix3::operator+** (:ref:"
"`Matrix3<api_Matrix3>` & *matrix*) const"
msgstr ""

#: ../../reference/matrix3.rst:233 ../../reference/matrix4.rst:313
msgid "Returns the sum of this *matrix* and the given *matrix*."
msgstr ""

#: ../../reference/matrix3.rst:239
msgid ""
":ref:`Matrix3<api_Matrix3>` & **Matrix3::operator+=** (:ref:"
"`Matrix3<api_Matrix3>` & *matrix*)"
msgstr ""

#: ../../reference/matrix3.rst:241 ../../reference/matrix4.rst:321
msgid "Adds the contents of *matrix* to this *matrix*."
msgstr ""

#: ../../reference/matrix3.rst:247
msgid ""
":ref:`Matrix3<api_Matrix3>`  **Matrix3::operator-** (:ref:"
"`Matrix3<api_Matrix3>` & *matrix*) const"
msgstr ""

#: ../../reference/matrix3.rst:249 ../../reference/matrix4.rst:329
msgid "Returns the difference of this *matrix* and the given *matrix*."
msgstr ""

#: ../../reference/matrix3.rst:255
msgid ""
":ref:`Matrix3<api_Matrix3>` & **Matrix3::operator-=** (:ref:"
"`Matrix3<api_Matrix3>` & *matrix*)"
msgstr ""

#: ../../reference/matrix3.rst:257 ../../reference/matrix4.rst:337
msgid "Subtracts the contents of *matrix* from this *matrix*."
msgstr ""

#: ../../reference/matrix3.rst:263
msgid ""
":ref:`bool<api_bool>`  **Matrix3::operator==** (:ref:`Matrix3<api_Matrix3>` "
"& *matrix*) const"
msgstr ""

#: ../../reference/matrix3.rst:265 ../../reference/matrix4.rst:345
msgid ""
"Returns true if this *matrix* is equal to given *matrix*; otherwise returns "
"false. This operator uses an exact floating-point comparison."
msgstr ""

#: ../../reference/matrix3.rst:271
msgid ""
":ref:`areal<api_areal>` & **Matrix3::operator[]** (:ref:`int<api_int>`  *i*)"
msgstr ""

#: ../../reference/matrix3.rst:273
msgid ""
"Returns the component of the matrix at *i*ndex position *i* as a modifiable "
"reference. *i* must be a valid *i*ndex position *i*n the matrix (i.e., 0 <= "
"*i* < 9). Data *i*s stored as column-major format so this function "
"retrieving data from rows *i*n colmns."
msgstr ""

#: ../../reference/matrix3.rst:279
msgid ""
":ref:`areal<api_areal>`  **Matrix3::operator[]** (:ref:`int<api_int>`  *i*) "
"const"
msgstr ""

#: ../../reference/matrix3.rst:281
msgid ""
"Returns the component of the matrix at *i*ndex position. *i* must be a valid "
"*i*ndex position *i*n the matrix (i.e., 0 <= *i* < 9). Data *i*s stored as "
"column-major format so this function retrieving data from rows *i*n colmns."
msgstr ""

#: ../../reference/matrix4.rst:3
msgid "Matrix4 Class"
msgstr ""

#: ../../reference/matrix4.rst:11
msgid "The Matrix4 class represents a 4x4 transform matrix in 3D space."
msgstr ""

#: ../../reference/matrix4.rst:22
msgid ":ref:`Matrix4<api_Matrix4_Matrix4>` ()"
msgstr ""

#: ../../reference/matrix4.rst:24
msgid ":ref:`Matrix4<api_Matrix4_Matrix4>` (const Matrix3 & matrix)"
msgstr ""

#: ../../reference/matrix4.rst:26
msgid ""
":ref:`Matrix4<api_Matrix4_Matrix4>` (const Vector3 & position, const "
"Quaternion & rotation, const Vector3 & scale)"
msgstr ""

#: ../../reference/matrix4.rst:28
msgid ":ref:`determinant<api_Matrix4_determinant>` () const"
msgstr ""

#: ../../reference/matrix4.rst:30
msgid ""
":ref:`direction<api_Matrix4_direction>` (const Vector3 & direction, const "
"Vector3 & up)"
msgstr ""

#: ../../reference/matrix4.rst:32
msgid ":ref:`euler<api_Matrix4_euler>` ()"
msgstr ""

#: ../../reference/matrix4.rst:34
msgid ":ref:`identity<api_Matrix4_identity>` ()"
msgstr ""

#: ../../reference/matrix4.rst:36
msgid ":ref:`inverse<api_Matrix4_inverse>` () const"
msgstr ""

#: ../../reference/matrix4.rst:38
msgid ":ref:`reflect<api_Matrix4_reflect>` (const Vector4 & plane)"
msgstr ""

#: ../../reference/matrix4.rst:40
msgid ":ref:`rotate<api_Matrix4_rotate>` (const Vector3 & axis, areal  angle)"
msgstr ""

#: ../../reference/matrix4.rst:42
msgid ":ref:`rotate<api_Matrix4_rotate>` (const Vector3 & angles)"
msgstr ""

#: ../../reference/matrix4.rst:44
msgid ":ref:`rotation<api_Matrix4_rotation>` () const"
msgstr ""

#: ../../reference/matrix4.rst:46
msgid ":ref:`scale<api_Matrix4_scale>` (const Vector3 & vector)"
msgstr ""

#: ../../reference/matrix4.rst:48
msgid ":ref:`translate<api_Matrix4_translate>` (const Vector3 & vector)"
msgstr ""

#: ../../reference/matrix4.rst:50
msgid ":ref:`transpose<api_Matrix4_transpose>` () const"
msgstr ""

#: ../../reference/matrix4.rst:52
msgid ":ref:`zero<api_Matrix4_zero>` ()"
msgstr ""

#: ../../reference/matrix4.rst:54
msgid ""
":ref:`operator!=<api_Matrix4_operator!=>` (const Matrix4 & matrix) const"
msgstr ""

#: ../../reference/matrix4.rst:56
msgid ":ref:`operator*<api_Matrix4_operator*>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/matrix4.rst:58
msgid ":ref:`operator*<api_Matrix4_operator*>` (const Vector4 & vector) const"
msgstr ""

#: ../../reference/matrix4.rst:60
msgid ":ref:`operator*<api_Matrix4_operator*>` (areal  factor) const"
msgstr ""

#: ../../reference/matrix4.rst:62
msgid ":ref:`operator*<api_Matrix4_operator*>` (const Matrix4 & matrix) const"
msgstr ""

#: ../../reference/matrix4.rst:64
msgid ":ref:`operator*=<api_Matrix4_operator*=>` (areal  factor)"
msgstr ""

#: ../../reference/matrix4.rst:66
msgid ":ref:`operator*=<api_Matrix4_operator*=>` (const Matrix4 & matrix)"
msgstr ""

#: ../../reference/matrix4.rst:68
msgid ":ref:`operator+<api_Matrix4_operator+>` (const Matrix4 & matrix) const"
msgstr ""

#: ../../reference/matrix4.rst:70
msgid ":ref:`operator+=<api_Matrix4_operator+=>` (const Matrix4 & matrix)"
msgstr ""

#: ../../reference/matrix4.rst:72
msgid ":ref:`operator-<api_Matrix4_operator->` (const Matrix4 & matrix) const"
msgstr ""

#: ../../reference/matrix4.rst:74
msgid ":ref:`operator-=<api_Matrix4_operator-=>` (const Matrix4 & matrix)"
msgstr ""

#: ../../reference/matrix4.rst:76
msgid ""
":ref:`operator==<api_Matrix4_operator==>` (const Matrix4 & matrix) const"
msgstr ""

#: ../../reference/matrix4.rst:78
msgid ":ref:`operator[]<api_Matrix4_operator[]>` (int  i)"
msgstr ""

#: ../../reference/matrix4.rst:80
msgid ":ref:`operator[]<api_Matrix4_operator[]>` (int  i) const"
msgstr ""

#: ../../reference/matrix4.rst:88
msgid ""
":ref:`lookAt<api_Matrix4_lookAt>` (Vector3 & eye, Vector3 & target, Vector3 "
"& up)"
msgstr ""

#: ../../reference/matrix4.rst:90
msgid ""
":ref:`ortho<api_Matrix4_ortho>` (areal  left, areal  right, areal  bottom, "
"areal  top, areal  znear, areal  zfar)"
msgstr ""

#: ../../reference/matrix4.rst:92
msgid ""
":ref:`perspective<api_Matrix4_perspective>` (areal  fov, areal  aspect, "
"areal  znear, areal  zfar)"
msgstr ""

#: ../../reference/matrix4.rst:101
msgid "**Matrix4::Matrix4** ()"
msgstr ""

#: ../../reference/matrix4.rst:103
msgid "Constructs an identity matrix."
msgstr ""

#: ../../reference/matrix4.rst:109
msgid "**Matrix4::Matrix4** (:ref:`Matrix3<api_Matrix3>` & *matrix*)"
msgstr ""

#: ../../reference/matrix4.rst:111
msgid "Constructs a transform *matrix* with rotation *matrix*."
msgstr ""

#: ../../reference/matrix4.rst:117
msgid ""
"**Matrix4::Matrix4** (:ref:`Vector3<api_Vector3>` & *position*, :ref:"
"`Quaternion<api_Quaternion>` & *rotation*, :ref:`Vector3<api_Vector3>` & "
"*scale*)"
msgstr ""

#: ../../reference/matrix4.rst:119
msgid "Constructs matrix by given *position*, *rotation* and *scale*."
msgstr ""

#: ../../reference/matrix4.rst:125
msgid ":ref:`areal<api_areal>`  **Matrix4::determinant** () const"
msgstr ""

#: ../../reference/matrix4.rst:133
msgid ""
":ref:`void<api_void>`  **Matrix4::direction** (:ref:`Vector3<api_Vector3>` & "
"*direction*, :ref:`Vector3<api_Vector3>` & *up*)"
msgstr ""

#: ../../reference/matrix4.rst:135
msgid "Creates a rotation matrix based on *direction* and *up* vectors."
msgstr ""

#: ../../reference/matrix4.rst:141
msgid ":ref:`Vector3<api_Vector3>`  **Matrix4::euler** ()"
msgstr ""

#: ../../reference/matrix4.rst:149
msgid ":ref:`void<api_void>`  **Matrix4::identity** ()"
msgstr ""

#: ../../reference/matrix4.rst:157
msgid ":ref:`Matrix4<api_Matrix4>`  **Matrix4::inverse** () const"
msgstr ""

#: ../../reference/matrix4.rst:165
msgid ""
":ref:`Matrix4<api_Matrix4>`  **Matrix4::lookAt** (:ref:"
"`Vector3<api_Vector3>` & *eye*, :ref:`Vector3<api_Vector3>` & *target*, :ref:"
"`Vector3<api_Vector3>` & *up*)"
msgstr ""

#: ../../reference/matrix4.rst:167
msgid ""
"Creates a transformation matrix that corresponds to a camera viewing the "
"*target* from the source. Receiving *eye* point, a *target* point, and an "
"*up* vector."
msgstr ""

#: ../../reference/matrix4.rst:173
msgid ""
":ref:`Matrix4<api_Matrix4>`  **Matrix4::ortho** (:ref:`areal<api_areal>`  "
"*left*, :ref:`areal<api_areal>`  *right*, :ref:`areal<api_areal>`  "
"*bottom*, :ref:`areal<api_areal>`  *top*, :ref:`areal<api_areal>`  *znear*, :"
"ref:`areal<api_areal>`  *zfar*)"
msgstr ""

#: ../../reference/matrix4.rst:175
msgid ""
"Creates an orthogonal projection matrix. Creates a view showing the area "
"between *left*, *right*, *top* and *bottom*, with *znear* and *zfar* set up "
"the depth clipping planes."
msgstr ""

#: ../../reference/matrix4.rst:181
msgid ""
":ref:`Matrix4<api_Matrix4>`  **Matrix4::perspective** (:ref:"
"`areal<api_areal>`  *fov*, :ref:`areal<api_areal>`  *aspect*, :ref:"
"`areal<api_areal>`  *znear*, :ref:`areal<api_areal>`  *zfar*)"
msgstr ""

#: ../../reference/matrix4.rst:183
msgid ""
"Creates a perspective projection matrix. *fov* is the vertical field-of-view "
"in degrees of the perspective matrix, *aspect* is the *aspect* ratio (width "
"divided by height). *znear* and *zfar* set up the depth clipping planes."
msgstr ""

#: ../../reference/matrix4.rst:189
msgid ""
":ref:`void<api_void>`  **Matrix4::reflect** (:ref:`Vector4<api_Vector4>` & "
"*plane*)"
msgstr ""

#: ../../reference/matrix4.rst:191
msgid ""
"Constructs a matrix that reflects the coordinate system about the *plane*."
msgstr ""

#: ../../reference/matrix4.rst:197
msgid ""
":ref:`void<api_void>`  **Matrix4::rotate** (:ref:`Vector3<api_Vector3>` & "
"*axis*, :ref:`areal<api_areal>`  *angle*)"
msgstr ""

#: ../../reference/matrix4.rst:199
msgid "Rotate this matrix around *axis* to *angle* in degrees."
msgstr ""

#: ../../reference/matrix4.rst:205
msgid ""
":ref:`void<api_void>`  **Matrix4::rotate** (:ref:`Vector3<api_Vector3>` & "
"*angles*)"
msgstr ""

#: ../../reference/matrix4.rst:207
msgid ""
"Rotate this matrix with Euler *angles* represented by Vector3(pitch, yaw, "
"roll) in degrees."
msgstr ""

#: ../../reference/matrix4.rst:213
msgid ":ref:`Matrix3<api_Matrix3>`  **Matrix4::rotation** () const"
msgstr ""

#: ../../reference/matrix4.rst:215
msgid "Returns rotation matrix from this matrix."
msgstr ""

#: ../../reference/matrix4.rst:221
msgid ""
":ref:`void<api_void>`  **Matrix4::scale** (:ref:`Vector3<api_Vector3>` & "
"*vector*)"
msgstr ""

#: ../../reference/matrix4.rst:229
msgid ""
":ref:`void<api_void>`  **Matrix4::translate** (:ref:`Vector3<api_Vector3>` & "
"*vector*)"
msgstr ""

#: ../../reference/matrix4.rst:231
msgid "Move the coordinate system to *vector*."
msgstr ""

#: ../../reference/matrix4.rst:237
msgid ":ref:`Matrix4<api_Matrix4>`  **Matrix4::transpose** () const"
msgstr ""

#: ../../reference/matrix4.rst:245
msgid ":ref:`void<api_void>`  **Matrix4::zero** ()"
msgstr ""

#: ../../reference/matrix4.rst:253
msgid ""
":ref:`bool<api_bool>`  **Matrix4::operator!=** (:ref:`Matrix4<api_Matrix4>` "
"& *matrix*) const"
msgstr ""

#: ../../reference/matrix4.rst:261
msgid ""
":ref:`Vector3<api_Vector3>`  **Matrix4::operator*** (:ref:"
"`Vector3<api_Vector3>` & *vector*) const"
msgstr ""

#: ../../reference/matrix4.rst:269
msgid ""
":ref:`Vector4<api_Vector4>`  **Matrix4::operator*** (:ref:"
"`Vector4<api_Vector4>` & *vector*) const"
msgstr ""

#: ../../reference/matrix4.rst:277
msgid ""
":ref:`Matrix4<api_Matrix4>`  **Matrix4::operator*** (:ref:"
"`areal<api_areal>`  *factor*) const"
msgstr ""

#: ../../reference/matrix4.rst:285
msgid ""
":ref:`Matrix4<api_Matrix4>`  **Matrix4::operator*** (:ref:"
"`Matrix4<api_Matrix4>` & *matrix*) const"
msgstr ""

#: ../../reference/matrix4.rst:295
msgid ""
":ref:`Matrix4<api_Matrix4>` & **Matrix4::operator*=** (:ref:"
"`areal<api_areal>`  *factor*)"
msgstr ""

#: ../../reference/matrix4.rst:303
msgid ""
":ref:`Matrix4<api_Matrix4>` & **Matrix4::operator*=** (:ref:"
"`Matrix4<api_Matrix4>` & *matrix*)"
msgstr ""

#: ../../reference/matrix4.rst:311
msgid ""
":ref:`Matrix4<api_Matrix4>`  **Matrix4::operator+** (:ref:"
"`Matrix4<api_Matrix4>` & *matrix*) const"
msgstr ""

#: ../../reference/matrix4.rst:319
msgid ""
":ref:`Matrix4<api_Matrix4>` & **Matrix4::operator+=** (:ref:"
"`Matrix4<api_Matrix4>` & *matrix*)"
msgstr ""

#: ../../reference/matrix4.rst:327
msgid ""
":ref:`Matrix4<api_Matrix4>`  **Matrix4::operator-** (:ref:"
"`Matrix4<api_Matrix4>` & *matrix*) const"
msgstr ""

#: ../../reference/matrix4.rst:335
msgid ""
":ref:`Matrix4<api_Matrix4>` & **Matrix4::operator-=** (:ref:"
"`Matrix4<api_Matrix4>` & *matrix*)"
msgstr ""

#: ../../reference/matrix4.rst:343
msgid ""
":ref:`bool<api_bool>`  **Matrix4::operator==** (:ref:`Matrix4<api_Matrix4>` "
"& *matrix*) const"
msgstr ""

#: ../../reference/matrix4.rst:351
msgid ""
":ref:`areal<api_areal>` & **Matrix4::operator[]** (:ref:`int<api_int>`  *i*)"
msgstr ""

#: ../../reference/matrix4.rst:353
msgid ""
"Returns the component of the matrix at *i*ndex position *i* as a modifiable "
"reference. *i* must be a valid *i*ndex position *i*n the matrix (i.e., 0 <= "
"*i* < 16). Data *i*s stored as column-major format so this function "
"retrieving data from rows *i*n colmns."
msgstr ""

#: ../../reference/matrix4.rst:359
msgid ""
":ref:`areal<api_areal>`  **Matrix4::operator[]** (:ref:`int<api_int>`  *i*) "
"const"
msgstr ""

#: ../../reference/matrix4.rst:361
msgid ""
"Returns the component of the matrix at *i*ndex position. *i* must be a valid "
"*i*ndex position *i*n the matrix (i.e., 0 <= *i* < 16). Data *i*s stored as "
"column-major format so this function retrieving data from rows *i*n colmns."
msgstr ""

#: ../../reference/obbox.rst:3
msgid "OBBox Class"
msgstr ""

#: ../../reference/obbox.rst:11
msgid "The OBBox class represents a Oriented Bounding Box in 3D space."
msgstr ""

#: ../../reference/obbox.rst:13
msgid ""
"An arbitrarily oriented bounded volume in space in the form of a rectangular "
"parallelepiped (Bounding Box). Unlike AABB, OBB rotates with the object and "
"does not change its size. Collision testing with OBB is somewhat more "
"complicated and slower than AABB, but more often it is more preferable. "
"Oriented Bounding Box represented by center of box, size and rotation "
"quaternion."
msgstr ""

#: ../../reference/obbox.rst:22
msgid ":ref:`OBBox<api_OBBox_OBBox>` ()"
msgstr ""

#: ../../reference/obbox.rst:24
msgid ""
":ref:`OBBox<api_OBBox_OBBox>` (const Vector3 & center, const Vector3 & size)"
msgstr ""

#: ../../reference/obbox.rst:26
msgid ""
":ref:`OBBox<api_OBBox_OBBox>` (const Vector3 & center, const Vector3 & size, "
"const Quaternion & rotation)"
msgstr ""

#: ../../reference/obbox.rst:28
msgid ":ref:`box<api_OBBox_box>` (Vector3 & min, Vector3 & max) const"
msgstr ""

#: ../../reference/obbox.rst:30
msgid ""
":ref:`setBox<api_OBBox_setBox>` (const Vector3 & min, const Vector3 & max)"
msgstr ""

#: ../../reference/obbox.rst:32 ../../reference/obbox.rst:34
msgid ":ref:`const OBBox<api_const OBBox>`"
msgstr ""

#: ../../reference/obbox.rst:32
msgid ":ref:`operator*<api_OBBox_operator*>` (areal  factor) const"
msgstr ""

#: ../../reference/obbox.rst:34
msgid ":ref:`operator*<api_OBBox_operator*>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/obbox.rst:49
msgid "**OBBox::OBBox** ()"
msgstr ""

#: ../../reference/obbox.rst:51
msgid ""
"Constructs an bounding box with center (0, 0, 0), size (1, 1, 1) and "
"identity rotation."
msgstr ""

#: ../../reference/obbox.rst:57
msgid ""
"**OBBox::OBBox** (:ref:`Vector3<api_Vector3>` & *center*, :ref:"
"`Vector3<api_Vector3>` & *size*)"
msgstr ""

#: ../../reference/obbox.rst:59
msgid "Constructs a bounding box with *center*, *size* and identity rotation."
msgstr ""

#: ../../reference/obbox.rst:65
msgid ""
"**OBBox::OBBox** (:ref:`Vector3<api_Vector3>` & *center*, :ref:"
"`Vector3<api_Vector3>` & *size*, :ref:`Quaternion<api_Quaternion>` & "
"*rotation*)"
msgstr ""

#: ../../reference/obbox.rst:67
msgid "Constructs a bounding box with *center*, *size* and *rotation*."
msgstr ""

#: ../../reference/obbox.rst:73
msgid ""
":ref:`void<api_void>`  **OBBox::box** (:ref:`Vector3<api_Vector3>` & *min*, :"
"ref:`Vector3<api_Vector3>` & *max*) const"
msgstr ""

#: ../../reference/obbox.rst:83
msgid ""
":ref:`void<api_void>`  **OBBox::setBox** (:ref:`Vector3<api_Vector3>` & "
"*min*, :ref:`Vector3<api_Vector3>` & *max*)"
msgstr ""

#: ../../reference/obbox.rst:85
msgid "Set curent bounding box by *min* and *max* points."
msgstr ""

#: ../../reference/obbox.rst:93
msgid ""
":ref:`const OBBox<api_const OBBox>`  **OBBox::operator*** (:ref:"
"`areal<api_areal>`  *factor*) const"
msgstr ""

#: ../../reference/obbox.rst:95 ../../reference/vector2.rst:171
#: ../../reference/vector3.rst:203 ../../reference/vector4.rst:181
msgid "Returns a copy of this vector, multiplied by the given *factor*."
msgstr ""

#: ../../reference/obbox.rst:101
msgid ""
":ref:`const OBBox<api_const OBBox>`  **OBBox::operator*** (:ref:"
"`Vector3<api_Vector3>` & *vector*) const"
msgstr ""

#: ../../reference/obbox.rst:103 ../../reference/vector2.rst:181
#: ../../reference/vector3.rst:213 ../../reference/vector4.rst:191
msgid "Returns a copy of this *vector*, multiplied by the given *vector*."
msgstr ""

#: ../../reference/plane.rst:3
msgid "Plane Class"
msgstr ""

#: ../../reference/plane.rst:11
msgid "The Plane class represents a plane in 3D space."
msgstr ""

#: ../../reference/plane.rst:13
msgid "A Plane is a flat, 2D surface that extends infinitely far in 3D space."
msgstr ""

#: ../../reference/plane.rst:22
msgid ":ref:`Plane<api_Plane_Plane>` ()"
msgstr ""

#: ../../reference/plane.rst:24
msgid ""
":ref:`Plane<api_Plane_Plane>` (const Vector3 & v1, const Vector3 & v2, const "
"Vector3 & v3)"
msgstr ""

#: ../../reference/plane.rst:26
msgid ":ref:`sqrDistance<api_Plane_sqrDistance>` (const Vector3 & point) const"
msgstr ""

#: ../../reference/plane.rst:41
msgid "**Plane::Plane** ()"
msgstr ""

#: ../../reference/plane.rst:43
msgid "Default constructor."
msgstr ""

#: ../../reference/plane.rst:49
msgid ""
"**Plane::Plane** (:ref:`Vector3<api_Vector3>` & *v1*, :ref:"
"`Vector3<api_Vector3>` & *v2*, :ref:`Vector3<api_Vector3>` & *v3*)"
msgstr ""

#: ../../reference/plane.rst:51
msgid "Cunstructs a Plane by three points *v1*, *v2* and *v3*"
msgstr ""

#: ../../reference/plane.rst:57
msgid ""
":ref:`areal<api_areal>`  **Plane::sqrDistance** (:ref:`Vector3<api_Vector3>` "
"& *point*) const"
msgstr ""

#: ../../reference/plane.rst:59
msgid "Calculate a squared distance between *point* and this Plane"
msgstr ""

#: ../../reference/quaternion.rst:3
msgid "Quaternion Class"
msgstr ""

#: ../../reference/quaternion.rst:11
msgid "The Quaternion class represents rotations in 3D space."
msgstr ""

#: ../../reference/quaternion.rst:13
msgid ""
"Quaternions consist of a 3D rotation axis specified by the x, y, and z "
"coordinates, and a w representing the rotation angle."
msgstr ""

#: ../../reference/quaternion.rst:22
msgid ":ref:`Quaternion<api_Quaternion_Quaternion>` ()"
msgstr ""

#: ../../reference/quaternion.rst:24
msgid ""
":ref:`Quaternion<api_Quaternion_Quaternion>` (const Vector3 & dir, areal  "
"angle)"
msgstr ""

#: ../../reference/quaternion.rst:26
msgid ":ref:`Quaternion<api_Quaternion_Quaternion>` (const Vector3 & euler)"
msgstr ""

#: ../../reference/quaternion.rst:28
msgid ":ref:`Quaternion<api_Quaternion_Quaternion>` (const Matrix3 & matrix)"
msgstr ""

#: ../../reference/quaternion.rst:30
msgid ":ref:`euler<api_Quaternion_euler>` () const"
msgstr ""

#: ../../reference/quaternion.rst:32
msgid ":ref:`inverse<api_Quaternion_inverse>` () const"
msgstr ""

#: ../../reference/quaternion.rst:34
msgid ""
":ref:`mix<api_Quaternion_mix>` (const Quaternion & q0, const Quaternion & "
"q1, areal  t)"
msgstr ""

#: ../../reference/quaternion.rst:36
msgid ":ref:`toMatrix<api_Quaternion_toMatrix>` () const"
msgstr ""

#: ../../reference/quaternion.rst:38
msgid ""
":ref:`operator!=<api_Quaternion_operator!=>` (const Quaternion & quaternion) "
"const"
msgstr ""

#: ../../reference/quaternion.rst:40
msgid ""
":ref:`operator*<api_Quaternion_operator*>` (const Quaternion & quaternion) "
"const"
msgstr ""

#: ../../reference/quaternion.rst:42
msgid ""
":ref:`operator*<api_Quaternion_operator*>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/quaternion.rst:44
msgid ""
":ref:`operator==<api_Quaternion_operator==>` (const Quaternion & quaternion) "
"const"
msgstr ""

#: ../../reference/quaternion.rst:46
msgid ":ref:`operator[]<api_Quaternion_operator[]>` (int  i)"
msgstr ""

#: ../../reference/quaternion.rst:48
msgid ":ref:`operator[]<api_Quaternion_operator[]>` (int  i) const"
msgstr ""

#: ../../reference/quaternion.rst:63
msgid "**Quaternion::Quaternion** ()"
msgstr ""

#: ../../reference/quaternion.rst:65
msgid "Constructs an identity quaternion."
msgstr ""

#: ../../reference/quaternion.rst:71
msgid ""
"**Quaternion::Quaternion** (:ref:`Vector3<api_Vector3>` & *dir*, :ref:"
"`areal<api_areal>`  *angle*)"
msgstr ""

#: ../../reference/quaternion.rst:73
msgid ""
"Constructs a quaternion with rotation axis *dir* and *angle* in rotation "
"degrees."
msgstr ""

#: ../../reference/quaternion.rst:79
msgid "**Quaternion::Quaternion** (:ref:`Vector3<api_Vector3>` & *euler*)"
msgstr ""

#: ../../reference/quaternion.rst:81
msgid ""
"Constructs a quaternion by Euler angles represented by Vector3(pitch, yaw, "
"roll) *euler* in rotation degrees."
msgstr ""

#: ../../reference/quaternion.rst:87
msgid "**Quaternion::Quaternion** (:ref:`Matrix3<api_Matrix3>` & *matrix*)"
msgstr ""

#: ../../reference/quaternion.rst:89
msgid ""
"Constructs a quaternion by rotation *matrix* represented by Matrix3 *matrix*."
msgstr ""

#: ../../reference/quaternion.rst:95
msgid ":ref:`Vector3<api_Vector3>`  **Quaternion::euler** () const"
msgstr ""

#: ../../reference/quaternion.rst:97
msgid ""
"Returns the Euler angles represented by Vector3(pitch, yaw, roll) in "
"rotation degrees."
msgstr ""

#: ../../reference/quaternion.rst:103
msgid ":ref:`Quaternion<api_Quaternion>`  **Quaternion::inverse** () const"
msgstr ""

#: ../../reference/quaternion.rst:105
msgid "Returns the inverse of this quaternion."
msgstr ""

#: ../../reference/quaternion.rst:111
msgid ""
":ref:`void<api_void>`  **Quaternion::mix** (:ref:"
"`Quaternion<api_Quaternion>` & *q0*, :ref:`Quaternion<api_Quaternion>` & "
"*q1*, :ref:`areal<api_areal>`  *t*)"
msgstr ""

#: ../../reference/quaternion.rst:113
msgid "Linear inerpolation between *q0* and *q1* with *t* factor."
msgstr ""

#: ../../reference/quaternion.rst:119
msgid ":ref:`Matrix3<api_Matrix3>`  **Quaternion::toMatrix** () const"
msgstr ""

#: ../../reference/quaternion.rst:121
msgid "Returns the rotation matrix for this quaternion."
msgstr ""

#: ../../reference/quaternion.rst:127
msgid ""
":ref:`bool<api_bool>`  **Quaternion::operator!=** (:ref:"
"`Quaternion<api_Quaternion>` & *quaternion*) const"
msgstr ""

#: ../../reference/quaternion.rst:129
msgid ""
"Returns true if this *quaternion* is NOT equal to given *quaternion*; "
"otherwise returns false. This operator uses an exact floating-point "
"comparison."
msgstr ""

#: ../../reference/quaternion.rst:135
msgid ""
":ref:`Quaternion<api_Quaternion>`  **Quaternion::operator*** (:ref:"
"`Quaternion<api_Quaternion>` & *quaternion*) const"
msgstr ""

#: ../../reference/quaternion.rst:137
msgid ""
"Multiplies this *quaternion* and *quaternion* using *quaternion* "
"multiplication. The result corresponds to applying both of the rotations "
"specified by this *quaternion* and *quaternion*."
msgstr ""

#: ../../reference/quaternion.rst:143
msgid ""
":ref:`Vector3<api_Vector3>`  **Quaternion::operator*** (:ref:"
"`Vector3<api_Vector3>` & *vector*) const"
msgstr ""

#: ../../reference/quaternion.rst:145
msgid ""
"Rotates a *vector* vec with this quaternion to produce a new *vector* in 3D "
"space."
msgstr ""

#: ../../reference/quaternion.rst:151
msgid ""
":ref:`bool<api_bool>`  **Quaternion::operator==** (:ref:"
"`Quaternion<api_Quaternion>` & *quaternion*) const"
msgstr ""

#: ../../reference/quaternion.rst:153
msgid ""
"Returns true if this *quaternion* is equal to given *quaternion*; otherwise "
"returns false. This operator uses an exact floating-point comparison."
msgstr ""

#: ../../reference/quaternion.rst:159
msgid ""
":ref:`areal<api_areal>` & **Quaternion::operator[]** (:ref:`int<api_int>`  "
"*i*)"
msgstr ""

#: ../../reference/quaternion.rst:161
msgid ""
"Returns the component of the quaternion at *i*ndex position *i* as a "
"modifiable reference. *i* must be a valid *i*ndex position *i*n the "
"quaternion (i.e., 0 <= *i* < 4)."
msgstr ""

#: ../../reference/quaternion.rst:167
msgid ""
":ref:`areal<api_areal>`  **Quaternion::operator[]** (:ref:`int<api_int>`  "
"*i*) const"
msgstr ""

#: ../../reference/quaternion.rst:169
msgid ""
"Returns the component of the quaternion at *i*ndex position. *i* must be a "
"valid *i*ndex position *i*n the quaternion (i.e., 0 <= *i* < 4)."
msgstr ""

#: ../../reference/ray.rst:3
msgid "Ray Class"
msgstr ""

#: ../../reference/ray.rst:11
msgid "The Ray class represents a ray in 3D space."
msgstr ""

#: ../../reference/ray.rst:13
msgid ""
"Ray is an infinity line starting from position pos and going to some "
"direction"
msgstr ""

#: ../../reference/ray.rst:22
msgid ""
":ref:`Ray<api_Ray_Ray>` (const Vector3 & position, const Vector3 & direction)"
msgstr ""

#: ../../reference/ray.rst:24
msgid ""
":ref:`diffuse<api_Ray_diffuse>` (const Vector3 & normal, const Vector3 & "
"point, areal  min, areal  max)"
msgstr ""

#: ../../reference/ray.rst:26
msgid ""
":ref:`intersect<api_Ray_intersect>` (const Vector3 & position, areal  "
"radius, Vector3 * pt)"
msgstr ""

#: ../../reference/ray.rst:28
msgid ""
":ref:`intersect<api_Ray_intersect>` (const Plane & plane, Vector3 * pt, "
"bool  back = false)"
msgstr ""

#: ../../reference/ray.rst:30
msgid ":ref:`intersect<api_Ray_intersect>` (const AABBox & box, Vector3 * pt)"
msgstr ""

#: ../../reference/ray.rst:32
msgid ""
":ref:`intersect<api_Ray_intersect>` (const Vector3 & v1, const Vector3 & v2, "
"const Vector3 & v3, Vector3 * pt, bool  back = false)"
msgstr ""

#: ../../reference/ray.rst:34
msgid ""
":ref:`reflect<api_Ray_reflect>` (const Vector3 & normal, const Vector3 & "
"point)"
msgstr ""

#: ../../reference/ray.rst:36
msgid ""
":ref:`refract<api_Ray_refract>` (const Vector3 & normal, const Vector3 & "
"point, areal  ior)"
msgstr ""

#: ../../reference/ray.rst:51
msgid ""
"**Ray::Ray** (:ref:`Vector3<api_Vector3>` & *position*, :ref:"
"`Vector3<api_Vector3>` & *direction*)"
msgstr ""

#: ../../reference/ray.rst:53
msgid "Constructs a ray with *position* and *direction*."
msgstr ""

#: ../../reference/ray.rst:59
msgid ""
":ref:`Ray<api_Ray>`  **Ray::diffuse** (:ref:`Vector3<api_Vector3>` & "
"*normal*, :ref:`Vector3<api_Vector3>` & *point*, :ref:`areal<api_areal>`  "
"*min*, :ref:`areal<api_areal>`  *max*)"
msgstr ""

#: ../../reference/ray.rst:61
msgid ""
"Returns a new Ray object wich result of random directed reflection of "
"current ray. Diffuse reflection calculating by *normal* vector of reflection "
"surface and intersection *point*. With *min* and *max* constraints."
msgstr ""

#: ../../reference/ray.rst:67
msgid ""
":ref:`bool<api_bool>`  **Ray::intersect** (:ref:`Vector3<api_Vector3>` & "
"*position*, :ref:`areal<api_areal>`  *radius*, :ref:`Vector3<api_Vector3>` * "
"*pt*)"
msgstr ""

#: ../../reference/ray.rst:69
msgid ""
"Returns true if this ray intersects the given sphere at *position* and "
"*radius*; otherwise returns false. Output argument *pt* contain a closest "
"point of intersection."
msgstr ""

#: ../../reference/ray.rst:75
msgid ""
":ref:`bool<api_bool>`  **Ray::intersect** (:ref:`Plane<api_Plane>` & "
"*plane*, :ref:`Vector3<api_Vector3>` * *pt*, :ref:`bool<api_bool>`  *back* = "
"false)"
msgstr ""

#: ../../reference/ray.rst:77
msgid ""
"Returns true if this ray intersects the given *plane*; otherwise returns "
"false. Output argument *pt* contain a point of intersection. Argument *back* "
"is a flag to use *back*face culling."
msgstr ""

#: ../../reference/ray.rst:83
msgid ""
":ref:`bool<api_bool>`  **Ray::intersect** (:ref:`AABBox<api_AABBox>` & "
"*box*, :ref:`Vector3<api_Vector3>` * *pt*)"
msgstr ""

#: ../../reference/ray.rst:85
msgid ""
"Returns true if this ray intersects the given Axis Aligned Bounding *box*; "
"otherwise returns false. Output argument *pt* contain a point of "
"intersection."
msgstr ""

#: ../../reference/ray.rst:91
msgid ""
":ref:`bool<api_bool>`  **Ray::intersect** (:ref:`Vector3<api_Vector3>` & "
"*v1*, :ref:`Vector3<api_Vector3>` & *v2*, :ref:`Vector3<api_Vector3>` & "
"*v3*, :ref:`Vector3<api_Vector3>` * *pt*, :ref:`bool<api_bool>`  *back* = "
"false)"
msgstr ""

#: ../../reference/ray.rst:93
msgid ""
"Returns true if this ray intersects the given triangle between *v1*, *v2* "
"and *v3* points; otherwise returns false. Output argument *pt* contain a "
"point of intersection. Argument *back* is a flag to use *back*face culling."
msgstr ""

#: ../../reference/ray.rst:99
msgid ""
":ref:`Ray<api_Ray>`  **Ray::reflect** (:ref:`Vector3<api_Vector3>` & "
"*normal*, :ref:`Vector3<api_Vector3>` & *point*)"
msgstr ""

#: ../../reference/ray.rst:101
msgid ""
"Returns a new Ray object wich result of reflection of current ray. "
"Reflection calculating by *normal* vector of reflection surface and "
"intersection *point*."
msgstr ""

#: ../../reference/ray.rst:107
msgid ""
":ref:`Ray<api_Ray>`  **Ray::refract** (:ref:`Vector3<api_Vector3>` & "
"*normal*, :ref:`Vector3<api_Vector3>` & *point*, :ref:`areal<api_areal>`  "
"*ior*)"
msgstr ""

#: ../../reference/ray.rst:109
msgid ""
"Returns a new Ray object wich result of refraction of current ray. "
"Refraction calculating by *normal* vector of reflection surface and "
"intersection *point* with *ior* (Index of Refraction)."
msgstr ""

#: ../../reference/vector2.rst:3
msgid "Vector2 Class"
msgstr ""

#: ../../reference/vector2.rst:11
msgid "The Vector2 class represents a vector or vertex in 2D space."
msgstr ""

#: ../../reference/vector2.rst:13
msgid ""
"Vectors are one of the main building blocks of 2D representation and "
"drawing. They consist of three coordinates, traditionally called x and y."
msgstr ""

#: ../../reference/vector2.rst:15
msgid ""
"The Vector2 class can also be used to represent vertices in 2D space. We "
"therefore do not need to provide a separate vertex class."
msgstr ""

#: ../../reference/vector2.rst:17
msgid ""
"Note: By design values in the Vector2 instance are stored as float. This "
"means that on platforms where the areal arguments to Vector2 functions are "
"represented by double values, it is possible to lose precision."
msgstr ""

#: ../../reference/vector2.rst:26
msgid ":ref:`Vector2<api_Vector2_Vector2>` ()"
msgstr ""

#: ../../reference/vector2.rst:28
msgid ":ref:`Vector2<api_Vector2_Vector2>` (areal  v)"
msgstr ""

#: ../../reference/vector2.rst:30
msgid ":ref:`Vector2<api_Vector2_Vector2>` (areal  x, areal  y)"
msgstr ""

#: ../../reference/vector2.rst:32
msgid ":ref:`cross<api_Vector2_cross>` (const Vector2 & vector) const"
msgstr ""

#: ../../reference/vector2.rst:34
msgid ":ref:`dot<api_Vector2_dot>` (const Vector2 & vector) const"
msgstr ""

#: ../../reference/vector2.rst:36
msgid ":ref:`length<api_Vector2_length>` () const"
msgstr ""

#: ../../reference/vector2.rst:38
msgid ":ref:`normalize<api_Vector2_normalize>` ()"
msgstr ""

#: ../../reference/vector2.rst:40
msgid ":ref:`sqrLength<api_Vector2_sqrLength>` () const"
msgstr ""

#: ../../reference/vector2.rst:42
msgid ""
":ref:`operator!=<api_Vector2_operator!=>` (const Vector2 & vector) const"
msgstr ""

#: ../../reference/vector2.rst:44
msgid ":ref:`operator*<api_Vector2_operator*>` (areal  factor) const"
msgstr ""

#: ../../reference/vector2.rst:46
msgid ":ref:`operator*<api_Vector2_operator*>` (const Vector2 & vector) const"
msgstr ""

#: ../../reference/vector2.rst:48 ../../reference/vector2.rst:52
#: ../../reference/vector2.rst:58 ../../reference/vector2.rst:62
msgid ":ref:`Vector2<api_Vector2>` &"
msgstr ""

#: ../../reference/vector2.rst:48
msgid ":ref:`operator*=<api_Vector2_operator*=>` (areal  factor)"
msgstr ""

#: ../../reference/vector2.rst:50
msgid ":ref:`operator+<api_Vector2_operator+>` (const Vector2 & vector) const"
msgstr ""

#: ../../reference/vector2.rst:52
msgid ":ref:`operator+=<api_Vector2_operator+=>` (const Vector2 & vector)"
msgstr ""

#: ../../reference/vector2.rst:54
msgid ":ref:`operator-<api_Vector2_operator->` () const"
msgstr ""

#: ../../reference/vector2.rst:56
msgid ":ref:`operator-<api_Vector2_operator->` (const Vector2 & vector) const"
msgstr ""

#: ../../reference/vector2.rst:58
msgid ":ref:`operator-=<api_Vector2_operator-=>` (const Vector2 & vector)"
msgstr ""

#: ../../reference/vector2.rst:60
msgid ":ref:`operator/<api_Vector2_operator/>` (areal  divisor) const"
msgstr ""

#: ../../reference/vector2.rst:62
msgid ":ref:`operator/=<api_Vector2_operator/=>` (areal  divisor)"
msgstr ""

#: ../../reference/vector2.rst:64
msgid ":ref:`operator<<api_Vector2_operator<>` (const Vector2 & vector) const"
msgstr ""

#: ../../reference/vector2.rst:66
msgid ""
":ref:`operator==<api_Vector2_operator==>` (const Vector2 & vector) const"
msgstr ""

#: ../../reference/vector2.rst:68
msgid ":ref:`operator><api_Vector2_operator>>` (const Vector2 & vector) const"
msgstr ""

#: ../../reference/vector2.rst:70
msgid ":ref:`operator[]<api_Vector2_operator[]>` (int  i)"
msgstr ""

#: ../../reference/vector2.rst:72
msgid ":ref:`operator[]<api_Vector2_operator[]>` (int  i) const"
msgstr ""

#: ../../reference/vector2.rst:87
msgid "**Vector2::Vector2** ()"
msgstr ""

#: ../../reference/vector2.rst:89
msgid "Constructs a null vector, i.e. with coordinates (0, 0)."
msgstr ""

#: ../../reference/vector2.rst:95
msgid "**Vector2::Vector2** (:ref:`areal<api_areal>`  *v*)"
msgstr ""

#: ../../reference/vector2.rst:97 ../../reference/vector3.rst:103
#: ../../reference/vector4.rst:99
msgid "Constructs a *v*ector with coordinates (v)."
msgstr ""

#: ../../reference/vector2.rst:103
msgid ""
"**Vector2::Vector2** (:ref:`areal<api_areal>`  *x*, :ref:`areal<api_areal>`  "
"*y*)"
msgstr ""

#: ../../reference/vector2.rst:105
msgid "Constructs a vector with coordinates (x, *y*)."
msgstr ""

#: ../../reference/vector2.rst:111
msgid ""
":ref:`areal<api_areal>`  **Vector2::cross** (:ref:`Vector2<api_Vector2>` & "
"*vector*) const"
msgstr ""

#: ../../reference/vector2.rst:113 ../../reference/vector3.rst:145
msgid "Returns the cross-product of this *vector* and given *vector*."
msgstr ""

#: ../../reference/vector2.rst:115 ../../reference/vector3.rst:147
msgid "**See also** dot()."
msgstr ""

#: ../../reference/vector2.rst:121
msgid ""
":ref:`areal<api_areal>`  **Vector2::dot** (:ref:`Vector2<api_Vector2>` & "
"*vector*) const"
msgstr ""

#: ../../reference/vector2.rst:123 ../../reference/vector3.rst:155
#: ../../reference/vector4.rst:135
msgid "Returns the dot-product of this *vector* and given *vector*."
msgstr ""

#: ../../reference/vector2.rst:125 ../../reference/vector3.rst:157
msgid "**See also** cross()."
msgstr ""

#: ../../reference/vector2.rst:131
msgid ":ref:`areal<api_areal>`  **Vector2::length** () const"
msgstr ""

#: ../../reference/vector2.rst:133 ../../reference/vector3.rst:165
#: ../../reference/vector4.rst:143
msgid "Returns the length of this vector."
msgstr ""

#: ../../reference/vector2.rst:135 ../../reference/vector3.rst:167
#: ../../reference/vector4.rst:145
msgid "**See also** sqrLength()."
msgstr ""

#: ../../reference/vector2.rst:141
msgid ":ref:`areal<api_areal>`  **Vector2::normalize** ()"
msgstr ""

#: ../../reference/vector2.rst:143 ../../reference/vector3.rst:175
#: ../../reference/vector4.rst:153
msgid ""
"Normalizes the currect vector in place. Returns length of prenormalized "
"vector."
msgstr ""

#: ../../reference/vector2.rst:145 ../../reference/vector2.rst:155
#: ../../reference/vector3.rst:177 ../../reference/vector3.rst:187
#: ../../reference/vector4.rst:155 ../../reference/vector4.rst:165
msgid "**See also** length()."
msgstr ""

#: ../../reference/vector2.rst:151
msgid ":ref:`areal<api_areal>`  **Vector2::sqrLength** () const"
msgstr ""

#: ../../reference/vector2.rst:153 ../../reference/vector3.rst:185
#: ../../reference/vector4.rst:163
msgid "Returns the squared length of this vector."
msgstr ""

#: ../../reference/vector2.rst:161
msgid ""
":ref:`bool<api_bool>`  **Vector2::operator!=** (:ref:`Vector2<api_Vector2>` "
"& *vector*) const"
msgstr ""

#: ../../reference/vector2.rst:163 ../../reference/vector3.rst:195
#: ../../reference/vector4.rst:173
msgid ""
"Returns true if this *vector* is NOT equal to given *vector*; otherwise "
"returns false. This operator uses an exact floating-point comparison."
msgstr ""

#: ../../reference/vector2.rst:169
msgid ""
":ref:`Vector2<api_Vector2>`  **Vector2::operator*** (:ref:"
"`areal<api_areal>`  *factor*) const"
msgstr ""

#: ../../reference/vector2.rst:173 ../../reference/vector2.rst:183
#: ../../reference/vector2.rst:263 ../../reference/vector3.rst:205
#: ../../reference/vector3.rst:215 ../../reference/vector3.rst:295
#: ../../reference/vector4.rst:183 ../../reference/vector4.rst:193
#: ../../reference/vector4.rst:273
msgid "**See also** operator*=()."
msgstr ""

#: ../../reference/vector2.rst:179
msgid ""
":ref:`Vector2<api_Vector2>`  **Vector2::operator*** (:ref:"
"`Vector2<api_Vector2>` & *vector*) const"
msgstr ""

#: ../../reference/vector2.rst:189
msgid ""
":ref:`Vector2<api_Vector2>` & **Vector2::operator*=** (:ref:"
"`areal<api_areal>`  *factor*)"
msgstr ""

#: ../../reference/vector2.rst:191 ../../reference/vector3.rst:223
#: ../../reference/vector4.rst:201
msgid ""
"Multiplies this vector's coordinates by the given *factor*, and returns a "
"reference to this vector."
msgstr ""

#: ../../reference/vector2.rst:193 ../../reference/vector2.rst:253
#: ../../reference/vector3.rst:225 ../../reference/vector3.rst:285
#: ../../reference/vector4.rst:203 ../../reference/vector4.rst:263
msgid "**See also** operator/=()."
msgstr ""

#: ../../reference/vector2.rst:199
msgid ""
":ref:`Vector2<api_Vector2>`  **Vector2::operator+** (:ref:"
"`Vector2<api_Vector2>` & *vector*) const"
msgstr ""

#: ../../reference/vector2.rst:201
msgid ""
"Returns a Vector2 object that is the sum of the this *vector* and *vector*; "
"each component is added separately."
msgstr ""

#: ../../reference/vector2.rst:203 ../../reference/vector2.rst:243
#: ../../reference/vector3.rst:235 ../../reference/vector3.rst:275
#: ../../reference/vector4.rst:213 ../../reference/vector4.rst:253
msgid "**See also** operator+=()."
msgstr ""

#: ../../reference/vector2.rst:209
msgid ""
":ref:`Vector2<api_Vector2>` & **Vector2::operator+=** (:ref:"
"`Vector2<api_Vector2>` & *vector*)"
msgstr ""

#: ../../reference/vector2.rst:211 ../../reference/vector3.rst:243
#: ../../reference/vector4.rst:221
msgid ""
"Adds the given *vector* to this *vector* and returns a reference to this "
"*vector*."
msgstr ""

#: ../../reference/vector2.rst:213 ../../reference/vector2.rst:233
#: ../../reference/vector3.rst:245 ../../reference/vector3.rst:265
#: ../../reference/vector4.rst:223 ../../reference/vector4.rst:243
msgid "**See also** operator-=()."
msgstr ""

#: ../../reference/vector2.rst:219
msgid ":ref:`Vector2<api_Vector2>`  **Vector2::operator-** () const"
msgstr ""

#: ../../reference/vector2.rst:221
msgid ""
"Returns a Vector2 object that is formed by changing the sign of all three "
"components of the this vector."
msgstr ""

#: ../../reference/vector2.rst:223
msgid "Equivalent to Vector2(0,0) - vector."
msgstr ""

#: ../../reference/vector2.rst:229
msgid ""
":ref:`Vector2<api_Vector2>`  **Vector2::operator-** (:ref:"
"`Vector2<api_Vector2>` & *vector*) const"
msgstr ""

#: ../../reference/vector2.rst:231
msgid ""
"Returns a Vector2 object that is formed by subtracting *vector* from this "
"*vector*; each component is subtracted separately."
msgstr ""

#: ../../reference/vector2.rst:239
msgid ""
":ref:`Vector2<api_Vector2>` & **Vector2::operator-=** (:ref:"
"`Vector2<api_Vector2>` & *vector*)"
msgstr ""

#: ../../reference/vector2.rst:241 ../../reference/vector3.rst:273
#: ../../reference/vector4.rst:251
msgid ""
"Subtracts the given *vector* from this *vector* and returns a reference to "
"this *vector*."
msgstr ""

#: ../../reference/vector2.rst:249
msgid ""
":ref:`Vector2<api_Vector2>`  **Vector2::operator/** (:ref:"
"`areal<api_areal>`  *divisor*) const"
msgstr ""

#: ../../reference/vector2.rst:251 ../../reference/vector3.rst:283
#: ../../reference/vector4.rst:261
msgid "Returns a copy of this vector, divided by the given *divisor*."
msgstr ""

#: ../../reference/vector2.rst:259
msgid ""
":ref:`Vector2<api_Vector2>` & **Vector2::operator/=** (:ref:"
"`areal<api_areal>`  *divisor*)"
msgstr ""

#: ../../reference/vector2.rst:261 ../../reference/vector3.rst:293
#: ../../reference/vector4.rst:271
msgid ""
"Divides this vector's coordinates by the given *divisor*, and returns a "
"reference to this vector."
msgstr ""

#: ../../reference/vector2.rst:269
msgid ""
":ref:`bool<api_bool>`  **Vector2::operator<** (:ref:`Vector2<api_Vector2>` & "
"*vector*) const"
msgstr ""

#: ../../reference/vector2.rst:271 ../../reference/vector3.rst:303
#: ../../reference/vector4.rst:281
msgid ""
"Returns true if this *vector* is less than *vector*; otherwise returns "
"false. This operator uses an exact floating-point comparison."
msgstr ""

#: ../../reference/vector2.rst:277
msgid ""
":ref:`bool<api_bool>`  **Vector2::operator==** (:ref:`Vector2<api_Vector2>` "
"& *vector*) const"
msgstr ""

#: ../../reference/vector2.rst:279 ../../reference/vector3.rst:311
#: ../../reference/vector4.rst:289
msgid ""
"Returns true if this *vector* is equal to given *vector*; otherwise returns "
"false. This operator uses an exact floating-point comparison."
msgstr ""

#: ../../reference/vector2.rst:285
msgid ""
":ref:`bool<api_bool>`  **Vector2::operator>** (:ref:`Vector2<api_Vector2>` & "
"*vector*) const"
msgstr ""

#: ../../reference/vector2.rst:287 ../../reference/vector3.rst:319
#: ../../reference/vector4.rst:297
msgid ""
"Returns true if this *vector* is bigger than given *vector*; otherwise "
"returns false. This operator uses an exact floating-point comparison."
msgstr ""

#: ../../reference/vector2.rst:293
msgid ""
":ref:`areal<api_areal>` & **Vector2::operator[]** (:ref:`int<api_int>`  *i*)"
msgstr ""

#: ../../reference/vector2.rst:295
msgid ""
"Returns the component of the vector at *i*ndex position *i* as a modifiable "
"reference. *i* must be a valid *i*ndex position *i*n the vector (i.e., 0 <= "
"*i* < 2)."
msgstr ""

#: ../../reference/vector2.rst:301
msgid ""
":ref:`areal<api_areal>`  **Vector2::operator[]** (:ref:`int<api_int>`  *i*) "
"const"
msgstr ""

#: ../../reference/vector2.rst:303
msgid ""
"Returns the component of the vector at *i*ndex position. *i* must be a valid "
"*i*ndex position *i*n the vector (i.e., 0 <= *i* < 2)."
msgstr ""

#: ../../reference/vector3.rst:3
msgid "Vector3 Class"
msgstr ""

#: ../../reference/vector3.rst:11
msgid "The Vector3 class represents a vector or vertex in 3D space."
msgstr ""

#: ../../reference/vector3.rst:13
msgid ""
"Vectors are one of the main building blocks of 3D representation and "
"drawing. They consist of three coordinates, traditionally called x, y, and z."
msgstr ""

#: ../../reference/vector3.rst:15
msgid ""
"The Vector3 class can also be used to represent vertices in 3D space. We "
"therefore do not need to provide a separate vertex class."
msgstr ""

#: ../../reference/vector3.rst:17
msgid ""
"Note: By design values in the Vector3 instance are stored as float. This "
"means that on platforms where the areal arguments to Vector3 functions are "
"represented by double values, it is possible to lose precision."
msgstr ""

#: ../../reference/vector3.rst:26
msgid ":ref:`Vector3<api_Vector3_Vector3>` ()"
msgstr ""

#: ../../reference/vector3.rst:28
msgid ":ref:`Vector3<api_Vector3_Vector3>` (areal  v)"
msgstr ""

#: ../../reference/vector3.rst:30
msgid ":ref:`Vector3<api_Vector3_Vector3>` (areal  x, areal  y, areal  z)"
msgstr ""

#: ../../reference/vector3.rst:32
msgid ":ref:`Vector3<api_Vector3_Vector3>` (const Vector2 & v, areal  z)"
msgstr ""

#: ../../reference/vector3.rst:34
msgid ":ref:`Vector3<api_Vector3_Vector3>` (const areal * v)"
msgstr ""

#: ../../reference/vector3.rst:36
msgid ":ref:`abs<api_Vector3_abs>` () const"
msgstr ""

#: ../../reference/vector3.rst:38
msgid ":ref:`cross<api_Vector3_cross>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:40
msgid ":ref:`dot<api_Vector3_dot>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:42
msgid ":ref:`length<api_Vector3_length>` () const"
msgstr ""

#: ../../reference/vector3.rst:44
msgid ":ref:`normalize<api_Vector3_normalize>` ()"
msgstr ""

#: ../../reference/vector3.rst:46
msgid ":ref:`sqrLength<api_Vector3_sqrLength>` () const"
msgstr ""

#: ../../reference/vector3.rst:48
msgid ""
":ref:`operator!=<api_Vector3_operator!=>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:50
msgid ":ref:`operator*<api_Vector3_operator*>` (areal  factor) const"
msgstr ""

#: ../../reference/vector3.rst:52
msgid ":ref:`operator*<api_Vector3_operator*>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:54 ../../reference/vector3.rst:58
#: ../../reference/vector3.rst:64 ../../reference/vector3.rst:68
msgid ":ref:`Vector3<api_Vector3>` &"
msgstr ""

#: ../../reference/vector3.rst:54
msgid ":ref:`operator*=<api_Vector3_operator*=>` (areal  factor)"
msgstr ""

#: ../../reference/vector3.rst:56
msgid ":ref:`operator+<api_Vector3_operator+>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:58
msgid ":ref:`operator+=<api_Vector3_operator+=>` (const Vector3 & vector)"
msgstr ""

#: ../../reference/vector3.rst:60
msgid ":ref:`operator-<api_Vector3_operator->` () const"
msgstr ""

#: ../../reference/vector3.rst:62
msgid ":ref:`operator-<api_Vector3_operator->` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:64
msgid ":ref:`operator-=<api_Vector3_operator-=>` (const Vector3 & vector)"
msgstr ""

#: ../../reference/vector3.rst:66
msgid ":ref:`operator/<api_Vector3_operator/>` (areal  divisor) const"
msgstr ""

#: ../../reference/vector3.rst:68
msgid ":ref:`operator/=<api_Vector3_operator/=>` (areal  divisor)"
msgstr ""

#: ../../reference/vector3.rst:70
msgid ":ref:`operator<<api_Vector3_operator<>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:72
msgid ""
":ref:`operator==<api_Vector3_operator==>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:74
msgid ":ref:`operator><api_Vector3_operator>>` (const Vector3 & vector) const"
msgstr ""

#: ../../reference/vector3.rst:76
msgid ":ref:`operator[]<api_Vector3_operator[]>` (int  i)"
msgstr ""

#: ../../reference/vector3.rst:78
msgid ":ref:`operator[]<api_Vector3_operator[]>` (int  i) const"
msgstr ""

#: ../../reference/vector3.rst:93
msgid "**Vector3::Vector3** ()"
msgstr ""

#: ../../reference/vector3.rst:95
msgid "Constructs a null vector, i.e. with coordinates (0, 0, 0)."
msgstr ""

#: ../../reference/vector3.rst:101
msgid "**Vector3::Vector3** (:ref:`areal<api_areal>`  *v*)"
msgstr ""

#: ../../reference/vector3.rst:109
msgid ""
"**Vector3::Vector3** (:ref:`areal<api_areal>`  *x*, :ref:`areal<api_areal>`  "
"*y*, :ref:`areal<api_areal>`  *z*)"
msgstr ""

#: ../../reference/vector3.rst:111
msgid "Constructs a vector with coordinates (x, *y*, *z*)."
msgstr ""

#: ../../reference/vector3.rst:117
msgid ""
"**Vector3::Vector3** (:ref:`Vector2<api_Vector2>` & *v*, :ref:"
"`areal<api_areal>`  *z*)"
msgstr ""

#: ../../reference/vector3.rst:119
msgid ""
"Constructs a 3D *v*ector from the specified 2D *v*. The *z* coordinate is "
"set to *z*."
msgstr ""

#: ../../reference/vector3.rst:121 ../../reference/vector4.rst:117
msgid "**See also** Vector2::Vector2()."
msgstr ""

#: ../../reference/vector3.rst:127
msgid "**Vector3::Vector3** (:ref:`areal<api_areal>` * *v*)"
msgstr ""

#: ../../reference/vector3.rst:129
msgid "Constructs a 3D *v*ector from *v* (areal[3] array)."
msgstr ""

#: ../../reference/vector3.rst:135
msgid ":ref:`Vector3<api_Vector3>`  **Vector3::abs** () const"
msgstr ""

#: ../../reference/vector3.rst:137
msgid "Returns the absplute value of this vector."
msgstr ""

#: ../../reference/vector3.rst:143
msgid ""
":ref:`Vector3<api_Vector3>`  **Vector3::cross** (:ref:`Vector3<api_Vector3>` "
"& *vector*) const"
msgstr ""

#: ../../reference/vector3.rst:153
msgid ""
":ref:`areal<api_areal>`  **Vector3::dot** (:ref:`Vector3<api_Vector3>` & "
"*vector*) const"
msgstr ""

#: ../../reference/vector3.rst:163
msgid ":ref:`areal<api_areal>`  **Vector3::length** () const"
msgstr ""

#: ../../reference/vector3.rst:173
msgid ":ref:`areal<api_areal>`  **Vector3::normalize** ()"
msgstr ""

#: ../../reference/vector3.rst:183
msgid ":ref:`areal<api_areal>`  **Vector3::sqrLength** () const"
msgstr ""

#: ../../reference/vector3.rst:193
msgid ""
":ref:`bool<api_bool>`  **Vector3::operator!=** (:ref:`Vector3<api_Vector3>` "
"& *vector*) const"
msgstr ""

#: ../../reference/vector3.rst:201
msgid ""
":ref:`Vector3<api_Vector3>`  **Vector3::operator*** (:ref:"
"`areal<api_areal>`  *factor*) const"
msgstr ""

#: ../../reference/vector3.rst:211
msgid ""
":ref:`Vector3<api_Vector3>`  **Vector3::operator*** (:ref:"
"`Vector3<api_Vector3>` & *vector*) const"
msgstr ""

#: ../../reference/vector3.rst:221
msgid ""
":ref:`Vector3<api_Vector3>` & **Vector3::operator*=** (:ref:"
"`areal<api_areal>`  *factor*)"
msgstr ""

#: ../../reference/vector3.rst:231
msgid ""
":ref:`Vector3<api_Vector3>`  **Vector3::operator+** (:ref:"
"`Vector3<api_Vector3>` & *vector*) const"
msgstr ""

#: ../../reference/vector3.rst:233
msgid ""
"Returns a Vector3 object that is the sum of the this *vector* and *vector*; "
"each component is added separately."
msgstr ""

#: ../../reference/vector3.rst:241
msgid ""
":ref:`Vector3<api_Vector3>` & **Vector3::operator+=** (:ref:"
"`Vector3<api_Vector3>` & *vector*)"
msgstr ""

#: ../../reference/vector3.rst:251
msgid ":ref:`Vector3<api_Vector3>`  **Vector3::operator-** () const"
msgstr ""

#: ../../reference/vector3.rst:253
msgid ""
"Returns a Vector3 object that is formed by changing the sign of all three "
"components of the this vector."
msgstr ""

#: ../../reference/vector3.rst:255
msgid "Equivalent to Vector3(0,0,0) - vector."
msgstr ""

#: ../../reference/vector3.rst:261
msgid ""
":ref:`Vector3<api_Vector3>`  **Vector3::operator-** (:ref:"
"`Vector3<api_Vector3>` & *vector*) const"
msgstr ""

#: ../../reference/vector3.rst:263
msgid ""
"Returns a Vector3 object that is formed by subtracting *vector* from this "
"*vector*; each component is subtracted separately."
msgstr ""

#: ../../reference/vector3.rst:271
msgid ""
":ref:`Vector3<api_Vector3>` & **Vector3::operator-=** (:ref:"
"`Vector3<api_Vector3>` & *vector*)"
msgstr ""

#: ../../reference/vector3.rst:281
msgid ""
":ref:`Vector3<api_Vector3>`  **Vector3::operator/** (:ref:"
"`areal<api_areal>`  *divisor*) const"
msgstr ""

#: ../../reference/vector3.rst:291
msgid ""
":ref:`Vector3<api_Vector3>` & **Vector3::operator/=** (:ref:"
"`areal<api_areal>`  *divisor*)"
msgstr ""

#: ../../reference/vector3.rst:301
msgid ""
":ref:`bool<api_bool>`  **Vector3::operator<** (:ref:`Vector3<api_Vector3>` & "
"*vector*) const"
msgstr ""

#: ../../reference/vector3.rst:309
msgid ""
":ref:`bool<api_bool>`  **Vector3::operator==** (:ref:`Vector3<api_Vector3>` "
"& *vector*) const"
msgstr ""

#: ../../reference/vector3.rst:317
msgid ""
":ref:`bool<api_bool>`  **Vector3::operator>** (:ref:`Vector3<api_Vector3>` & "
"*vector*) const"
msgstr ""

#: ../../reference/vector3.rst:325
msgid ""
":ref:`areal<api_areal>` & **Vector3::operator[]** (:ref:`int<api_int>`  *i*)"
msgstr ""

#: ../../reference/vector3.rst:327
msgid ""
"Returns the component of the vector at *i*ndex position *i* as a modifiable "
"reference. *i* must be a valid *i*ndex position *i*n the vector (i.e., 0 <= "
"*i* < 3)."
msgstr ""

#: ../../reference/vector3.rst:333
msgid ""
":ref:`areal<api_areal>`  **Vector3::operator[]** (:ref:`int<api_int>`  *i*) "
"const"
msgstr ""

#: ../../reference/vector3.rst:335
msgid ""
"Returns the component of the vector at *i*ndex position. *i* must be a valid "
"*i*ndex position *i*n the vector (i.e., 0 <= *i* < 3)."
msgstr ""

#: ../../reference/vector4.rst:3
msgid "Vector4 Class"
msgstr ""

#: ../../reference/vector4.rst:11
msgid "The Vector4 class represents a vector or vertex in 4D space."
msgstr ""

#: ../../reference/vector4.rst:13
msgid ""
"Vectors are one of the main building blocks of 4D representation and "
"drawing. They consist of three coordinates, traditionally called x, y, z and "
"w."
msgstr ""

#: ../../reference/vector4.rst:15
msgid ""
"The Vector4 class can also be used to represent vertices in 4D space. We "
"therefore do not need to provide a separate vertex class."
msgstr ""

#: ../../reference/vector4.rst:17
msgid ""
"Note: By design values in the Vector4 instance are stored as float. This "
"means that on platforms where the areal arguments to Vector4 functions are "
"represented by double values, it is possible to lose precision."
msgstr ""

#: ../../reference/vector4.rst:26
msgid ":ref:`Vector4<api_Vector4_Vector4>` ()"
msgstr ""

#: ../../reference/vector4.rst:28
msgid ":ref:`Vector4<api_Vector4_Vector4>` (areal  v)"
msgstr ""

#: ../../reference/vector4.rst:30
msgid ""
":ref:`Vector4<api_Vector4_Vector4>` (areal  x, areal  y, areal  z, areal  w)"
msgstr ""

#: ../../reference/vector4.rst:32
msgid ""
":ref:`Vector4<api_Vector4_Vector4>` (const Vector2 & v, areal  z, areal  w)"
msgstr ""

#: ../../reference/vector4.rst:34
msgid ":ref:`Vector4<api_Vector4_Vector4>` (const Vector3 & v, areal  w)"
msgstr ""

#: ../../reference/vector4.rst:36
msgid ":ref:`dot<api_Vector4_dot>` (const Vector4 & vector) const"
msgstr ""

#: ../../reference/vector4.rst:38
msgid ":ref:`length<api_Vector4_length>` () const"
msgstr ""

#: ../../reference/vector4.rst:40
msgid ":ref:`normalize<api_Vector4_normalize>` ()"
msgstr ""

#: ../../reference/vector4.rst:42
msgid ":ref:`sqrLength<api_Vector4_sqrLength>` () const"
msgstr ""

#: ../../reference/vector4.rst:44
msgid ""
":ref:`operator!=<api_Vector4_operator!=>` (const Vector4 & vector) const"
msgstr ""

#: ../../reference/vector4.rst:46
msgid ":ref:`operator*<api_Vector4_operator*>` (areal  factor) const"
msgstr ""

#: ../../reference/vector4.rst:48
msgid ":ref:`operator*<api_Vector4_operator*>` (const Vector4 & vector) const"
msgstr ""

#: ../../reference/vector4.rst:50 ../../reference/vector4.rst:54
#: ../../reference/vector4.rst:60 ../../reference/vector4.rst:64
msgid ":ref:`Vector4<api_Vector4>` &"
msgstr ""

#: ../../reference/vector4.rst:50
msgid ":ref:`operator*=<api_Vector4_operator*=>` (areal  factor)"
msgstr ""

#: ../../reference/vector4.rst:52
msgid ":ref:`operator+<api_Vector4_operator+>` (const Vector4 & vector) const"
msgstr ""

#: ../../reference/vector4.rst:54
msgid ":ref:`operator+=<api_Vector4_operator+=>` (const Vector4 & vector)"
msgstr ""

#: ../../reference/vector4.rst:56
msgid ":ref:`operator-<api_Vector4_operator->` () const"
msgstr ""

#: ../../reference/vector4.rst:58
msgid ":ref:`operator-<api_Vector4_operator->` (const Vector4 & vector) const"
msgstr ""

#: ../../reference/vector4.rst:60
msgid ":ref:`operator-=<api_Vector4_operator-=>` (const Vector4 & vector)"
msgstr ""

#: ../../reference/vector4.rst:62
msgid ":ref:`operator/<api_Vector4_operator/>` (areal  divisor) const"
msgstr ""

#: ../../reference/vector4.rst:64
msgid ":ref:`operator/=<api_Vector4_operator/=>` (areal  divisor)"
msgstr ""

#: ../../reference/vector4.rst:66
msgid ":ref:`operator<<api_Vector4_operator<>` (const Vector4 & vector) const"
msgstr ""

#: ../../reference/vector4.rst:68
msgid ""
":ref:`operator==<api_Vector4_operator==>` (const Vector4 & vector) const"
msgstr ""

#: ../../reference/vector4.rst:70
msgid ":ref:`operator><api_Vector4_operator>>` (const Vector4 & vector) const"
msgstr ""

#: ../../reference/vector4.rst:72
msgid ":ref:`operator[]<api_Vector4_operator[]>` (int  i)"
msgstr ""

#: ../../reference/vector4.rst:74
msgid ":ref:`operator[]<api_Vector4_operator[]>` (int  i) const"
msgstr ""

#: ../../reference/vector4.rst:89
msgid "**Vector4::Vector4** ()"
msgstr ""

#: ../../reference/vector4.rst:91
msgid "Constructs a null vector, i.e. with coordinates (0, 0, 0, 1)."
msgstr ""

#: ../../reference/vector4.rst:97
msgid "**Vector4::Vector4** (:ref:`areal<api_areal>`  *v*)"
msgstr ""

#: ../../reference/vector4.rst:105
msgid ""
"**Vector4::Vector4** (:ref:`areal<api_areal>`  *x*, :ref:`areal<api_areal>`  "
"*y*, :ref:`areal<api_areal>`  *z*, :ref:`areal<api_areal>`  *w*)"
msgstr ""

#: ../../reference/vector4.rst:107
msgid "Constructs a vector *w*ith coordinates (x, *y*, *z*, *w*)."
msgstr ""

#: ../../reference/vector4.rst:113
msgid ""
"**Vector4::Vector4** (:ref:`Vector2<api_Vector2>` & *v*, :ref:"
"`areal<api_areal>`  *z*, :ref:`areal<api_areal>`  *w*)"
msgstr ""

#: ../../reference/vector4.rst:115
msgid ""
"Constructs a 4D *v*ector from the specified 2D *v*. The *z* and *w* "
"coordinates is set to *z* and *w*."
msgstr ""

#: ../../reference/vector4.rst:123
msgid ""
"**Vector4::Vector4** (:ref:`Vector3<api_Vector3>` & *v*, :ref:"
"`areal<api_areal>`  *w*)"
msgstr ""

#: ../../reference/vector4.rst:125
msgid ""
"Constructs a 4D *v*ector from the specified 3D *v*. The *w* coordinate is "
"set to *w*."
msgstr ""

#: ../../reference/vector4.rst:127
msgid "**See also** Vector3::Vector3()."
msgstr ""

#: ../../reference/vector4.rst:133
msgid ""
":ref:`areal<api_areal>`  **Vector4::dot** (:ref:`Vector4<api_Vector4>` & "
"*vector*) const"
msgstr ""

#: ../../reference/vector4.rst:141
msgid ":ref:`areal<api_areal>`  **Vector4::length** () const"
msgstr ""

#: ../../reference/vector4.rst:151
msgid ":ref:`areal<api_areal>`  **Vector4::normalize** ()"
msgstr ""

#: ../../reference/vector4.rst:161
msgid ":ref:`areal<api_areal>`  **Vector4::sqrLength** () const"
msgstr ""

#: ../../reference/vector4.rst:171
msgid ""
":ref:`bool<api_bool>`  **Vector4::operator!=** (:ref:`Vector4<api_Vector4>` "
"& *vector*) const"
msgstr ""

#: ../../reference/vector4.rst:179
msgid ""
":ref:`Vector4<api_Vector4>`  **Vector4::operator*** (:ref:"
"`areal<api_areal>`  *factor*) const"
msgstr ""

#: ../../reference/vector4.rst:189
msgid ""
":ref:`Vector4<api_Vector4>`  **Vector4::operator*** (:ref:"
"`Vector4<api_Vector4>` & *vector*) const"
msgstr ""

#: ../../reference/vector4.rst:199
msgid ""
":ref:`Vector4<api_Vector4>` & **Vector4::operator*=** (:ref:"
"`areal<api_areal>`  *factor*)"
msgstr ""

#: ../../reference/vector4.rst:209
msgid ""
":ref:`Vector4<api_Vector4>`  **Vector4::operator+** (:ref:"
"`Vector4<api_Vector4>` & *vector*) const"
msgstr ""

#: ../../reference/vector4.rst:211
msgid ""
"Returns a Vector4 object that is the sum of the this *vector* and *vector*; "
"each component is added separately."
msgstr ""

#: ../../reference/vector4.rst:219
msgid ""
":ref:`Vector4<api_Vector4>` & **Vector4::operator+=** (:ref:"
"`Vector4<api_Vector4>` & *vector*)"
msgstr ""

#: ../../reference/vector4.rst:229
msgid ":ref:`Vector4<api_Vector4>`  **Vector4::operator-** () const"
msgstr ""

#: ../../reference/vector4.rst:231
msgid ""
"Returns a Vector4 object that is formed by changing the sign of all three "
"components of the this vector."
msgstr ""

#: ../../reference/vector4.rst:233
msgid "Equivalent to Vector4(0,0,0,1) - vector."
msgstr ""

#: ../../reference/vector4.rst:239
msgid ""
":ref:`Vector4<api_Vector4>`  **Vector4::operator-** (:ref:"
"`Vector4<api_Vector4>` & *vector*) const"
msgstr ""

#: ../../reference/vector4.rst:241
msgid ""
"Returns a Vector4 object that is formed by subtracting *vector* from this "
"*vector*; each component is subtracted separately."
msgstr ""

#: ../../reference/vector4.rst:249
msgid ""
":ref:`Vector4<api_Vector4>` & **Vector4::operator-=** (:ref:"
"`Vector4<api_Vector4>` & *vector*)"
msgstr ""

#: ../../reference/vector4.rst:259
msgid ""
":ref:`Vector4<api_Vector4>`  **Vector4::operator/** (:ref:"
"`areal<api_areal>`  *divisor*) const"
msgstr ""

#: ../../reference/vector4.rst:269
msgid ""
":ref:`Vector4<api_Vector4>` & **Vector4::operator/=** (:ref:"
"`areal<api_areal>`  *divisor*)"
msgstr ""

#: ../../reference/vector4.rst:279
msgid ""
":ref:`bool<api_bool>`  **Vector4::operator<** (:ref:`Vector4<api_Vector4>` & "
"*vector*) const"
msgstr ""

#: ../../reference/vector4.rst:287
msgid ""
":ref:`bool<api_bool>`  **Vector4::operator==** (:ref:`Vector4<api_Vector4>` "
"& *vector*) const"
msgstr ""

#: ../../reference/vector4.rst:295
msgid ""
":ref:`bool<api_bool>`  **Vector4::operator>** (:ref:`Vector4<api_Vector4>` & "
"*vector*) const"
msgstr ""

#: ../../reference/vector4.rst:303
msgid ""
":ref:`areal<api_areal>` & **Vector4::operator[]** (:ref:`int<api_int>`  *i*)"
msgstr ""

#: ../../reference/vector4.rst:305
msgid ""
"Returns the component of the vector at *i*ndex position *i* as a modifiable "
"reference. *i* must be a valid *i*ndex position *i*n the vector (i.e., 0 <= "
"*i* < 4)."
msgstr ""

#: ../../reference/vector4.rst:311
msgid ""
":ref:`areal<api_areal>`  **Vector4::operator[]** (:ref:`int<api_int>`  *i*) "
"const"
msgstr ""

#: ../../reference/vector4.rst:313
msgid ""
"Returns the component of the vector at *i*ndex position. *i* must be a valid "
"*i*ndex position *i*n the vector (i.e., 0 <= *i* < 4)."
msgstr ""

#: ../../reference/resource-module.rst:4
msgid "Resource Module"
msgstr ""

#: ../../reference/animationclip.rst:3
msgid "AnimationClip Class"
msgstr ""

#: ../../reference/animationclip.rst:5 ../../reference/text.rst:5
#: ../../reference/texture.rst:5 ../../reference/translator.rst:5
msgid "Inherited: :ref:`Resource<api_Resource>`"
msgstr ""

#: ../../reference/animationclip.rst:11
msgid "AnimationClip resource contains keyframe based animation data."
msgstr ""

#: ../../reference/animationclip.rst:13
msgid ""
"An AnimationClip resource contains keyframe based animation data. The "
"animation data split to a number of tracks that must be connected with the "
"properties of Components. Each track can contain multiple curves or channels "
"like X, Y and Z Which allows them to animate elements independently."
msgstr ""

#: ../../reference/animationclip.rst:22
msgid ":ref:`duration<api_AnimationClip_duration>` () const"
msgstr ""

#: ../../reference/animationclip.rst:37
msgid ":ref:`int<api_int>`  **AnimationClip::duration** () const"
msgstr ""

#: ../../reference/animationclip.rst:39
msgid "Returns duration of the animation clip in milliseconds."
msgstr ""

#: ../../reference/font.rst:3
msgid "Font Class"
msgstr ""

#: ../../reference/font.rst:5
msgid "Inherited: :ref:`Atlas<api_Atlas>`"
msgstr ""

#: ../../reference/font.rst:11
msgid "The Font resource provides support for vector fonts."
msgstr ""

#: ../../reference/font.rst:13
msgid ""
"The basic element of a font is a glyph. All required glyphs are contained in "
"a special texture - Atlas. If at the moment of accessing the font the glyph "
"is not present in the atlas, the glyph will be loaded there dynamically."
msgstr ""

#: ../../reference/font.rst:22
msgid ":ref:`Font<api_Font_Font>` ()"
msgstr ""

#: ../../reference/font.rst:24
msgid ":ref:`~Font<api_Font_~Font>` ()"
msgstr ""

#: ../../reference/font.rst:26
msgid ":ref:`atlasIndex<api_Font_atlasIndex>` (in  int) const"
msgstr ""

#: ../../reference/font.rst:28
msgid ":ref:`clear<api_Font_clear>` ()"
msgstr ""

#: ../../reference/font.rst:30
msgid ":ref:`length<api_Font_length>` (const int & ) const"
msgstr ""

#: ../../reference/font.rst:32
msgid ":ref:`lineHeight<api_Font_lineHeight>` () const"
msgstr ""

#: ../../reference/font.rst:34
msgid ""
":ref:`requestCharacters<api_Font_requestCharacters>` (const int & characters)"
msgstr ""

#: ../../reference/font.rst:36
msgid ":ref:`requestKerning<api_Font_requestKerning>` (in  int) const"
msgstr ""

#: ../../reference/font.rst:38
msgid ":ref:`spaceWidth<api_Font_spaceWidth>` () const"
msgstr ""

#: ../../reference/font.rst:53
msgid "**Font::Font** ()"
msgstr ""

#: ../../reference/font.rst:55
msgid "Default constructs an instance of Font."
msgstr ""

#: ../../reference/font.rst:61
msgid "**Font::~Font** ()"
msgstr ""

#: ../../reference/font.rst:63
msgid "Destroys the instance of Font. The destructor is virtual."
msgstr ""

#: ../../reference/font.rst:69
msgid ""
":ref:`int<api_int>`  **Font::atlasIndex** (:ref:`in<api_in>`  *int*) const"
msgstr ""

#: ../../reference/font.rst:71
msgid "Returns the index of the glyph in the atlas."
msgstr ""

#: ../../reference/font.rst:77
msgid ":ref:`void<api_void>`  **Font::clear** ()"
msgstr ""

#: ../../reference/font.rst:79
msgid "Cleans up all font data."
msgstr ""

#: ../../reference/font.rst:85
msgid ":ref:`int<api_int>`  **Font::length** (:ref:`int<api_int>` & **) const"
msgstr ""

#: ../../reference/font.rst:87
msgid "Returns **the **number **of **characters **in **the **string."
msgstr ""

#: ../../reference/font.rst:93
msgid ":ref:`float<api_float>`  **Font::lineHeight** () const"
msgstr ""

#: ../../reference/font.rst:95
msgid "Returns visual height for the font in world units."
msgstr ""

#: ../../reference/font.rst:101
msgid ""
":ref:`void<api_void>`  **Font::requestCharacters** (:ref:`int<api_int>` & "
"*characters*)"
msgstr ""

#: ../../reference/font.rst:103
msgid "Requests *characters* to be added to the font atlas."
msgstr ""

#: ../../reference/font.rst:109
msgid ""
":ref:`int<api_int>`  **Font::requestKerning** (:ref:`in<api_in>`  *int*) "
"const"
msgstr ""

#: ../../reference/font.rst:111
msgid "Returns the kerning offset between a glyph and previous glyph."
msgstr ""

#: ../../reference/font.rst:113
msgid ""
"**Note:** In case of font doesn't support kerning this method will return 0."
msgstr ""

#: ../../reference/font.rst:119
msgid ":ref:`float<api_float>`  **Font::spaceWidth** () const"
msgstr ""

#: ../../reference/font.rst:121
msgid "Returns visual width of space character for the font in world units."
msgstr ""

#: ../../reference/rendertexture.rst:3
msgid "RenderTexture Class"
msgstr ""

#: ../../reference/rendertexture.rst:5
msgid "Inherited: :ref:`Texture<api_Texture>`"
msgstr ""

#: ../../reference/rendertexture.rst:11
msgid "Render textures are textures that can be rendered to."
msgstr ""

#: ../../reference/rendertexture.rst:20
msgid ":ref:`RenderTexture<api_RenderTexture_RenderTexture>` ()"
msgstr ""

#: ../../reference/rendertexture.rst:22
msgid ":ref:`~RenderTexture<api_RenderTexture_~RenderTexture>` ()"
msgstr ""

#: ../../reference/rendertexture.rst:24
msgid ":ref:`depth<api_RenderTexture_depth>` () const"
msgstr ""

#: ../../reference/rendertexture.rst:26
msgid ":ref:`resize<api_RenderTexture_resize>` (int  width, int  height)"
msgstr ""

#: ../../reference/rendertexture.rst:28
msgid ":ref:`setDepth<api_RenderTexture_setDepth>` (int  bits)"
msgstr ""

#: ../../reference/rendertexture.rst:30
msgid ":ref:`setFixed<api_RenderTexture_setFixed>` (bool  fixed)"
msgstr ""

#: ../../reference/rendertexture.rst:32
msgid ""
":ref:`setTarget<api_RenderTexture_setTarget>` (Texture::FormatType  format)"
msgstr ""

#: ../../reference/rendertexture.rst:47
msgid "**RenderTexture::RenderTexture** ()"
msgstr ""

#: ../../reference/rendertexture.rst:49
msgid "Default constructs an instance of RenderTexture."
msgstr ""

#: ../../reference/rendertexture.rst:55
msgid "**RenderTexture::~RenderTexture** ()"
msgstr ""

#: ../../reference/rendertexture.rst:57
msgid "Destroys the instance of RenderTexture. The destructor is virtual."
msgstr ""

#: ../../reference/rendertexture.rst:63
msgid ":ref:`int<api_int>`  **RenderTexture::depth** () const"
msgstr ""

#: ../../reference/rendertexture.rst:65
msgid "Returns the precision of the render texture's depth buffer in bits."
msgstr ""

#: ../../reference/rendertexture.rst:67
msgid "**See also** setDepth()."
msgstr ""

#: ../../reference/rendertexture.rst:73
msgid ""
":ref:`void<api_void>`  **RenderTexture::resize** (:ref:`int<api_int>`  "
"*width*, :ref:`int<api_int>`  *height*)"
msgstr ""

#: ../../reference/rendertexture.rst:75
msgid ""
"Changes current size of the render texture with new *width*, *height* and "
"sets resource state to ResourceState::ToBeUpdated."
msgstr ""

#: ../../reference/rendertexture.rst:81
msgid ""
":ref:`void<api_void>`  **RenderTexture::setDepth** (:ref:`int<api_int>`  "
"*bits*)"
msgstr ""

#: ../../reference/rendertexture.rst:83
msgid "Sets the precision of the render texture's depth buffer in *bits*."
msgstr ""

#: ../../reference/rendertexture.rst:85
msgid "**See also** depth()."
msgstr ""

#: ../../reference/rendertexture.rst:91
msgid ""
":ref:`void<api_void>`  **RenderTexture::setFixed** (:ref:`bool<api_bool>`  "
"*fixed*)"
msgstr ""

#: ../../reference/rendertexture.rst:93
msgid ""
"Sets the *fixed* flag for the render texture. If true the resize() method "
"will not take effect."
msgstr ""

#: ../../reference/rendertexture.rst:99
msgid ""
":ref:`void<api_void>`  **RenderTexture::setTarget** (:ref:`Texture::"
"FormatType<api_Texture::FormatType>`  *format*)"
msgstr ""

#: ../../reference/rendertexture.rst:101
msgid ""
"Sets *format* type of texture and sets resource state to ResourceState::"
"ToBeUpdated. For more details please see the Texture::FormatType enum."
msgstr ""

#: ../../reference/resource.rst:3
msgid "Resource Class"
msgstr ""

#: ../../reference/resource.rst:11
msgid "Base class for every resource in Thunder Engine."
msgstr ""

#: ../../reference/resource.rst:22
msgid ":ref:`Resource<api_Resource_Resource>` ()"
msgstr ""

#: ../../reference/resource.rst:24
msgid ":ref:`~Resource<api_Resource_~Resource>` ()"
msgstr ""

#: ../../reference/resource.rst:26
msgid ":ref:`decRef<api_Resource_decRef>` ()"
msgstr ""

#: ../../reference/resource.rst:28
msgid ":ref:`incRef<api_Resource_incRef>` ()"
msgstr ""

#: ../../reference/resource.rst:30
msgid ":ref:`setState<api_Resource_setState>` (Resource::ResourceState  state)"
msgstr ""

#: ../../reference/resource.rst:32
msgid ":ref:`Resource::ResourceState<api_Resource::ResourceState>`"
msgstr ""

#: ../../reference/resource.rst:32
msgid ":ref:`state<api_Resource_state>` () const"
msgstr ""

#: ../../reference/resource.rst:47
msgid "**Resource::Resource** ()"
msgstr ""

#: ../../reference/resource.rst:49
msgid "Default constructs an instance of Resource."
msgstr ""

#: ../../reference/resource.rst:55
msgid "**Resource::~Resource** ()"
msgstr ""

#: ../../reference/resource.rst:57
msgid "Destroys the instance of Resource. The destructor is virtual."
msgstr ""

#: ../../reference/resource.rst:63
msgid ":ref:`void<api_void>`  **Resource::decRef** ()"
msgstr ""

#: ../../reference/resource.rst:65
msgid ""
"Decreases the reference counter for the resource. In case of the reference "
"count becomes zero the resource set to ResourceState::Suspend state."
msgstr ""

#: ../../reference/resource.rst:71
msgid ":ref:`void<api_void>`  **Resource::incRef** ()"
msgstr ""

#: ../../reference/resource.rst:73
msgid "Increases the reference counter for the resource."
msgstr ""

#: ../../reference/resource.rst:79
msgid ""
":ref:`void<api_void>`  **Resource::setState** (:ref:`Resource::"
"ResourceState<api_Resource::ResourceState>`  *state*)"
msgstr ""

#: ../../reference/resource.rst:81
msgid "Sets new *state* for the resource."
msgstr ""

#: ../../reference/resource.rst:83
msgid "**See also** *state*()."
msgstr ""

#: ../../reference/resource.rst:89
msgid ""
":ref:`Resource::ResourceState<api_Resource::ResourceState>`  **Resource::"
"state** () const"
msgstr ""

#: ../../reference/resource.rst:91
msgid ""
"Returns state for the resource. For possible states please see Resource::"
"ResourceState."
msgstr ""

#: ../../reference/resource.rst:93
msgid "**See also** setState()."
msgstr ""

#: ../../reference/text.rst:3
msgid "Text Class"
msgstr ""

#: ../../reference/text.rst:11
msgid "Text file resource."
msgstr ""

#: ../../reference/text.rst:20
msgid ":ref:`Text<api_Text_Text>` ()"
msgstr ""

#: ../../reference/text.rst:22
msgid ":ref:`~Text<api_Text_~Text>` ()"
msgstr ""

#: ../../reference/text.rst:24
msgid ":ref:`char<api_char>` *"
msgstr ""

#: ../../reference/text.rst:24
msgid ":ref:`data<api_Text_data>` () const"
msgstr ""

#: ../../reference/text.rst:26
msgid ":ref:`setSize<api_Text_setSize>` (int  size)"
msgstr ""

#: ../../reference/text.rst:28
msgid ":ref:`size<api_Text_size>` () const"
msgstr ""

#: ../../reference/text.rst:30
msgid ":ref:`text<api_Text_text>` ()"
msgstr ""

#: ../../reference/text.rst:45
msgid "**Text::Text** ()"
msgstr ""

#: ../../reference/text.rst:47
msgid "Default constructs an instance of Text."
msgstr ""

#: ../../reference/text.rst:53
msgid "**Text::~Text** ()"
msgstr ""

#: ../../reference/text.rst:55
msgid "Destroys the instance of Text. The destructor is virtual."
msgstr ""

#: ../../reference/text.rst:61
msgid ":ref:`char<api_char>` * **Text::data** () const"
msgstr ""

#: ../../reference/text.rst:63
msgid "Returns text content as a raw byte array."
msgstr ""

#: ../../reference/text.rst:69
msgid ":ref:`void<api_void>`  **Text::setSize** (:ref:`int<api_int>`  *size*)"
msgstr ""

#: ../../reference/text.rst:71
msgid "Sets the new *size* of the text resource."
msgstr ""

#: ../../reference/text.rst:73
msgid "**See also** *size*()."
msgstr ""

#: ../../reference/text.rst:79
msgid ":ref:`int<api_int>`  **Text::size** () const"
msgstr ""

#: ../../reference/text.rst:81
msgid "Returns size of the text resource."
msgstr ""

#: ../../reference/text.rst:83
msgid "**See also** setSize()."
msgstr ""

#: ../../reference/text.rst:89
msgid ":ref:`int<api_int>`  **Text::text** ()"
msgstr ""

#: ../../reference/text.rst:91
msgid "Returns text content as a tring."
msgstr ""

#: ../../reference/texture.rst:3
msgid "Texture Class"
msgstr ""

#: ../../reference/texture.rst:11
msgid "Texture resource contains all necessary texture data."
msgstr ""

#: ../../reference/texture.rst:13
msgid ""
"This class can be used to handle texture resource or create them at runtime."
msgstr ""

#: ../../reference/texture.rst:22
msgid ":ref:`Texture<api_Texture_Texture>` ()"
msgstr ""

#: ../../reference/texture.rst:24
msgid ":ref:`~Texture<api_Texture_~Texture>` ()"
msgstr ""

#: ../../reference/texture.rst:26
msgid ""
":ref:`addSurface<api_Texture_addSurface>` (const Texture::Surface & surface)"
msgstr ""

#: ../../reference/texture.rst:28
msgid ":ref:`Texture::FilteringType<api_Texture::FilteringType>`"
msgstr ""

#: ../../reference/texture.rst:28
msgid ":ref:`filtering<api_Texture_filtering>` () const"
msgstr ""

#: ../../reference/texture.rst:30
msgid ":ref:`Texture::FormatType<api_Texture::FormatType>`"
msgstr ""

#: ../../reference/texture.rst:30
msgid ":ref:`format<api_Texture_format>` () const"
msgstr ""

#: ../../reference/texture.rst:32
msgid ":ref:`getPixel<api_Texture_getPixel>` (in  int) const"
msgstr ""

#: ../../reference/texture.rst:34
msgid ":ref:`height<api_Texture_height>` () const"
msgstr ""

#: ../../reference/texture.rst:36
msgid ":ref:`isCompressed<api_Texture_isCompressed>` () const"
msgstr ""

#: ../../reference/texture.rst:38
msgid ":ref:`isCubemap<api_Texture_isCubemap>` () const"
msgstr ""

#: ../../reference/texture.rst:40
msgid ""
":ref:`readPixels<api_Texture_readPixels>` (int  x, int  y, int  width, int  "
"height)"
msgstr ""

#: ../../reference/texture.rst:42
msgid ":ref:`resize<api_Texture_resize>` (int  width, int  height)"
msgstr ""

#: ../../reference/texture.rst:44
msgid ":ref:`setDirty<api_Texture_setDirty>` ()"
msgstr ""

#: ../../reference/texture.rst:46
msgid ""
":ref:`setFiltering<api_Texture_setFiltering>` (Texture::FilteringType  type)"
msgstr ""

#: ../../reference/texture.rst:48
msgid ":ref:`setFormat<api_Texture_setFormat>` (Texture::FormatType  type)"
msgstr ""

#: ../../reference/texture.rst:50
msgid ":ref:`setHeight<api_Texture_setHeight>` (int  height)"
msgstr ""

#: ../../reference/texture.rst:52
msgid ":ref:`setShape<api_Texture_setShape>` (const Vector2Vector & shape)"
msgstr ""

#: ../../reference/texture.rst:54
msgid ":ref:`setWidth<api_Texture_setWidth>` (int  width)"
msgstr ""

#: ../../reference/texture.rst:56
msgid ":ref:`setWrap<api_Texture_setWrap>` (Texture::WrapType  type)"
msgstr ""

#: ../../reference/texture.rst:58
msgid ":ref:`Vector2Vector<api_Vector2Vector>`"
msgstr ""

#: ../../reference/texture.rst:58
msgid ":ref:`shape<api_Texture_shape>` () const"
msgstr ""

#: ../../reference/texture.rst:60
msgid ":ref:`Texture::Surface<api_Texture::Surface>` &"
msgstr ""

#: ../../reference/texture.rst:60
msgid ":ref:`surface<api_Texture_surface>` (int  face)"
msgstr ""

#: ../../reference/texture.rst:62
msgid ":ref:`width<api_Texture_width>` () const"
msgstr ""

#: ../../reference/texture.rst:64
msgid ":ref:`Texture::WrapType<api_Texture::WrapType>`"
msgstr ""

#: ../../reference/texture.rst:64
msgid ":ref:`wrap<api_Texture_wrap>` () const"
msgstr ""

#: ../../reference/texture.rst:79
msgid "**Texture::Texture** ()"
msgstr ""

#: ../../reference/texture.rst:81
msgid "Default constructs an instance of Texture."
msgstr ""

#: ../../reference/texture.rst:87
msgid "**Texture::~Texture** ()"
msgstr ""

#: ../../reference/texture.rst:89
msgid "Destroys the instance of Texture. The destructor is virtual."
msgstr ""

#: ../../reference/texture.rst:95
msgid ""
":ref:`void<api_void>`  **Texture::addSurface** (:ref:`Texture::"
"Surface<api_Texture::Surface>` & *surface*)"
msgstr ""

#: ../../reference/texture.rst:97
msgid ""
"Adds *surface* to the texture. Each texture must contain at least one "
"*surface*. Commonly used to set *surface*s for the cube maps."
msgstr ""

#: ../../reference/texture.rst:103
msgid ""
":ref:`Texture::FilteringType<api_Texture::FilteringType>`  **Texture::"
"filtering** () const"
msgstr ""

#: ../../reference/texture.rst:105
msgid ""
"Returns filtering type of texture. For more details please see the Texture::"
"FilteringType enum."
msgstr ""

#: ../../reference/texture.rst:107
msgid "**See also** setFiltering()."
msgstr ""

#: ../../reference/texture.rst:113
msgid ""
":ref:`Texture::FormatType<api_Texture::FormatType>`  **Texture::format** () "
"const"
msgstr ""

#: ../../reference/texture.rst:115
msgid ""
"Returns format type of texture. For more details please see the Texture::"
"FormatType enum."
msgstr ""

#: ../../reference/texture.rst:117
msgid "**See also** setFormat()."
msgstr ""

#: ../../reference/texture.rst:123
msgid ""
":ref:`int<api_int>`  **Texture::getPixel** (:ref:`in<api_in>`  *int*) const"
msgstr ""

#: ../../reference/texture.rst:125
msgid ""
"Returns pixel color as RGBA *int*eger for example 0x00ff00ff which can be "
"mapped to (0, 255, 0, 255)"
msgstr ""

#: ../../reference/texture.rst:131
msgid ":ref:`int<api_int>`  **Texture::height** () const"
msgstr ""

#: ../../reference/texture.rst:133
msgid "Returns height for the texture."
msgstr ""

#: ../../reference/texture.rst:135
msgid "**See also** setHeight()."
msgstr ""

#: ../../reference/texture.rst:141
msgid ":ref:`bool<api_bool>`  **Texture::isCompressed** () const"
msgstr ""

#: ../../reference/texture.rst:143
msgid ""
"Returns true if texture uses one of the compression formats; otherwise "
"returns false."
msgstr ""

#: ../../reference/texture.rst:149
msgid ":ref:`bool<api_bool>`  **Texture::isCubemap** () const"
msgstr ""

#: ../../reference/texture.rst:151
msgid "Returns true if the texture is a cube map; otherwise returns false."
msgstr ""

#: ../../reference/texture.rst:157
msgid ""
":ref:`void<api_void>`  **Texture::readPixels** (:ref:`int<api_int>`  *x*, :"
"ref:`int<api_int>`  *y*, :ref:`int<api_int>`  *width*, :ref:`int<api_int>`  "
"*height*)"
msgstr ""

#: ../../reference/texture.rst:159
msgid "Read pixels from GPU into texture data."
msgstr ""

#: ../../reference/texture.rst:165
msgid ""
":ref:`void<api_void>`  **Texture::resize** (:ref:`int<api_int>`  *width*, :"
"ref:`int<api_int>`  *height*)"
msgstr ""

#: ../../reference/texture.rst:167
msgid "Sets new *width* and *height* for the texture."
msgstr ""

#: ../../reference/texture.rst:173
msgid ":ref:`void<api_void>`  **Texture::setDirty** ()"
msgstr ""

#: ../../reference/texture.rst:175
msgid ""
"Marks texture as dirty. That means this texture must be forcefully reloaded."
msgstr ""

#: ../../reference/texture.rst:181
msgid ""
":ref:`void<api_void>`  **Texture::setFiltering** (:ref:`Texture::"
"FilteringType<api_Texture::FilteringType>`  *type*)"
msgstr ""

#: ../../reference/texture.rst:183
msgid ""
"Sets filtering *type* of texture. For more details please see the Texture::"
"FilteringType enum."
msgstr ""

#: ../../reference/texture.rst:185
msgid "**See also** filtering()."
msgstr ""

#: ../../reference/texture.rst:191
msgid ""
":ref:`void<api_void>`  **Texture::setFormat** (:ref:`Texture::"
"FormatType<api_Texture::FormatType>`  *type*)"
msgstr ""

#: ../../reference/texture.rst:193
msgid ""
"Sets format *type* of texture. For more details please see the Texture::"
"FormatType enum."
msgstr ""

#: ../../reference/texture.rst:195
msgid "**See also** format()."
msgstr ""

#: ../../reference/texture.rst:201
msgid ""
":ref:`void<api_void>`  **Texture::setHeight** (:ref:`int<api_int>`  *height*)"
msgstr ""

#: ../../reference/texture.rst:203
msgid "Sets new *height* for the texture."
msgstr ""

#: ../../reference/texture.rst:205
msgid "**See also** *height*()."
msgstr ""

#: ../../reference/texture.rst:211
msgid ""
":ref:`void<api_void>`  **Texture::setShape** (:ref:"
"`Vector2Vector<api_Vector2Vector>` & *shape*)"
msgstr ""

#: ../../reference/texture.rst:213
msgid "Sets the bounding *shape* for the texture."
msgstr ""

#: ../../reference/texture.rst:215
msgid "**See also** *shape*()."
msgstr ""

#: ../../reference/texture.rst:221
msgid ""
":ref:`void<api_void>`  **Texture::setWidth** (:ref:`int<api_int>`  *width*)"
msgstr ""

#: ../../reference/texture.rst:223
msgid "Sets new *width* for the texture."
msgstr ""

#: ../../reference/texture.rst:225
msgid "**See also** *width*()."
msgstr ""

#: ../../reference/texture.rst:231
msgid ""
":ref:`void<api_void>`  **Texture::setWrap** (:ref:`Texture::"
"WrapType<api_Texture::WrapType>`  *type*)"
msgstr ""

#: ../../reference/texture.rst:233
msgid ""
"Sets the *type* of warp policy. For more details please see the Texture::"
"WrapType enum."
msgstr ""

#: ../../reference/texture.rst:235
msgid "**See also** wrap()."
msgstr ""

#: ../../reference/texture.rst:241
msgid ":ref:`Vector2Vector<api_Vector2Vector>`  **Texture::shape** () const"
msgstr ""

#: ../../reference/texture.rst:243
msgid "Returns the bounding shape for the texture."
msgstr ""

#: ../../reference/texture.rst:245
msgid "**See also** setShape()."
msgstr ""

#: ../../reference/texture.rst:251
msgid ""
":ref:`Texture::Surface<api_Texture::Surface>` & **Texture::surface** (:ref:"
"`int<api_int>`  *face*)"
msgstr ""

#: ../../reference/texture.rst:253
msgid ""
"Returns a surface for the provided *face*. Each texture must contain at "
"least one surface. Commonly used to set surfaces for the cube maps."
msgstr ""

#: ../../reference/texture.rst:259
msgid ":ref:`int<api_int>`  **Texture::width** () const"
msgstr ""

#: ../../reference/texture.rst:261
msgid "Returns width for the texture."
msgstr ""

#: ../../reference/texture.rst:263
msgid "**See also** setWidth()."
msgstr ""

#: ../../reference/texture.rst:269
msgid ""
":ref:`Texture::WrapType<api_Texture::WrapType>`  **Texture::wrap** () const"
msgstr ""

#: ../../reference/texture.rst:271
msgid ""
"Returns the type of warp policy. For more details please see the Texture::"
"WrapType enum."
msgstr ""

#: ../../reference/translator.rst:3
msgid "Translator Class"
msgstr ""

#: ../../reference/translator.rst:11
msgid "Translator resource provides a translation table."
msgstr ""

#: ../../reference/translator.rst:20
msgid ":ref:`Translator<api_Translator_Translator>` ()"
msgstr ""

#: ../../reference/translator.rst:22
msgid ":ref:`~Translator<api_Translator_~Translator>` ()"
msgstr ""

#: ../../reference/translator.rst:24
msgid ":ref:`translate<api_Translator_translate>` (const int & ) const"
msgstr ""

#: ../../reference/translator.rst:39
msgid "**Translator::Translator** ()"
msgstr ""

#: ../../reference/translator.rst:41
msgid "Default constructs an instance of Translator."
msgstr ""

#: ../../reference/translator.rst:47
msgid "**Translator::~Translator** ()"
msgstr ""

#: ../../reference/translator.rst:49
msgid "Destroys the instance of Translator. The destructor is virtual."
msgstr ""

#: ../../reference/translator.rst:55
msgid ""
":ref:`int<api_int>`  **Translator::translate** (:ref:`int<api_int>` & **) "
"const"
msgstr ""

#: ../../reference/translator.rst:57
msgid "Returns **the **translated **source **string."
msgstr ""
