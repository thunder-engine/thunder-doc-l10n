# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Evgeniy Prikazchikov
# This file is distributed under the same license as the Thunder Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Thunder Engine \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-15 12:05+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../reference/file.rst:3
msgid "File Class"
msgstr ""

#: ../../reference/file.rst:5
msgid "Inherited: None"
msgstr ""

#: ../../reference/file.rst:9
msgid "Description"
msgstr ""

#: ../../reference/file.rst:11
msgid "Basic file system I/O module."
msgstr ""

#: ../../reference/file.rst:13
msgid ""
"The File class provides an interface for reading from and writing to "
"files. File expects the file separator to be '/' regardless of operating "
"system. The use of other separators (e.g., '') is not supported."
msgstr ""

#: ../../reference/file.rst:15
msgid ""
"You can check for a file's existence using _exists(), and remove a file "
"using _delete(). You can create a directory using _mkdir(), list all "
"files in directory using _flist() and retrive other basic information."
msgstr ""

#: ../../reference/file.rst:17
msgid ""
"The file can be opened with _open() and closed with _fclose(). Data is "
"usually can be read with _fread() and written with _fwrite()."
msgstr ""

#: ../../reference/file.rst:19
msgid "Common usecase:"
msgstr ""

#: ../../reference/file.rst:25
msgid "Public Methods"
msgstr ""

#: ../../reference/file.rst:28 ../../reference/file.rst:30
#: ../../reference/file.rst:48 ../../reference/file.rst:50
msgid ":ref:`bool<api_bool>`"
msgstr ""

#: ../../reference/file.rst:28
msgid ":ref:`_delete<api_File__delete>` (const char * path)"
msgstr ""

#: ../../reference/file.rst:30
msgid ":ref:`_exists<api_File__exists>` (const char * path)"
msgstr ""

#: ../../reference/file.rst:32
msgid ":ref:`int<api_int>`"
msgstr ""

#: ../../reference/file.rst:32
msgid ":ref:`_fclose<api_File__fclose>` (_FILE * stream)"
msgstr ""

#: ../../reference/file.rst:34
msgid ":ref:`StringList<api_StringList>`"
msgstr ""

#: ../../reference/file.rst:34
msgid ":ref:`_flist<api_File__flist>` (const char * path)"
msgstr ""

#: ../../reference/file.rst:36
msgid ":ref:`_FILE<api__FILE>` *"
msgstr ""

#: ../../reference/file.rst:36
msgid ":ref:`_fopen<api_File__fopen>` (const char * path, const char * mode)"
msgstr ""

#: ../../reference/file.rst:38 ../../reference/file.rst:40
#: ../../reference/file.rst:42 ../../reference/file.rst:44
#: ../../reference/file.rst:46
msgid ":ref:`_size_t<api__size_t>`"
msgstr ""

#: ../../reference/file.rst:38
msgid ""
":ref:`_fread<api_File__fread>` (void * ptr, _size_t  size, _size_t  "
"count, _FILE * stream)"
msgstr ""

#: ../../reference/file.rst:40
msgid ":ref:`_fseek<api_File__fseek>` (_FILE * stream, int  origin)"
msgstr ""

#: ../../reference/file.rst:42
msgid ":ref:`_fsize<api_File__fsize>` (_FILE * stream)"
msgstr ""

#: ../../reference/file.rst:44
msgid ":ref:`_ftell<api_File__ftell>` (_FILE * stream)"
msgstr ""

#: ../../reference/file.rst:46
msgid ""
":ref:`_fwrite<api_File__fwrite>` (const void * ptr, _size_t  size, "
"_size_t  count, _FILE * stream)"
msgstr ""

#: ../../reference/file.rst:48
msgid ":ref:`_isdir<api_File__isdir>` (const char * path)"
msgstr ""

#: ../../reference/file.rst:50
msgid ":ref:`_mkdir<api_File__mkdir>` (const char * path)"
msgstr ""

#: ../../reference/file.rst:52 ../../reference/file.rst:54
msgid ":ref:`void<api_void>`"
msgstr ""

#: ../../reference/file.rst:52
msgid ":ref:`finit<api_File_finit>` (const char * argv0)"
msgstr ""

#: ../../reference/file.rst:54
msgid ""
":ref:`fsearchPathAdd<api_File_fsearchPathAdd>` (const char * path, bool  "
"isFirst = false)"
msgstr ""

#: ../../reference/file.rst:59
msgid "Static Methods"
msgstr ""

#: ../../reference/file.rst:61
msgid "None"
msgstr ""

#: ../../reference/file.rst:65
msgid "Methods Description"
msgstr ""

#: ../../reference/file.rst:69
msgid ":ref:`bool<api_bool>`  **File::_delete** (:ref:`char<api_char>` * *path*)"
msgstr ""

#: ../../reference/file.rst:71
msgid ""
"Delete file. Returns true if the operation succeeded; otherwise returns "
"false."
msgstr ""

#: ../../reference/file.rst:73
msgid "**Note:** The file can be deleted only if *path* marked as writable."
msgstr ""

#: ../../reference/file.rst:79
msgid ":ref:`bool<api_bool>`  **File::_exists** (:ref:`char<api_char>` * *path*)"
msgstr ""

#: ../../reference/file.rst:81
msgid ""
"Checks if a file by *path* exists. Returns true if operation succeeded; "
"otherwise returns false."
msgstr ""

#: ../../reference/file.rst:87
msgid ""
":ref:`int<api_int>`  **File::_fclose** (:ref:`_FILE<api__FILE>` * "
"*stream*)"
msgstr ""

#: ../../reference/file.rst:89
msgid ""
"Closes file *stream*. Returns 0 if succeeded; otherwise returns non-zero "
"value."
msgstr ""

#: ../../reference/file.rst:95
msgid ""
":ref:`StringList<api_StringList>`  **File::_flist** "
"(:ref:`char<api_char>` * *path*)"
msgstr ""

#: ../../reference/file.rst:97
msgid "Get a file listing of a search *path* directory."
msgstr ""

#: ../../reference/file.rst:111
msgid ""
":ref:`_FILE<api__FILE>` * **File::_fopen** (:ref:`char<api_char>` * "
"*path*, :ref:`char<api_char>` * *mode*)"
msgstr ""

#: ../../reference/file.rst:113
msgid ""
"Opens the file whose name is specified in the *path* and associates it "
"with a stream that can be identified in future operations. The operations"
" that are allowed on the stream and how these are performed are defined "
"by the *mode* parameter. Allowed values of *mode* parameter:"
msgstr ""

#: ../../reference/file.rst:116
msgid ""
"\"r\" - Open a file for reading. \"w\" - Open a file for writing. The "
"*path* must marked as writable. \"a\" - Open a file for appending. The "
"*path* must marked as writable."
msgstr ""

#: ../../reference/file.rst:121
msgid ""
"Returns _FILE pointer to file stream if succeeded; otherwise returns "
"nullptr value."
msgstr ""

#: ../../reference/file.rst:127
msgid ""
":ref:`_size_t<api__size_t>`  **File::_fread** (:ref:`void<api_void>` * "
"*ptr*, :ref:`_size_t<api__size_t>`  *size*, :ref:`_size_t<api__size_t>`  "
"*count*, :ref:`_FILE<api__FILE>` * *stream*)"
msgstr ""

#: ../../reference/file.rst:129
msgid ""
"Reads an array of *count* elements, each one with a *size* of *size* "
"bytes, from the *stream* and stores them in the block of memory specified"
" by *ptr*. The file must be opened for reading."
msgstr ""

#: ../../reference/file.rst:131
msgid "Returns number of objects read."
msgstr ""

#: ../../reference/file.rst:137
msgid ""
":ref:`_size_t<api__size_t>`  **File::_fseek** (:ref:`_FILE<api__FILE>` * "
"*stream*, :ref:`int<api_int>`  *origin*)"
msgstr ""

#: ../../reference/file.rst:139
msgid ""
"Seek to a new position within a file *stream*. Returns 0 if succeeded; "
"otherwise returns non-zero value. The next read or write will occur at "
"that *origin* position. Seeking past the beginning or end of the file is "
"not allowed, and causes an error."
msgstr ""

#: ../../reference/file.rst:141
msgid "**See also** _ftell()."
msgstr ""

#: ../../reference/file.rst:147
msgid ""
":ref:`_size_t<api__size_t>`  **File::_fsize** (:ref:`_FILE<api__FILE>` * "
"*stream*)"
msgstr ""

#: ../../reference/file.rst:149
msgid "Get total length of a file *stream* in bytes."
msgstr ""

#: ../../reference/file.rst:155
msgid ""
":ref:`_size_t<api__size_t>`  **File::_ftell** (:ref:`_FILE<api__FILE>` * "
"*stream*)"
msgstr ""

#: ../../reference/file.rst:157
msgid "Determine current position within a file *stream*."
msgstr ""

#: ../../reference/file.rst:159
msgid "Returns offset in bytes from start of file."
msgstr ""

#: ../../reference/file.rst:161
msgid "**See also** _fseek()."
msgstr ""

#: ../../reference/file.rst:167
msgid ""
":ref:`_size_t<api__size_t>`  **File::_fwrite** (:ref:`void<api_void>` * "
"*ptr*, :ref:`_size_t<api__size_t>`  *size*, :ref:`_size_t<api__size_t>`  "
"*count*, :ref:`_FILE<api__FILE>` * *stream*)"
msgstr ""

#: ../../reference/file.rst:169
msgid ""
"Writes an array of *count* elements, each one with a *size* of *size* "
"bytes, from the block of memory pointed by *ptr* to the current position "
"in the *stream*. The file must be opened for writing."
msgstr ""

#: ../../reference/file.rst:171
msgid "Returns number of objects written."
msgstr ""

#: ../../reference/file.rst:177
msgid ":ref:`bool<api_bool>`  **File::_isdir** (:ref:`char<api_char>` * *path*)"
msgstr ""

#: ../../reference/file.rst:179
msgid "Determine if a file by *path* in the search *path* is really a directory."
msgstr ""

#: ../../reference/file.rst:181
msgid "Returns true if operation succeeded; otherwise returns false."
msgstr ""

#: ../../reference/file.rst:187
msgid ":ref:`bool<api_bool>`  **File::_mkdir** (:ref:`char<api_char>` * *path*)"
msgstr ""

#: ../../reference/file.rst:189
msgid ""
"Create directory. Returns true if the operation succeeded; otherwise "
"returns false."
msgstr ""

#: ../../reference/file.rst:191
msgid "**Note:** Directory can be created only if *path* marked as writable."
msgstr ""

#: ../../reference/file.rst:197
msgid ":ref:`void<api_void>`  **File::finit** (:ref:`char<api_char>` * *argv0*)"
msgstr ""

#: ../../reference/file.rst:199
msgid ""
"Initialize the file system module at *argv0* application file path. This "
"method must be called before any operations with filesytem."
msgstr ""

#: ../../reference/file.rst:201 ../../reference/file.rst:211
msgid ""
"**Note:** Usually, this method calls internally and must not be called "
"manually."
msgstr ""

#: ../../reference/file.rst:207
msgid ""
":ref:`void<api_void>`  **File::fsearchPathAdd** (:ref:`char<api_char>` * "
"*path*, :ref:`bool<api_bool>`  *isFirst* = false)"
msgstr ""

#: ../../reference/file.rst:209
msgid ""
"Add an archive or directory to the search *path*. If *isFirst* provided "
"as true the directory will be marked as writable. The Method can be "
"called multiple time to add more directories to work with."
msgstr ""

