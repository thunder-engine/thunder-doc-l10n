# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Evgeniy Prikazchikov
# This file is distributed under the same license as the Thunder Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Thunder Engine \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-15 12:05+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reference/transform.rst:3
msgid "Transform Class"
msgstr ""

#: ../../reference/transform.rst:5
msgid "Inherited: :ref:`Component<api_Component>`"
msgstr ""

#: ../../reference/transform.rst:9
msgid "Description"
msgstr ""

#: ../../reference/transform.rst:11
msgid "Position, rotation and scale of an Actor."
msgstr ""

#: ../../reference/transform.rst:13
msgid "Every Actor in a Scene has a Transform. It's used to store and manipulate the position, rotation and scale of the object. Every Transform can have a parent, which allows you to apply position, rotation and scale hierarchically."
msgstr ""

#: ../../reference/transform.rst:19
msgid "Public Methods"
msgstr ""

#: ../../reference/transform.rst:22
msgid ":ref:`Transform<api_Transform_Transform>` ()"
msgstr ""

#: ../../reference/transform.rst:24
msgid ":ref:`~Transform<api_Transform_~Transform>` ()"
msgstr ""

#: ../../reference/transform.rst:26
#: ../../reference/transform.rst:30
#: ../../reference/transform.rst:34
#: ../../reference/transform.rst:46
#: ../../reference/transform.rst:48
#: ../../reference/transform.rst:52
msgid ":ref:`Vector3<api_Vector3>`"
msgstr ""

#: ../../reference/transform.rst:26
msgid ":ref:`euler<api_Transform_euler>` () const"
msgstr ""

#: ../../reference/transform.rst:28
msgid ":ref:`Transform<api_Transform>` *"
msgstr ""

#: ../../reference/transform.rst:28
msgid ":ref:`parentTransform<api_Transform_parentTransform>` () const"
msgstr ""

#: ../../reference/transform.rst:30
msgid ":ref:`position<api_Transform_position>` () const"
msgstr ""

#: ../../reference/transform.rst:32
#: ../../reference/transform.rst:50
msgid ":ref:`Quaternion<api_Quaternion>`"
msgstr ""

#: ../../reference/transform.rst:32
msgid ":ref:`rotation<api_Transform_rotation>` () const"
msgstr ""

#: ../../reference/transform.rst:34
msgid ":ref:`scale<api_Transform_scale>` () const"
msgstr ""

#: ../../reference/transform.rst:36
#: ../../reference/transform.rst:38
#: ../../reference/transform.rst:40
#: ../../reference/transform.rst:42
#: ../../reference/transform.rst:44
msgid ":ref:`void<api_void>`"
msgstr ""

#: ../../reference/transform.rst:36
msgid ":ref:`setEuler<api_Transform_setEuler>` (const Vector3 & angles)"
msgstr ""

#: ../../reference/transform.rst:38
msgid ":ref:`setParentTransform<api_Transform_setParentTransform>` (Transform * parent, bool  force = false)"
msgstr ""

#: ../../reference/transform.rst:40
msgid ":ref:`setPosition<api_Transform_setPosition>` (const Vector3 & position)"
msgstr ""

#: ../../reference/transform.rst:42
msgid ":ref:`setRotation<api_Transform_setRotation>` (const Quaternion & rotation)"
msgstr ""

#: ../../reference/transform.rst:44
msgid ":ref:`setScale<api_Transform_setScale>` (const Vector3 & scale)"
msgstr ""

#: ../../reference/transform.rst:46
msgid ":ref:`worldEuler<api_Transform_worldEuler>` () const"
msgstr ""

#: ../../reference/transform.rst:48
msgid ":ref:`worldPosition<api_Transform_worldPosition>` () const"
msgstr ""

#: ../../reference/transform.rst:50
msgid ":ref:`worldRotation<api_Transform_worldRotation>` () const"
msgstr ""

#: ../../reference/transform.rst:52
msgid ":ref:`worldScale<api_Transform_worldScale>` () const"
msgstr ""

#: ../../reference/transform.rst:54
msgid ":ref:`Matrix4<api_Matrix4>` &"
msgstr ""

#: ../../reference/transform.rst:54
msgid ":ref:`worldTransform<api_Transform_worldTransform>` ()"
msgstr ""

#: ../../reference/transform.rst:59
msgid "Static Methods"
msgstr ""

#: ../../reference/transform.rst:62
msgid ":ref:`const MetaMethod::Table<api_const MetaMethod::Table>` *"
msgstr ""

#: ../../reference/transform.rst:62
msgid ":ref:`methods<api_Transform_methods>` ()"
msgstr ""

#: ../../reference/transform.rst:64
msgid ":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` *"
msgstr ""

#: ../../reference/transform.rst:64
msgid ":ref:`properties<api_Transform_properties>` ()"
msgstr ""

#: ../../reference/transform.rst:69
msgid "Methods Description"
msgstr ""

#: ../../reference/transform.rst:73
msgid "**Transform::Transform** ()"
msgstr ""

#: ../../reference/transform.rst:75
msgid "Default constructs an instance of Transform."
msgstr ""

#: ../../reference/transform.rst:81
msgid "**Transform::~Transform** ()"
msgstr ""

#: ../../reference/transform.rst:83
msgid "Destroys the instance of Transform. The destructor is virtual."
msgstr ""

#: ../../reference/transform.rst:89
msgid ":ref:`Vector3<api_Vector3>`  **Transform::euler** () const"
msgstr ""

#: ../../reference/transform.rst:91
msgid "Returns current rotation of the Transform in local space as Euler angles in degrees."
msgstr ""

#: ../../reference/transform.rst:93
msgid "**See also** setEuler()."
msgstr ""

#: ../../reference/transform.rst:99
msgid ":ref:`const MetaMethod::Table<api_const MetaMethod::Table>` * **Transform::methods** ()"
msgstr ""

#: ../../reference/transform.rst:105
msgid ":ref:`Transform<api_Transform>` * **Transform::parentTransform** () const"
msgstr ""

#: ../../reference/transform.rst:107
msgid "Returns parent of the transform."
msgstr ""

#: ../../reference/transform.rst:109
msgid "**See also** setParentTransform()."
msgstr ""

#: ../../reference/transform.rst:115
msgid ":ref:`Vector3<api_Vector3>`  **Transform::position** () const"
msgstr ""

#: ../../reference/transform.rst:117
msgid "Returns current position of the Transform in local space."
msgstr ""

#: ../../reference/transform.rst:119
msgid "**See also** setPosition()."
msgstr ""

#: ../../reference/transform.rst:125
msgid ":ref:`const MetaProperty::Table<api_const MetaProperty::Table>` * **Transform::properties** ()"
msgstr ""

#: ../../reference/transform.rst:131
msgid ":ref:`Quaternion<api_Quaternion>`  **Transform::rotation** () const"
msgstr ""

#: ../../reference/transform.rst:133
msgid "Returns current rotation of the Transform in local space as Quaternion."
msgstr ""

#: ../../reference/transform.rst:135
msgid "**See also** setRotation()."
msgstr ""

#: ../../reference/transform.rst:141
msgid ":ref:`Vector3<api_Vector3>`  **Transform::scale** () const"
msgstr ""

#: ../../reference/transform.rst:143
msgid "Returns current scale of the Transform in local space."
msgstr ""

#: ../../reference/transform.rst:145
msgid "**See also** setScale()."
msgstr ""

#: ../../reference/transform.rst:151
msgid ":ref:`void<api_void>`  **Transform::setEuler** (:ref:`Vector3<api_Vector3>` & *angles*)"
msgstr ""

#: ../../reference/transform.rst:153
msgid "Changes the rotation of the Transform in local space by provided Euler *angles* in degrees."
msgstr ""

#: ../../reference/transform.rst:155
msgid "**See also** euler()."
msgstr ""

#: ../../reference/transform.rst:161
msgid ":ref:`void<api_void>`  **Transform::setParentTransform** (:ref:`Transform<api_Transform>` * *parent*, :ref:`bool<api_bool>`  *force* = false)"
msgstr ""

#: ../../reference/transform.rst:163
msgid "Changing the *parent* will modify the *parent*-relative position, scale and rotation but keep the world space position, rotation and scale the same. In case of *force* flag provided as true, no recalculations of transform happen."
msgstr ""

#: ../../reference/transform.rst:165
msgid "**See also** *parent*Transform()."
msgstr ""

#: ../../reference/transform.rst:171
msgid ":ref:`void<api_void>`  **Transform::setPosition** (:ref:`Vector3<api_Vector3>` & *position*)"
msgstr ""

#: ../../reference/transform.rst:173
msgid "Changes *position* of the Transform in local space."
msgstr ""

#: ../../reference/transform.rst:175
msgid "**See also** *position*()."
msgstr ""

#: ../../reference/transform.rst:181
msgid ":ref:`void<api_void>`  **Transform::setRotation** (:ref:`Quaternion<api_Quaternion>` & *rotation*)"
msgstr ""

#: ../../reference/transform.rst:183
msgid "Changes the *rotation* of the Transform in local space by provided Quaternion."
msgstr ""

#: ../../reference/transform.rst:185
msgid "**See also** *rotation*()."
msgstr ""

#: ../../reference/transform.rst:191
msgid ":ref:`void<api_void>`  **Transform::setScale** (:ref:`Vector3<api_Vector3>` & *scale*)"
msgstr ""

#: ../../reference/transform.rst:193
msgid "Changes the *scale* of the Transform in local space."
msgstr ""

#: ../../reference/transform.rst:195
msgid "**See also** *scale*()."
msgstr ""

#: ../../reference/transform.rst:201
msgid ":ref:`Vector3<api_Vector3>`  **Transform::worldEuler** () const"
msgstr ""

#: ../../reference/transform.rst:203
msgid "Returns current rotation of the transform in world space as Euler angles in degrees."
msgstr ""

#: ../../reference/transform.rst:209
msgid ":ref:`Vector3<api_Vector3>`  **Transform::worldPosition** () const"
msgstr ""

#: ../../reference/transform.rst:211
msgid "Returns current position of the transform in world space."
msgstr ""

#: ../../reference/transform.rst:217
msgid ":ref:`Quaternion<api_Quaternion>`  **Transform::worldRotation** () const"
msgstr ""

#: ../../reference/transform.rst:219
msgid "Returns current rotation of the transform in world space as Quaternion."
msgstr ""

#: ../../reference/transform.rst:225
msgid ":ref:`Vector3<api_Vector3>`  **Transform::worldScale** () const"
msgstr ""

#: ../../reference/transform.rst:227
msgid "Returns current scale of the transform in world space."
msgstr ""

#: ../../reference/transform.rst:233
msgid ":ref:`Matrix4<api_Matrix4>` & **Transform::worldTransform** ()"
msgstr ""

#: ../../reference/transform.rst:235
msgid "Returns current transform matrix in world space."
msgstr ""
